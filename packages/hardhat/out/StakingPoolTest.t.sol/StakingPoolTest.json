{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryProxy",
      "outputs": [
        {
          "internalType": "contract FactoryProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensInitialiser",
      "outputs": [
        {
          "internalType": "contract FrensInitialiser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensManager",
      "outputs": [
        {
          "internalType": "contract FrensManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolSetter",
      "outputs": [
        {
          "internalType": "contract FrensPoolSetter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "contract IStakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDepositWrongPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBadWithdrawalCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPubKeyMismatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStakeTwoStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        },
        {
          "internalType": "uint72",
          "name": "y",
          "type": "uint72"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234620002fc5760006201000162ff00ff198254161781556706942000000013376f219ab540356cbb839cbe05303d7705fa60018060a01b0319908082601654161760165573b9e155e65b5c4d66df28da8e9a0957f06f11bc048260175416176017556e0c2e074ec69a0dfb2997ba6c7d2e1e826018541617601855816019541617601955630111173881601a541617601a55620a11ce81601b541617601b55610b0b81601c541617601c55601d541617601d55620000c4601e5462000301565b90601f91828111620002a5575b506061601e90815581527fb01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d2560008051602062012c89833981519152556f9d952488240ca8db87d8a9ebad3a8aa760801b7f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35155815460019260209291620001579062000301565b81811162000276575b50604181558082527f010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c8383205562000199835462000301565b9080821162000250575b7f84843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc36002867fbd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d027878760c1825581815220917fb257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afa835582015501557f4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c26021556040516201294a90816200033f8239f35b838352838320910160051c8101906003015b81811015620001a357828155840162000262565b818352848083868620930160051c830192015b8281106200029957505062000160565b84815501859062000289565b601e8252820160051c60008051602062012c89833981519152017f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3525b818110620002f05750620000d1565b828155600101620002e1565b600080fd5b90600182811c9216801562000333575b60208310146200031d57565b634e487b7160e01b600052602260045260246000fd5b91607f16916200031156fe608060405260043610156200001357600080fd5b6000803560e01c8063020f12da14620045fb5780630a9254e4146200351a5780630c56ae3b14620034ef578063223e6be414620034c457806325b5e62f146200349957806330dbf887146200346e57806332551a6014620034435780633a1143da14620030e45780633a76846314620030b8578063456f30ca1462002b6a578063469048401462002b3f5780634ccd89c414620028aa578063591167c7146200287f5780635c97929d146200237d5780635dcf6be514620021525780635efae37114620017615780635f583c1d146200173657806363c72d60146200170b5780637509c39b14620016e05780638adcff7714620014fa57806390f805d91462000f4e578063929230f21462000f2357806394892dda1462000c1c57806394cd95e31462000bf15780639e535c691462000a945780639ecdeb8c1462000a69578063a1b8adcb1462000a3e578063b7ab10ee1462000389578063ba414fa61462000360578063bc073b181462000335578063bc48e947146200030a578063c09cec7714620002df578063cc91c43614620002b4578063ec5568891462000289578063edc91a92146200025e578063f8ccbf471462000237578063fa7626d414620002135763fb47e3a214620001e657600080fd5b346200021057806003193601126200021057601b546040516001600160a01b039091168152602090f35b80fd5b5034620002105780600319360112620002105760ff60209154166040519015158152f35b5034620002105780600319360112620002105760ff6020915460101c166040519015158152f35b503462000210578060031936011262000210576015546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576013546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576016546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057601c546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057600b546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057600c546040516001600160a01b039091168152602090f35b5034620002105780600319360112620002105760206200037f62004cbb565b6040519015158152f35b503462000210576040366003190112620002105780620003a862004b54565b620003b262004b6b565b6001600160401b0382161580158062000a0d575b156200077c5750601b5491925090620003e8906001600160a01b03166200503b565b60105483906001600160a01b0316803b15620006ac578160049160405192838092633e7ea84160e21b82526001600160401b038916905af18015620006a15762000760575b5050601254601b54604051632f745c5960e01b81526001600160a01b03918216600482015260248101869052929160209184916044918391165afa9182156200067a57849262000726575b506200048682151562004f18565b60105460405163378de45b60e01b81526004810184905290602090829060249082906001600160a01b03165afa80156200071b578590620006e0575b620004d891506001600160401b03851662004f73565b83600080516020620128d5833981519152803b15620006ac5781809160646040518094819363f28dceb360e01b83526020600484015260126024840152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b60448401525af18015620006a157620006c8575b506011546001600160a01b0316803b15620006ac578160249160405192838092632188224760e21b82528860048301526001600160401b038816905af18015620006a157620006b0575b506010546001600160a01b0316803b15620006ac578160249160405192838092632188224760e21b82528860048301526001600160401b038816905af18015620006a15762000685575b505060105460405163378de45b60e01b81526004810193909352602090839060249082906001600160a01b03165afa9182156200067a57849262000638575b5062000635926001600160401b03806200062f93169116620050f7565b62004f73565b80f35b9091506020813d60201162000671575b81620006576020938362004c09565b810103126200066c5751906200063562000612565b600080fd5b3d915062000648565b6040513d86823e3d90fd5b620006909062004bc3565b6200069d578338620005d3565b8380fd5b6040513d84823e3d90fd5b5080fd5b620006bb9062004bc3565b6200069d57833862000589565b620006d39062004bc3565b6200069d5783386200053f565b506020813d60201162000712575b81620006fd6020938362004c09565b810103126200066c57620004d89051620004c2565b3d9150620006ee565b6040513d87823e3d90fd5b9091506020813d60201162000757575b81620007456020938362004c09565b810103126200066c5751903862000478565b3d915062000736565b6200076b9062004bc3565b620007785782386200042d565b8280fd5b15620008685750600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620007bc6004820162004eeb565b03925af19081156200085d57839162000842575b5050601b546001600160a01b0390620007eb9082166200503b565b6010541690813b156200083e576001600160401b03600484926040519485938492633e7ea84160e21b845216905af18015620006a1576200082b57505080f35b620008369062004bc3565b620002105780f35b5050fd5b6200084d9062004bc3565b6200085a578138620007d0565b50fd5b6040513d85823e3d90fd5b601b5490916001600160a01b0391620008839083166200503b565b816010541690813b15620009b5576001600160401b03600486926040519485938492633e7ea84160e21b845216905af19081156200067a578491620009f5575b5050806012541690602081601b5416604460405180958193632f745c5960e01b835260048301528860248301525afa9182156200067a578492620009b9575b50600080516020620128d5833981519152803b15620009b55784604051809263f28dceb360e01b82528183816200093c6004820162004ea1565b03925af19081156200071b5785916200099d575b50506010541691823b156200099857602484926001600160401b03946040519586948593632188224760e21b8552600485015216905af18015620006a1576200082b57505080f35b505050fd5b620009a89062004bc3565b6200099857833862000950565b8480fd5b935090506020833d8211620009ec575b81620009d86020938362004c09565b810103126200066c57839251903862000902565b3d9150620009c9565b62000a009062004bc3565b6200083e578238620008c3565b506801bc16d674ec80000062000a366001600160401b0384166001600160401b038616620050f7565b1115620003c6565b50346200021057806003193601126200021057600f546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057600a546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057601054604051638da5cb5b60e01b8152906020906001600160a01b039082908490600490829085165afa9283156200067a57849362000bbb575b5080601a5416921682810362000af5578380f35b600080516020620128b583398151915260806040518481526025858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b6060820152a1604051926040845262000b5e6040850162004db6565b9083850152837f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9485920390a16040519182916040835262000ba36040840162004dd3565b918301520390a162000bb462004df0565b3880808380f35b62000be1919350823d841162000be9575b62000bd8818362004c09565b81019062004d95565b913862000ae1565b503d62000bcc565b503462000210578060031936011262000210576008546040516001600160a01b039091168152602090f35b503462000210576003199080823601126200021057601a546001600160a01b039062000c4a9082166200503b565b8060105416602154813b156200069d5762000c7f849283926040519485809481936303a483bb60e61b8352600483016200532d565b03925af180156200085d5790839162000f0b575b5050600080516020620128d583398151915290813b15620007785760405163f28dceb360e01b8152838160648183602097886004840152600f60248401526e0e0eac496caf240dad2e6dac2e8c6d608b1b60448401525af180156200067a5790849162000ef3575b50506010541692602154843b156200069d57604051632595a71b60e11b8152608060048201526002608482015261dead60f01b60a482015260c06024820152601f54909360009390916001919080831c90838116801562000ee8575b858310811462000e4b578260c48a0152908160001462000ec9575060011462000e6a575b5085850301604486015260009382549182811c92818116801562000e5f575b858510811462000e4b5784845290811562000e2d575060011462000dde575b50505050839483858181958195606483015203925af18015620006a1576200082b5750f35b600084815293989550909190600080516020620128958339815191525b82851062000e19575094979190920101925085905083858162000db9565b80548486018b015293890193810162000dfb565b60ff191683860152505090151560051b010191508483858162000db9565b634e487b7160e01b88526022600452602488fd5b93607f169362000d9a565b909450601f6000527fa03837a25210ee280c2113ff4b77ca23440b19d4866cca721c801278fd08d80783836000925b84841062000eb35750505060e49150860101933862000d7b565b805460e4858c0101520191019083859162000e99565b905060e492965060ff191682880152151560051b860101933862000d7b565b91607f169162000d57565b62000efe9062004bc3565b6200077857823862000cfb565b62000f169062004bc3565b620006ac57813862000c93565b503462000210578060031936011262000210576014546040516001600160a01b039091168152602090f35b503462000210576040366003190112620002105762000f6c62004b82565b6024803568ffffffffffffffffff808216938483036200066c571690848483101580620014f0575b80620014dc575b156200120c57601b546001600160a01b039062000fba9082166200503b565b8060105416803b156200077857828591600460405180948193633e7ea84160e21b83525af19081156200085d578391620011f4575b505080601254169481601b541691604051968793632f745c5960e01b8552600485015284838501528360446020998a935afa9283156200067a578493620011bc575b506200103f83151562004f18565b8060105416946040518881858163378de45b60e01b9a8b82528960048301525afa908115620011b157869162001176575b506200107d908862004f73565b8160105416803b156200117257604051630441a3e760e41b81526004810186905268ffffffffffffffffff92909216602483015290949081908690604490829084905af19485156200116557889562001144575b505060105416936040519485938492835260048301525afa9283156200071b5785936200110b575b505062000635926200062f916200511b565b9080929350813d83116200113c575b62001126818362004c09565b810103126200066c575190826200062f620010f9565b503d6200111a565b620011529192955062004bc3565b620011615785928838620010d1565b8780fd5b50604051903d90823e3d90fd5b8580fd5b809650898092503d8311620011a9575b62001192818362004c09565b810103126200066c576200107d8a95519062001070565b503d62001186565b6040513d88823e3d90fd5b935091508583813d8111620011ec575b620011d8818362004c09565b810103126200066c57879251913862001031565b503d620011cc565b620011ff9062004bc3565b620006ac57813862000fef565b9350909182620012cc575050600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004eeb565b03925af19081156200085d578391620012b4575b5050601b546001600160a01b0390620012809082166200503b565b60105416803b156200083e578290600460405180948193633e7ea84160e21b83525af18015620006a1576200082b57505080f35b620012bf9062004bc3565b6200085a57813862001265565b6801bc16d674ec80000083111562001319575050600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004ea1565b909160018060a01b03906200133282601b54166200503b565b8160105416803b1562001172578590600460405180948193633e7ea84160e21b83525af19081156200071b578591620014c4575b5050806012541691602082601b5416604460405180968193632f745c5960e01b8352600483015289868301525afa9283156200071b57859362001488575b50620013b283151562004f18565b600080516020620128d583398151915290813b15620011725760146064879283604051958694859363f28dceb360e01b855260206004860152840152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b60448401525af19081156200071b57859162001470575b50506010541691823b156200099857604051630441a3e760e41b8152600481019290925268ffffffffffffffffff1660248201529082908290604490829084905af18015620006a1576200082b57505080f35b6200147b9062004bc3565b620009985783386200141d565b945091506020843d8211620014bb575b81620014a76020938362004c09565b810103126200066c578493519138620013a4565b3d915062001498565b620014cf9062004bc3565b6200099857833862001366565b506801bc16d674ec80000083111562000f9b565b5082151562000f94565b50346200021057806003193601126200021057601a5481906001600160a01b0390620015289082166200503b565b600080516020620128d5833981519152803b156200083e5760405163f28dceb360e01b80825260206004830152601e60248301527f7769746864726177616c2063726564656e7469616c206d69736d617463680000604483015290848160648183875af19081156200071b578591620016c8575b5050826010541660215490803b1562001172576040516303a483bb60e61b81529186918391829084908290620015d6906004830162005a20565b03925af19081156200071b578591620016b0575b5050813b15620009985760405190815260206004820152601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d61746368000060448201529083908290606490829084905af19081156200085d57839162001698575b50506010541660215490803b156200083e57604051632595a71b60e11b8152918391839182908490829062001685906004830162005a20565b03925af18015620006a1576200082b5750f35b620016a39062004bc3565b6200085a5781386200164c565b620016bb9062004bc3565b62000998578338620015ea565b620016d39062004bc3565b620009985783386200159c565b50346200021057806003193601126200021057600e546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057601a546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576011546040516001600160a01b039091168152602090f35b50346200021057604036600319011262000210576200177f62004b9b565b906200178a62004baf565b9163ffffffff809116926801bc16d674ec7fffff90818502851592868204148317156200213e578390046801bc16d674ec80000095818703938785116200212a578015806200211d575b1562001ebe575050600a54601d546001600160a01b039591861693908616843b15620011615760405190632f2e356d60e11b8252600482015287816044818360249960058b8401525af1801562001eb35790889162001e9b575b50506200183f86601b5416620054ef565b6010918683541695863b1562001e1a57604051898160048189633e7ea84160e21b9c8d83525af1801562001e1e57908a9162001e83575b5050601c966200188989895416620054ef565b8885541690813b1562001db2579060048b92604051948593849283525af1801562001d88579089929162001e67575b5081809381928a8754169083921691821562001e5d575bf1156200071b57600080516020620128d583398151915290813b1562001e595760405163f28dceb360e01b80825260206004830152601c60248301527f757365207769746864726177207768656e206e6f74207374616b656400000000604483015290888160648183885af1801562001d885790899162001e41575b50508682541693843b1562001e1a57604051898188818363379607f560e01b9a8b8352600160048401525af1801562001e1e57908a9162001e29575b50506200199888601a5416620054ef565b87835416602154813b1562001db257620019cc8b928392604051948580948193632595a71b60e11b8352600483016200542a565b03925af1801562001e1e57908a9162001e02575b5050878354163196600588029a888c046005148915171562001def5762001a1160648c9d9c9a9b9c04809b6200511b565b8b80601b54169262001a7862001a3d85319262001a348589541631998762005597565b0480956200511b565b92601d54163160405162001a518162004bed565b6014815273666565526563697069656e742e62616c616e636560601b602082015262005be6565b6001831462001de6575b6001821462001ddd575b62001a9d62001add929382620050f7565b93316040519162001aae8362004bed565b8683527f616c69636542616c616e6365207072652d636c61696d2077726f6e67000000006020840152620056f8565b8b601b541691873b1562001db25760405163ca669fa760e01b9384825260048201528b818c81838d5af190811562001db6578c9162001dc5575b50508c87541662001b58813160405162001b318162004bed565b60148152737374616b696e6720506f6f6c2062616c616e636560601b602082015262005be6565b803b1562001dc1578b80918c8c60405194859384928352600160048401525af1801562001db6578e918d9162001d97575b50509162001bb162001bb89262001bcf94601b5416319062001baa620055f1565b9162005734565b85620050f7565b938c8454163162001bc86200562c565b91620056f8565b8a825416863b1562001d9357604051918252600482015288818981838a5af190811562001d8857899162001d70575b505083548a16606481311162001cfa57505050823b1562001172578590604051938491825281838162001c3460048201620055ab565b03925af180156200071b578792869162001cdd575b50505416803b156200069d578392839260405194859384928352600260048401525af18015620006a15762001cc5575b505062000635915b601d5416316040519162001c958362004bed565b601f83527f66656520726563697069656e742062616c616e636520696e636f727265637400602084015262005734565b62001cd09062004bc3565b6200077857823862001c79565b62001ceb9192935062004bc3565b6200069d578590843862001c49565b92509593509795939150803b156200069d578392839260405194859384928352600260048401525af18015620006a15762001d58575b505062000635938262001d52925416319062001d4b62005667565b916200589f565b62001c81565b62001d639062004bc3565b620009b557843862001d30565b62001d7b9062004bc3565b6200116157873862001bfe565b6040513d8b823e3d90fd5b8980fd5b62001da491925062004bc3565b62001db2578c8b3862001b89565b8a80fd5b6040513d8e823e3d90fd5b8b80fd5b62001dd09062004bc3565b62001db2578a3862001b17565b8b915062001a8c565b8b925062001a82565b634e487b7160e01b8b526011600452878bfd5b62001e0d9062004bc3565b62001e1a578838620019e0565b8880fd5b6040513d8c823e3d90fd5b62001e349062004bc3565b62001e1a57883862001987565b62001e4c9062004bc3565b620011615787386200194b565b8680fd5b506108fc620018cf565b62001e759092919262004bc3565b6200116157879038620018b8565b62001e8e9062004bc3565b62001e1a57883862001876565b62001ea69062004bc3565b62001e595786386200182e565b6040513d8a823e3d90fd5b869750949193909460001462001f0b5750505050600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004eeb565b909192935060018060a01b039362001f2785601b5416620054ef565b846010541690813b1562001e59578660049160405192838092633e7ea84160e21b968783525af190811562002112578791620020fa575b505062001f6f85601c5416620054ef565b8460105416803b1562001e595760048792604051948593849283525af19081156200071b578591620020e2575b505062001fad83601a54166200503b565b82601054169060215491803b156200117257604051632595a71b60e11b8152928691849182908490829062001fe690600483016200542a565b03925af19182156200071b578592620020c6575b508180938192866010541690839216918215620020bc575bf1156200116557600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b82528183816200205260048201620055ab565b03925af19081156200085d578391620020a4575b505060105416803b156200085a5781809160246040518094819363379607f560e01b8352600160048401525af18015620006a1576200082b57505080f35b620020af9062004bc3565b6200085a57813862002066565b506108fc62002012565b620020d49092919262004bc3565b620009985783903862001ffa565b620020ed9062004bc3565b6200099857833862001f9c565b620021059062004bc3565b6200117257853862001f5e565b6040513d89823e3d90fd5b50606486851611620017d4565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b85526011600452602485fd5b5034620002105780600319360112620002105760108054601b546001600160a01b0391821631919062002187908216620054ef565b80835416803b15620009b55784604051633e7ea84160e21b815281816004816801bc16d674ec80000080975af18015620006a15762002365575b505082018083116200213e5790620021e0859282865416319062004f73565b8060195416936040518381600481630621fd1360e41b998a82525afa9081156200067a57849162002347575b5060208151910120936200222483601a54166200503b565b8282541660215490803b1562001172576040516303a483bb60e61b815291869183918290849082906200225b90600483016200532d565b03925af19081156200071b5785916200232f575b505082825416803b15620009b557848091600460405180948193633a4b66f160e01b83525af180156200071b578491869162002314575b5050620022b7925416319062004f73565b601954169260046040518095819382525afa80156200085d5762000635928491620022ed575b5060208151910120141562004f18565b6200230d91503d8086833e62002304818362004c09565b81019062005165565b38620022dd565b6200232191925062004bc3565b6200069d57828438620022a6565b6200233a9062004bc3565b6200069d5783386200226f565b6200235e91503d8086833e62002304818362004c09565b386200220c565b620023709062004bc3565b620009b5578438620021c1565b50346200021057604036600319011262000210576200239b62004b9b565b90620023a662004baf565b63ffffffff8093166801bc16d674ec7fffff93848202821595838204148617156200213e57819004926801bc16d674ec80000090848203938285116200212a57878798158062002872575b1562002828575050601b546001600160a01b03949062002413908616620054ef565b60109385855416803b1562001e1a5760405189816004818c633e7ea84160e21b968783525af190811562001e1e578a9162002810575b50506200245a87601c5416620054ef565b86865416803b1562001d935760048a92604051958693849283525af191821562001eb3578892620027f4575b5081809381928888541690839216918215620027ea575bf1156200067a57600080516020620128d583398151915290813b15620011725760405163f28dceb360e01b80825260206004830152601c60248301527f757365207769746864726177207768656e206e6f74207374616b65640000000060448301529190878160648183885af190811562001eb3578891620027d2575b50508484541695863b15620011615760405188816024818363379607f560e01b9c8d8352600160048401525af190811562001d88578991620027ba575b50506200256886601a5416620054ef565b8585541660215490803b1562001d9357604051632595a71b60e11b8152918a9183918290849082906200259f90600483016200542a565b03925af190811562001d88578991620027a2575b505085601b5416319086601c54163192620025d48888541692833162005597565b0491620025e38383316200511b565b916001841462002799575b6001831462002790575b803b1562001db2578a809160248c60405194859384928352600160048401525af190811562002785578b9162002769575b50509062002655620026446200266d946200265c94620050f7565b89601b5416319062001baa620055f1565b83620050f7565b9186601c54163162001bc86200562c565b83548516606481311162002703575050813b15620011725785906040519283918252818381620026a060048201620055ab565b03925af19081156200071b578591620026eb575b5050541690813b156200083e5782916024839260405194859384928352600260048401525af18015620006a1576200082b57505080f35b620026f69062004bc3565b62000998578338620026b4565b935094915050819492943b15620007785782916024839260405194859384928352600260048401525af18015620006a15762002751575b50506200063591601c5416319062001d4b62005667565b6200275c9062004bc3565b620007785782386200273a565b620027779093929362004bc3565b62001d935790893862002629565b6040513d8d823e3d90fd5b8a9250620025f8565b8a9350620025ee565b620027ad9062004bc3565b62001161578738620025b3565b620027c59062004bc3565b6200116157873862002557565b620027dd9062004bc3565b62001e595786386200251a565b506108fc6200249d565b620028029092919262004bc3565b62001e595786903862002486565b6200281b9062004bc3565b62001e1a57883862002449565b909594919392501562001f0b5750505050600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004eeb565b50606485841611620023f1565b503462000210578060031936011262000210576012546040516001600160a01b039091168152602090f35b50346200021057602080600319360112620006ac5768ffffffffffffffffff620028d362004b82565b169082821580158062002b2b575b1562002aaf575050601b546001600160a01b039290620029039084166200503b565b838360105416803b15620006ac57818391600460405180948193633e7ea84160e21b83525af18015620006a15762002a97575b505082601254168284601b5416604460405180948193632f745c5960e01b835260048301528960248301525afa9081156200071b57859162002a64575b506200298181151562004f18565b8284601054169160246040518094819363378de45b60e01b835260048301525afa9081156200071b57859162002a30575b50600493620029c384928462004f73565b6010541660405194858092630b45241160e11b82525afa9182156200067a578492620029f7575b5062000635925062004f73565b90915082813d831162002a28575b62002a11818362004c09565b810103126200066c576200063591519038620029ea565b503d62002a05565b90508281813d831162002a5c575b62002a4a818362004c09565b810103126200066c57516004620029b2565b503d62002a3e565b90508281813d831162002a8f575b62002a7e818362004c09565b810103126200066c57513862002973565b503d62002a72565b62002aa29062004bc3565b6200069d57833862002936565b909291501562002af257600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004eeb565b600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004ea1565b506801bc16d674ec800000841115620028e1565b50346200021057806003193601126200021057601d546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057601b546001600160a01b03919062002b97908316620054ef565b8160105416803b15620006ac57816801bc16d674ec80000091600460405180948193633e7ea84160e21b83525af18015620006a157908291620030a0575b505081601a5416600080516020620128d583398151915290813b1562000778576040519063ca669fa760e01b82526004820152828160248183865af180156200085d5790839162003088575b50508260105416602154813b156200069d5762002c5884928392604051948580948193632595a71b60e11b8352600483016200542a565b03925af180156200085d5790839162003070575b5050803b15620006ac576040516323f2866760e11b8152306004820181905260248201529082908290604490829084905af18015620006a15790829162003058575b5050816015541691823b15620006ac57604051906369d8a87360e11b825260406004830152600091601e5492600184811c8186169586156200304d575b60209687831081146200303957826044870152908160001462003016575060011462002fbe575b50859683878181958195602483015203925af19081156200067a57849162002fa6575b509082816015541660248360105416604051978893849263404df7b160e11b845260048401525af1938415620006a15760049462002f72575b506010541660405193848092631865c57d60e01b82525afa9182156200085d57839262002f1a575b506040518181019065195e1a5d195960d21b82526006815262002db98162004bed565b5190209160405162002dea83828162002ddc818301968781519384920162004c2b565b810103808452018262004c09565b5190209160405162002dfc8162004bed565b600a8152691b9bdd08195e1a5d195960b21b8382015283821415908162002e21578580f35b62002e43600080516020620128f58339815191529160405191829182620056c9565b0390a162002e52575b80808580f35b600080516020620128b583398151915260806040518481526025858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b6060820152a1604051926040845262002ebb6040850162004db6565b9083850152837fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999485920390a16040519182916040835262002f006040840162004dd3565b918301520390a162002f1162004df0565b38808062002e4c565b9091503d8084833e62002f2e818362004c09565b81019082818303126200069d578051906001600160401b038211620009b557019080601f830112156200069d57815162002f6a92840162005129565b903862002d96565b62002f9690843d861162002f9e575b62002f8d818362004c09565b81019062004ca1565b503862002d6e565b503d62002f81565b62002fb19062004bc3565b6200083e57823862002d35565b601e60009081529192507f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3505b818310620030015750508201606401908562002d12565b80548584016064015291860191830162002fea565b60ff191660648087019190915291151560051b8501909101925086905062002d12565b634e487b7160e01b85526022600452602485fd5b90607f169062002ceb565b620030639062004bc3565b6200021057803862002cae565b6200307b9062004bc3565b620006ac57813862002c6c565b620030939062004bc3565b620006ac57813862002c21565b620030ab9062004bc3565b6200021057803862002bd5565b503462000210578060031936011262000210576020604051600080516020620128d58339815191528152f35b5034620002105780600319360112620002105760108054601b546001600160a01b03918216319392906200311a908316620054ef565b81815416803b156200069d5760405190633e7ea84160e21b9182815285816004816801bc16d674ec80000080965af18015620011b1579086916200342b575b50508501948581116200213e5762003178859685855416319062004f73565b8360195416906040518681600481630621fd1360e41b968782525afa908115620021125787916200340d575b506020815191012090620031bc86601a5416620054ef565b8585541660215490803b1562001e1a57604051632595a71b60e11b81529189918391829084908290620031f390600483016200532d565b03925af190811562001eb3578891620033f5575b50506200321a9086865416319062004f73565b8585601954169260046040518095819382525afa8015620011b15762003251928791620033de575060208151910120141562004f18565b6200326083601b54166200503b565b600080516020620128d583398151915290813b15620009b55760405163f28dceb360e01b8082526020600483015260166024830152756e6f7420616363657074696e67206465706f7369747360501b60448301529190868160648183885af190811562002112578791620033c6575b50508484541690813b1562001e595760019160048892604051948593849283525af1908115620011b1578691620033ae575b5050813b15620009b5576040519081526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b60448201529084908290606490829084905af19081156200067a57849162003396575b50505416803b156200085a5781600191602460405180948193632188224760e21b83528160048401525af18015620006a1576200082b5750f35b620033a19062004bc3565b6200083e5782386200335c565b620033b99062004bc3565b620009b557843862003301565b620033d19062004bc3565b62001172578538620032cf565b6200230d91503d8089833e62002304818362004c09565b620034009062004bc3565b62001e5957863862003207565b6200342491503d8089833e62002304818362004c09565b38620031a4565b620034369062004bc3565b620009b557843862003159565b503462000210578060031936011262000210576009546040516001600160a01b039091168152602090f35b50346200021057806003193601126200021057600d546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576017546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576018546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576010546040516001600160a01b039091168152602090f35b503462000210578060031936011262000210576040516118ba808201908282106001600160401b03831117620045e7579082916200e6ab8339039082f08015620011655760018060a01b0316600d54816001600160601b0360a01b821617600d556040519161029f91828401928484106001600160401b03851117620045d357918560209492869462005c4386391617815203019082f08015620011655760018060a01b031681600e54826001600160601b0360a01b821617600e5516176001600160601b0360a01b601354161760135560018060a01b03600d541660405190610b4c90818301918383106001600160401b03841117620045bf5791839160209362006a598439815203019082f08015620011655760018060a01b03166001600160601b0360a01b6009541617600955600080516020620128d58339815191523b1562000210576040516323f2866760e11b8152306004820181905260248201528190818160448183600080516020620128d58339815191525af18015620006a157620045a7575b506009546001600160a01b0316803b156200085a57818091608460405180948193631b1c2c7f60e01b835280600484015260406024840152601060448401526f233932b739a4b734ba34b0b634b9b2b960811b60648401525af18015620006a1576200458f575b506009546001600160a01b0316803b156200085a5781809160446040518094819363cd8ce31f60e01b8352806004840152600160248401525af18015620006a15762004577575b506009546017546001600160a01b039182169116813b156200083e578291608483926040519485938492630a3a8ceb60e41b8452600484015260406024840152600b60448401526a535356526567697374727960a81b60648401525af18015620006a1576200455f575b506009546016546001600160a01b039182169116813b156200083e578291608483926040519485938492630a3a8ceb60e41b8452600484015260406024840152600f60448401526e11195c1bdcda5d10dbdb9d1c9858dd608a1b60648401525af18015620006a15762004547575b506009546018546001600160a01b039182169116813b156200083e578291608483926040519485938492630a3a8ceb60e41b84526004840152604060248401526003604484015262454e5360e81b60648401525af18015620006a1576200452f575b505060018060a01b03600d5416906040518061268b8101106001600160401b0361268b83011117620043cb57819261268b6200ace0833961268b82015260208161268b810103019082f080156200116557601280546001600160a01b039283166001600160a01b03198216811790925560095491929190911690813b15620009985760848492918380936040519687958694631b1c2c7f60e01b86521617600484015260406024840152600e60448401526d4672656e73506f6f6c536861726560901b60648401525af18015620006a15762004517575b506009546012546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b845260048401528160248401525af18015620006a157620044ff575b505060018060a01b03600d541690604051806129308101106001600160401b0361293083011117620043cb5781926129306200ff658339612930820152602081612930810103019082f080156200116557600f80546001600160a01b039283166001600160a01b03198216811790925560095491929190911690813b15620009985760848492918380936040519687958694631b1c2c7f60e01b8652161760048401526040602484015260126044840152715374616b696e67506f6f6c466163746f727960701b60648401525af18015620006a157620044e7575b50600954600f546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b845260048401528160248401525af18015620006a157620044cf575b505060018060a01b03600d541690604051806113cc8101106001600160401b036113cc83011117620043cb5781926113cc6200991483396113cc8201526020816113cc810103019082f080156200116557601480546001600160a01b039283166001600160a01b03198216811790925560095491929190911690813b15620009985760848492918380936040519687958694631b1c2c7f60e01b86521617600484015260406024840152600f60448401526e233932b739a837b7b629b2ba3a32b960891b60648401525af18015620006a157620044b7575b506009546014546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b84526004840152600160248401525af18015620006a1576200449f575b505060018060a01b03600d54169060405180610dd88101106001600160401b03610dd883011117620043cb578192610dd8620075a58339610dd8820152602081610dd8810103019082f080156200116557600a80546001600160a01b039283166001600160a01b03198216811790925560095491929190911690813b15620009985760848492918380936040519687958694631b1c2c7f60e01b86521617600484015260406024840152600c60448401526b233932b739a6b0b730b3b2b960a11b60648401525af18015620006a15762004487575b50600954600a546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b84526004840152600160248401525af18015620006a1576200446f575b505060018060a01b03600d541690604051806105bc8101106001600160401b036105bc83011117620043cb5781926105bc6200935883396105bc8201526020816105bc810103019082f080156200116557601580546001600160a01b039283166001600160a01b03198216811790925560095491929190911690813b15620009985760848492918380936040519687958694631b1c2c7f60e01b86521617600484015260406024840152600b60448401526a4672656e734f7261636c6560a81b60648401525af18015620006a15762004457575b506009546015546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b845260048401528160248401525af18015620006a1576200443f575b505060018060a01b03600d54169060405180610fdb8101106001600160401b03610fdb83011117620043cb578192610fdb6200837d8339610fdb820152602081610fdb810103019082f080156200116557600b80546001600160a01b039283166001600160a01b03198216811790925560095491929190911690813b15620009985760848492918380936040519687958694631b1c2c7f60e01b86521617600484015260406024840152600f60448401526e233932b739a6b2ba30a432b63832b960891b60648401525af18015620006a15762004427575b50600954600b546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b845260048401528160248401525af18015620006a1576200440f575b505060018060a01b03600d541690604051806113408101106001600160401b0361134083011117620043cb5781926113406200d36b8339611340820152602081611340810103019082f080156200116557600c80546001600160a01b038381166001600160a01b03198316179092556009549092911690813b15620009985760408051631b1c2c7f60e01b81529385166001600160a01b03909216919091176004840152602483015260166044830152754672656e73506f6f6c5368617265546f6b656e55524960501b606483015282908290608490829084905af18015620006a157620043f7575b50600954600c546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b845260048401528160248401525af18015620006a157620043df575b505060018060a01b03600d54169060405180610b778101106001600160401b03610b7783011117620043cb578192610b7762005ee28339610b77820152602081610b77810103019082f080156200116557600880546001600160a01b038381166001600160a01b03198316179092556009549092911690813b15620009985760408051631b1c2c7f60e01b81529385166001600160a01b0390921691909117600484015260248301526008604483015267119c995b9cd05c9d60c21b606483015282908290608490829084905af18015620006a157620043b3575b506009546008546001600160a01b039182169116813b156200083e57829160448392604051948593849263cd8ce31f60e01b845260048401528160248401525af18015620006a1576200439b575b5050600080516020620128d58339815191523b1562000210576040516323f2866760e11b8152306004820181905260248201528190818160448183600080516020620128d58339815191525af18015620006a15762004383575b50600d546001600160a01b0316803b156200085a5781809160046040518094819363febffd9960e01b83525af18015620006a1576200436b575b5050601354601a54604051630319e90960e41b8082526001600160a01b03928316600483015260248201859052929091602091839160449183918891165af19081156200085d57839162004347575b50601080546001600160a01b0319166001600160a01b03928316179055601354601a546040519384528216600484015260248301849052602091839160449183918791165af1908115620006a157829162004323575b5060018060a01b03166001600160601b0360a01b601154161760115580f35b62004340915060203d60201162000be95762000bd8818362004c09565b3862004304565b62004364915060203d60201162000be95762000bd8818362004c09565b38620042ae565b620043769062004bc3565b620002105780386200425f565b6200438e9062004bc3565b6200021057803862004225565b620043a69062004bc3565b62000210578038620041cb565b620043be9062004bc3565b620002105780386200417d565b634e487b7160e01b82526041600452602482fd5b620043ea9062004bc3565b62000210578038620040a2565b620044029062004bc3565b6200021057803862004054565b6200441a9062004bc3565b6200021057803862003f6b565b620044329062004bc3565b6200021057803862003f1d565b6200444a9062004bc3565b6200021057803862003e45565b620044629062004bc3565b6200021057803862003df7565b6200447a9062004bc3565b6200021057803862003d23565b620044929062004bc3565b6200021057803862003cd4565b620044aa9062004bc3565b6200021057803862003bff565b620044c29062004bc3565b6200021057803862003bb0565b620044da9062004bc3565b6200021057803862003ad8565b620044f29062004bc3565b6200021057803862003a8a565b6200450a9062004bc3565b62000210578038620039af565b620045229062004bc3565b6200021057803862003961565b6200453a9062004bc3565b620002105780386200388a565b620045529062004bc3565b6200021057803862003828565b6200456a9062004bc3565b62000210578038620037ba565b620045829062004bc3565b6200021057803862003750565b6200459a9062004bc3565b6200021057803862003709565b620045b29062004bc3565b62000210578038620036a2565b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b84526041600452602484fd5b50346200021057604036600319011262000210576200461962004b54565b6001600160401b036200462b62004b6b565b911690811580158062004b2c575b1562004a0d5750601b5462004657906001600160a01b03166200503b565b60105483906001600160a01b0316803b15620006ac57818491600460405180948193633e7ea84160e21b83525af18015620006a157620049f5575b5050601254601b54604051632f745c5960e01b81526001600160a01b03918216600482015260248082018790529392909160209183916044918391165afa9081156200071b578591620049bd575b50620046ee81151562004f18565b60105460405163378de45b60e01b815260048101839052906020908290869082906001600160a01b03165afa8015620011b157869062004982575b6200473691508562004f73565b84600080516020620128d5833981519152803b15620006ac5781809160646040518094819363f28dceb360e01b83526020600484015260118b840152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b60448401525af18015620006a1576200496a575b506010546001600160401b0393909316926001600160a01b0316803b15620006ac576040518281878188632188224760e21b968783528560048401525af19081156200085d57839162004952575b50506010546001600160a01b031690813b1562000778578491868492604051948593849283528860048401525af18015620006a1576200493a575b505060105460405163378de45b60e01b81526004810192909252909260209184919082906001600160a01b03165afa9182156200067a578492620048fb575b50620048766200487e91600494620050f7565b918262004f73565b601054604051630b45241160e11b81529260209184919082906001600160a01b03165afa9081156200085d578391620048be575b62000635925062004f73565b90506020823d602011620048f2575b81620048dc6020938362004c09565b810103126200066c5762000635915190620048b2565b3d9150620048cd565b9291506020833d60201162004931575b816200491a6020938362004c09565b810103126200066c57915190916200487662004863565b3d91506200490b565b620049459062004bc3565b620009b557843862004824565b6200495d9062004bc3565b620006ac578138620047e9565b620049759062004bc3565b620009b55784386200479b565b506020813d602011620049b4575b816200499f6020938362004c09565b810103126200066c5762004736905162004729565b3d915062004990565b90506020813d602011620049ec575b81620049db6020938362004c09565b810103126200066c575138620046e0565b3d9150620049cc565b62004a009062004bc3565b6200077857823862004692565b9192911562004a5257508091600080516020620128d5833981519152803b156200083e5782604051809263f28dceb360e01b8252818381620012516004820162004eeb565b601b546001600160a01b039062004a6b9082166200503b565b8060105416803b156200069d578390600460405180978193633e7ea84160e21b83525af180156200085d5762004b15575b829350806012541690602081601b5416604460405180958193632f745c5960e01b835260048301528860248301525afa9182156200067a578492620009b95750600080516020620128d5833981519152803b15620009b55784604051809263f28dceb360e01b82528183816200093c6004820162004ea1565b91909262004b239062004bc3565b90829062004a9c565b506801bc16d674ec80000062004b4c6001600160401b03841685620050f7565b111562004639565b600435906001600160401b03821682036200066c57565b602435906001600160401b03821682036200066c57565b6004359068ffffffffffffffffff821682036200066c57565b6004359063ffffffff821682036200066c57565b6024359063ffffffff821682036200066c57565b6001600160401b03811162004bd757604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111762004bd757604052565b90601f801991011681019081106001600160401b0382111762004bd757604052565b60005b83811062004c3f5750506000910152565b818101518382015260200162004c2e565b6001600160401b03811162004bd757601f01601f191660200190565b3d1562004c9c573d9062004c808262004c50565b9162004c90604051938462004c09565b82523d6000602084013e565b606090565b908160209103126200066c575180151581036200066c5790565b6000805460081c60ff161562004cd5575460081c60ff1690565b80600080516020620128d5833981519152803b62004cf257505090565b90915060405160208101908282526519985a5b195960d21b60408201526040815260608101908082106001600160401b03831117620045bf578162004d6f6024879695949387946040526080810195630667f9d760e41b875262004d5e82518092608485019062004c2b565b810103600481018452018262004c09565b51925af15062004d9262004d8262004c6c565b6020808251830101910162004ca1565b90565b908160209103126200066c57516001600160a01b03811681036200066c5790565b600a8152690808115e1c1958dd195960b21b602082015260400190565b600a815269080808081058dd1d585b60b21b602082015260400190565b600080516020620128d5833981519152803b62004e1a575b5061010061ff00196000541617600055565b6040519060208201908082526519985a5b195960d21b6040840152600160608401526060835260808301918383106001600160401b0384111762004bd75760008362004e8a60248397849760405260a08101956370ca10bb60e01b875262004d5e8251809260a485019062004c2b565b51925af15062004e9962004c6c565b503862004e08565b60809060208152602960208201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686040820152680c2dc406664408ae8d60bb1b60608201520190565b60609060208152601260208201527136bab9ba103232b837b9b4ba1032ba3432b960711b60408201520190565b1562004f2057565b600080516020620128b5833981519152606060405160208152601760208201527f4572726f723a20417373657274696f6e204661696c65640000000000000000006040820152a162004f7162004df0565b565b81810362004f7f575050565b6200502890604090600080516020620128b58339815191526080835160208152602260208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e8582015261745d60f01b6060820152a181519382855262004fea83860162004db6565b906020860152847fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89586920390a18151928284938452830162004dd3565b9060208301520390a162004f7162004df0565b600080516020620128d5833981519152803b156200066c5760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af180156200067a57620050e1575b50813b15620007785782916024839260405194859384926303223eab60e11b845260048401525af18015620006a157620050cd575050565b620050d9829162004bc3565b620002105750565b620050ef9093919362004bc3565b913862005095565b919082018092116200510557565b634e487b7160e01b600052601160045260246000fd5b919082039182116200510557565b90929192620051388162004c50565b9162005148604051938462004c09565b8294828452828201116200066c57602062004f7193019062004c2b565b6020818303126200066c578051906001600160401b0382116200066c57019080601f830112156200066c57815162004d929260200162005129565b90600091601e549060019082821c9180841693841562005276575b60209485851081146200526057848452908115620052425750600114620051e3575b50505050565b9293945090601e6000527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35092846000945b8386106200522d575050505001019038808080620051dd565b80548587018301529401938590820162005214565b60ff191685840152505090151560051b0101915038808080620051dd565b634e487b7160e01b600052602260045260246000fd5b92607f1692620051bb565b90600091601f549060019082821c9180841693841562005322575b60209485851081146200526057848452908115620052425750600114620052c35750505050565b9293945090601f6000527fa03837a25210ee280c2113ff4b77ca23440b19d4866cca721c801278fd08d80792846000945b8386106200530d575050505001019038808080620051dd565b805485870183015294019385908201620052f4565b92607f16926200529c565b9190608083526200534160808401620051a0565b620053556020918581038387015262005281565b84810360408601528154600091600182811c9281811680156200541f575b86851081146200540b57848452908115620053e857506001146200539e575b50505060609150930152565b60008581526000805160206201289583398151915295945092905b818410620053d257505060609350010138808062005392565b85548484018601529485019492840192620053b9565b915050606094935060ff929192191683830152151560051b010138808062005392565b634e487b7160e01b86526022600452602486fd5b93607f169362005373565b9190608083526200543e60808401620051a0565b620054526020918581038387015262005281565b84810360408601528154600091600182811c928181168015620054e4575b86851081146200540b57848452908115620053e857506001146200549a5750505060609150930152565b60008581526000805160206201289583398151915295945092905b818410620054ce57505060609350010138808062005392565b85548484018601529485019492840192620054b5565b93607f169362005470565b600080516020620128d5833981519152803b156200066c5760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af180156200067a5762005581575b50813b156200077857829160248392604051948593849263ca669fa760e01b845260048401525af18015620006a157620050cd575050565b6200558f9093919362004bc3565b913862005549565b818102929181159184041417156200510557565b60809060208152602560208201527f6d7573742062652067726561746572207468616e203130302077656920746f20604082015264636c61696d60d81b60608201520190565b60405190620056008262004bed565b601d82527f616c69636542616c616e636520706f73742d636c61696d2077726f6e670000006020830152565b604051906200563b8262004bed565b601a82527f626f6242616c616e6365207072652d636c61696d2077726f6e670000000000006020830152565b60405190620056768262004bed565b601b82527f626f6242616c616e636520706f73742d636c61696d2077726f6e6700000000006020830152565b90602091620056bd8151809281855285808601910162004c2b565b601f01601f1916010190565b90608062004d929260408152600560408201526422b93937b960d91b60608201528160208201520190620056a2565b8181036200570557505050565b600080516020620128f58339815191526200572b62004f719460405191829182620056c9565b0390a162004f73565b91600262005743838562005a00565b116200574e57505050565b600080516020620128f583398151915262005771604092835191829182620056c9565b0390a162005780828462005a00565b600281116200578f5750505050565b608092825190600080516020620128b5833981519152856020938481526022858201527f4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e8782015261745d60f01b6060820152a18351958691858352620057f886840162004db6565b90848401527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a897889384920390a1845180918682526200583a87830162004dd3565b90858301520390a184848451858152600a8682015269204d61782044656c746160b01b6060820152600284820152a1600a83519380855284015269202020202044656c746160b01b6060840152820152a16200589562004df0565b38808080620051dd565b916003620058ae838562005a00565b11620058b957505050565b600080516020620128f5833981519152620058dc604092835191829182620056c9565b0390a1620058eb828462005a00565b60038111620058fa5750505050565b608092825190600080516020620128b5833981519152856020938481526022858201527f4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e8782015261745d60f01b6060820152a183519586918583526200596386840162004db6565b90848401527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a897889384920390a184518091868252620059a587830162004dd3565b90858301520390a184848451858152600a8682015269204d61782044656c746160b01b6060820152600384820152a1600a83519380855284015269202020202044656c746160b01b6060840152820152a16200589562004df0565b8181111562005a15579062004d92916200511b565b62004d92916200511b565b9190608083526000601e5460019181831c83831692831562005bdb575b602093848310811462005bc7578260808a0152908160001462005baa575060011462005b4d575b5060408682038084890152600f83526e01000000000000000000000000dead60881b8484015201604087015260009180549384811c94818116801562005b42575b83871081146200540b57866040860152908160001462005b1f575060011462005ad45750505060609150930152565b600082815294929350600080516020620128958339815191525b83861062005b0a57505050506060918291010138808062005392565b80548587016060015294820194810162005aee565b915050606094915084935060ff191683830152151560051b010138808062005392565b95607f169562005aa5565b9050601e6000527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35082846000925b84841062005b945750505060a091508601013862005a64565b805460a0858c0101520191019084849162005b7b565b905060a0925060ff191682880152151560051b8601013862005a64565b634e487b7160e01b84526022600452602484fd5b90607f169062005a3d565b60009190829162005c2f604051809262005c1a60208301956309710a9d60e41b8752604060248501526064840190620056a2565b90604483015203601f19810183528262004c09565b51906a636f6e736f6c652e6c6f675afa5056fe60803461008257601f61029f38819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b0316919091179055604051610201908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561002c575b361561001f575b61001d610064565b005b610027610064565b610015565b6000803560e01c6354fd4d5014610043575061000e565b3461006157806003193601126100615760ff90541660805260206080f35b80fd5b60405160208101906f636f6e74726163742e6164647265737360801b8252715374616b696e67506f6f6c466163746f727960701b6030820152602281526100aa81610153565b5190206000546040516321f8a72160e01b815260048101929092526020908290602490829060081c6001600160a01b03165afa8015610125576100f5916000916100f7575b50610131565b565b610118915060203d811161011e575b6101108183610185565b8101906101a7565b386100ef565b503d610106565b6040513d6000823e3d90fd5b9050600080809236828037818036925af13d82803e1561014f573d90f35b3d90fd5b6060810190811067ffffffffffffffff82111761016f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761016f57604052565b908160209103126101c657516001600160a01b03811681036101c65790565b600080fdfea2646970667358221220ab3a2c20ed8be06973d2de0d224dcddbe89687ad6a213a3dfcd04847d9dad47f64736f6c634300081100336080604090808252346101815780610b77803803809161001f8285610186565b833960209283918101031261018157516001600160a01b03919082811681036101815760008054610100600160a81b0319811660089390931b610100600160a81b031692831780835586516f636f6e74726163742e6164647265737360801b8187019081526d4672656e73506f6f6c536861726560901b6030830152601e82529396949592949390928389019290916001600160401b0384118585101761016d576024848785948294838f52895190206321f8a72160e01b845260448a015260081c165afa928315610163578793610127575b5050600180546001600160a01b03191693909216929092179055506001600160a81b031916179055516109b790816101c08239f35b90809293503d831161015c575b61013e8185610186565b8101031261015857518181168103610158573880806100f2565b8480fd5b503d610134565b88513d89823e3d90fd5b634e487b7160e01b89526041600452602489fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176101a957604052565b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816354fd4d50146107eb575063a2d6c6da1461003957600080fd5b346107e757602092836003193601126107e45781358351908582016f636f6e74726163742e6164647265737360801b928382526e233932b739a6b2ba30a432b63832b960891b6030820152601f81526100918161082f565b5190206001600160a01b039081906100a8906108f4565b169286519263ef21184f60e01b845280878501528584602481885afa9384156107985790869182956107c8575b5060248951809781936324a8b96b60e21b83528b8301525afa9384156107be57908693929186956107a2575b5085826101348a518c81019085825265141b519bdb9d60d21b60308201526016815261012c8161082f565b5190206108f4565b168951988980926378bf42b960e11b82525afa968715610798578697610778575b5090839186826101868b518d810190858252684672656e734c6f676f60b81b60308201526019815261012c8161082f565b168a51968780926305b3806b60e11b82525afa94851561076e5790879291839661074e575b506101d3908a518c810191825264576176657360d81b60308201526015815261012c8161082f565b168851928380926354ea17bf60e11b82525afa9485156107435792887f3c7465787420666f6e742d73697a653d2231352e352220783d223230302220799796936106e996938661037c9796610713575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a0152610355815180928860f48d01910161080c565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b6101148201528651906103b18261012899898b8501910161080c565b016103c482518093888a8501910161080c565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2273616e7322206c65747465722d73706163696e673d22366101688501526e11103334b6361e913bb434ba32911f60891b6101888501526611115413d4d25560ca1b610197850152661e17ba32bc3a1f60c91b938461019e8201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101a58201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101c58201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101e58201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d22610205820152663bb434ba32911f60c91b6102258201526105168251809361022c96878501910161080c565b0191820152816102318201527f3c7465787420666f6e742d73697a653d2231382e372220783d223230302220796102388201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e746102588201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027882015267113bb434ba32911f60c11b6102988201526f4652454e5320504f4f4c205354414b4560801b6102a0820152816102b08201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102b78201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102d78201526a34ba3c9e91171a1110179f60a91b6102f78201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103028201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103228201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610342820152723934b0b611103334b6361e913bb434ba32911f60691b6103628201528251906106d582610375958d878501910161080c565b01918201520361035c810185520183610861565b610705835194859381855251928380928601528585019061080c565b601f01601f19168101030190f35b6401022aa24160dd1b9296509061073b913d8091833e6107338183610861565b810190610883565b949038610223565b8751903d90823e3d90fd5b6101d3919650610767903d8086833e6107338183610861565b95906101ab565b89513d89823e3d90fd5b8492919750610790903d8089833e6107338183610861565b969091610155565b88513d88823e3d90fd5b6107b79195503d8088833e6107338183610861565b9338610101565b87513d87823e3d90fd5b6107dd9195503d8084833e6107338183610861565b93386100d5565b80fd5b8280fd5b84903461080857816003193601126108085760ff60209254168152f35b5080fd5b60005b83811061081f5750506000910152565b818101518382015260200161080f565b6040810190811067ffffffffffffffff82111761084b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761084b57604052565b6020818303126108ef57805167ffffffffffffffff918282116108ef57019082601f830112156108ef57815190811161084b57604051926108ce601f8301601f191660200185610861565b818452602082840101116108ef576108ec916020808501910161080c565b90565b600080fd5b60018060a01b036000602082825460081c16936024604051809681936321f8a72160e01b835260048301525afa928315610974578193610935575b50505090565b909192506020813d821161096c575b8161095160209383610861565b81010312610808575191821682036107e4575038808061092f565b3d9150610944565b50604051903d90823e3d90fdfea264697066735822122093012c90d37068df528c1afb827f0cde006d66cd7fe65f2154a212f048131dbb64736f6c6343000811003360803461008257601f610b4c38819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b0316919091179055604051610aae908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c80631b1c2c7f146106d057806354fd4d50146106b05780636b1c239e146106055780636b742b9314610406578063a3a8ceb0146102ae578063cd8ce31f146101b25763fe9a364f1461006d57600080fd5b346101ae5760203660031901126101ae576100866107ca565b835482516353adc3e960e11b81526001600160a01b0394929160209082908590829060081c89165afa9081156101a4576100cc9186918891610176575b501633146108d1565b82516f185b1b1bddd9590b98dbdb9d1c9858dd60821b6020820190815260609290921b6001600160601b031916603082015261011581604481015b03601f19810183528261080a565b5190209260005460081c1692833b15610171576044600092838551968794859363abfdcced60e01b8552840152600160248401525af1908115610167575061015b575080f35b610164906107e0565b80f35b513d6000823e3d90fd5b600080fd5b610197915060203d811161019d575b61018f818361080a565b8101906108b2565b386100c3565b503d610185565b84513d88823e3d90fd5b8280fd5b50346101ae57806003193601126101ae576101cb6107ca565b91602435928315158094036102aa57845483516353adc3e960e11b81526001600160a01b03929160209082908690829060081c87165afa9081156102a05761021e918491899161017657501633146108d1565b83516e636f6e74726163742e65786973747360881b6020820190815260609290921b6001600160601b031916602f82015261025c8160438101610107565b5190209060005460081c16803b1561017157600092836044928651978895869463abfdcced60e01b865285015260248401525af1908115610167575061015b575080f35b85513d89823e3d90fd5b8480fd5b50829034610402576102bf3661082c565b835483516353adc3e960e11b8152919360209290916001600160a01b039190849082908a90829060081c86165afa9081156103f85790610309929188916103db57501633146108d1565b610366838251848101907f65787465726e616c2e636f6e74726163742e6164647265737300000000000000825261035e6039828a5161034e818d8c868601910161098c565b810103601981018452018261080a565b5190206109af565b8051918201927565787465726e616c2e636f6e74726163742e6e616d6560501b84526001600160601b03199060601b166036830152602a8252606082019082821067ffffffffffffffff8311176103c65761016495965052519020610a00565b604187634e487b7160e01b6000525260246000fd5b6103f29150853d871161019d5761018f818361080a565b896100c3565b83513d89823e3d90fd5b5080fd5b50346101ae576104153661082c565b909160018060a01b038581815460081c168351946353adc3e960e11b865260209586818a81865afa9081156105fb5761045991869186916105e457501633146108d1565b845161049d603082898101946f636f6e74726163742e6164647265737360801b865261048d815180928d868601910161098c565b810103601081018452018261080a565b51902090803b156101ae57602483928651948593849263070a51bb60e11b84528c8401525af180156103f8576105d1575b5085908251958487018761050a88836021916c636f6e74726163742e6e616d6560981b82526001600160601b03199060601b16600d8201520190565b039761051e601f19998a810183528261080a565b51902091835460081c1691823b156105cd57602484928387519586948593633daecf3160e21b85528401525af180156105c3576105af575b50506101649361059b926105a79251938491820195866023916e636f6e74726163742e65786973747360881b82526001600160601b03199060601b16600f8201520190565b0390810183528261080a565b519020610929565b6105b8906107e0565b6102aa578438610556565b83513d84823e3d90fd5b8380fd5b6105dd909691966107e0565b94386104ce565b6101979150893d8b1161019d5761018f818361080a565b86513d86823e3d90fd5b5090346101ae5760203660031901126101ae576106206107ca565b835483516353adc3e960e11b815291926001600160a01b0392916020918391829060081c86165afa9081156106a65791610668916101649593879161017657501633146108d1565b516f185b1b1bddd9590b98dbdb9d1c9858dd60821b6020820190815260609290921b6001600160601b03191660308201526105a78160448101610107565b84513d87823e3d90fd5b83823461040257816003193601126104025760ff60209254169051908152f35b5090346101ae576106e03661082c565b845484516353adc3e960e11b815291936020926001600160a01b039290918491839190829060081c86165afa9081156107c057956107336107a1936101079593610164998b916107a957501633146108d1565b61076c858251848101906f636f6e74726163742e6164647265737360801b825261035e6030828c61048d815180928c868601910161098c565b51928391820194856021916c636f6e74726163742e6e616d6560981b82526001600160601b03199060601b16600d8201520190565b519020610a00565b6101979150853d871161019d5761018f818361080a565b86513d89823e3d90fd5b600435906001600160a01b038216820361017157565b67ffffffffffffffff81116107f457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176107f457604052565b906040600319830112610171576004356001600160a01b0381168103610171579167ffffffffffffffff60243581811161017157826023820112156101715780600401359182116107f4576040519261088f601f8401601f19166020018561080a565b828452602483830101116101715781600092602460209301838601378301015290565b9081602091031261017157516001600160a01b03811681036101715790565b156108d857565b60405162461bcd60e51b815260206004820152602360248201527f4163636f756e74206973206e6f7420612074656d706f7261727920677561726460448201526234b0b760e91b6064820152608490fd5b60009060018060a01b03825460081c1690813b156101ae57829160448392604051958693849263abfdcced60e01b845260048401528160248401525af190811561098057506109755750565b61097e906107e0565b565b604051903d90823e3d90fd5b60005b83811061099f5750506000910152565b818101518382015260200161098f565b600080546001600160a01b039391929060081c8416803b156105cd5783929183604492604051978895869463ca446dd960e01b865260048601521660248401525af190811561098057506109755750565b91909160009060018060a01b03825460081c1690813b156101ae5793829160649495836040519687809581946306e8995560e41b8352600483015260406024830152610a5b815180928160448601526020868601910161098c565b601f01601f191681010301925af19081156109805750610975575056fea2646970667358221220d7c370b9eb7dea316f311127a4f91c8fe32a7c0697efc967b1e45fe25be07c0964736f6c6343000811003360803461008257601f610dd838819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b0316919091179055604051610d3a908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c80631b1c2c7f146107865780635498c0631461076157806354fd4d50146107415780635e5c6ada146105da5780636b1c239e1461052f5780636b742b9314610315578063a3a8ceb0146101bd5763fe9a364f1461007857600080fd5b346101b95760203660031901126101b957610091610905565b835482516353adc3e960e11b81526001600160a01b0394929160209082908590829060081c89165afa9081156101af576100d79186918891610181575b50163314610a28565b82516f185b1b1bddd9590b98dbdb9d1c9858dd60821b6020820190815260609290921b6001600160601b031916603082015261012081604481015b03601f198101835282610961565b5190209260005460081c1692833b1561017c576044600092838551968794859363abfdcced60e01b8552840152600160248401525af19081156101725750610166575080f35b61016f9061091b565b80f35b513d6000823e3d90fd5b600080fd5b6101a2915060203d81116101a8575b61019a8183610961565b810190610a09565b386100ce565b503d610190565b84513d88823e3d90fd5b8280fd5b50829034610311576101ce36610983565b835483516353adc3e960e11b8152919360209290916001600160a01b039190849082908a90829060081c86165afa9081156103075790610218929188916102ea5750163314610a28565b610275838251848101907f65787465726e616c2e636f6e74726163742e6164647265737300000000000000825261026d6039828a5161025d818d8c8686019101610a80565b8101036019810184520182610961565b519020610aa3565b8051918201927565787465726e616c2e636f6e74726163742e6e616d6560501b84526001600160601b03199060601b166036830152602a8252606082019082821067ffffffffffffffff8311176102d55761016f95965052519020610b0b565b604187634e487b7160e01b6000525260246000fd5b6103019150853d87116101a85761019a8183610961565b896100ce565b83513d89823e3d90fd5b5080fd5b50346101b95761032436610983565b90918460018060a01b0380825460081c168351946353adc3e960e11b865260209586818a81865afa90811561052557610368918591879161050e5750163314610a28565b61037187610bcf565b84516103b5603082898101946f636f6e74726163742e6164647265737360801b86526103a5815180928d8686019101610a80565b8101036010810184520182610961565b519020813b156104ec578391602483928751948593849263070a51bb60e11b84528d8401525af18015610504579083916104f0575b50508251958487018761042588836021916c636f6e74726163742e6e616d6560981b82526001600160601b03199060601b16600d8201520190565b0397610439601f19998a8101835282610961565b51902091835460081c1691823b156104ec57602484928387519586948593633daecf3160e21b85528401525af180156104e2576104ca575b505061016f936104b6926104c29251938491820195866023916e636f6e74726163742e65786973747360881b82526001600160601b03199060601b16600f8201520190565b03908101835282610961565b519020610b83565b6104d39061091b565b6104de578438610471565b8480fd5b83513d84823e3d90fd5b8380fd5b6104f99061091b565b6103115781386103ea565b84513d85823e3d90fd5b6101a29150893d8b116101a85761019a8183610961565b86513d87823e3d90fd5b5090346101b95760203660031901126101b95761054a610905565b835483516353adc3e960e11b815291926001600160a01b0392916020918391829060081c86165afa9081156105d057916105929161016f959387916101815750163314610a28565b516f185b1b1bddd9590b98dbdb9d1c9858dd60821b6020820190815260609290921b6001600160601b03191660308201526104c28160448101610112565b84513d87823e3d90fd5b50346101b957806003193601126101b9576105f3610905565b835482516353adc3e960e11b8152602435946001600160a01b0393909260209290839082908690829060081c89165afa9081156107375761063f9186918a916107205750163314610a28565b60648610156106e55790610676879493928651838101906c1999594b9c9958da5c1a595b9d609a1b8252600d815261026d81610945565b8451908101906b70726f746f636f6c2e66656560a01b8252600c815261069b81610945565b51902091835460081c1690813b156104ec578360449286519788958694637152429d60e11b865285015260248401525af19081156106dc5750610166575080f35b513d84823e3d90fd5b845162461bcd60e51b81528084018390526015602482015274191bdb89dd08191bc8195b481b1a5ad9481d1a185d605a1b6044820152606490fd5b6101a29150853d87116101a85761019a8183610961565b86513d8a823e3d90fd5b83823461031157816003193601126103115760ff60209254169051908152f35b83346107835760203660031901126107835761016f61077e610905565b610bcf565b80fd5b5090346101b95761079636610983565b845484516353adc3e960e11b8152919360209290916001600160a01b039160089190911c82169084818581855afa9283156108fb5787936107e0928b916108e45750163314610a28565b8387519360248286016f636f6e74726163742e6164647265737360801b9687825261081a603082878a519a01996103a5818484018d610a80565b519020918a5194859384926321f8a72160e01b84528301525afa908882156108d9576108b4946103a561026d60308b6101129a9861086861016f9f9961087f998f99916108bc575b50610bcf565b88519485928b840197885251809285850190610a80565b51928391820194856021916c636f6e74726163742e6e616d6560981b82526001600160601b03199060601b16600d8201520190565b519020610b0b565b6108d391508c8d3d106101a85761019a8183610961565b38610862565b8851903d90823e3d90fd5b6101a29150873d89116101a85761019a8183610961565b88513d8b823e3d90fd5b600435906001600160a01b038216820361017c57565b67ffffffffffffffff811161092f57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761092f57604052565b90601f8019910116810190811067ffffffffffffffff82111761092f57604052565b90604060031983011261017c576004356001600160a01b038116810361017c579167ffffffffffffffff60243581811161017c578260238201121561017c57806004013591821161092f57604051926109e6601f8401601f191660200185610961565b8284526024838301011161017c5781600092602460209301838601378301015290565b9081602091031261017c57516001600160a01b038116810361017c5790565b15610a2f57565b60405162461bcd60e51b815260206004820152602360248201527f4163636f756e74206973206e6f7420612074656d706f7261727920677561726460448201526234b0b760e91b6064820152608490fd5b60005b838110610a935750506000910152565b8181015183820152602001610a83565b600080546001600160a01b039391929060081c8416803b156104ec5783929183604492604051978895869463ca446dd960e01b865260048601521660248401525af1908115610aff5750610af45750565b610afd9061091b565b565b604051903d90823e3d90fd5b91909160009060018060a01b03825460081c1690813b156101b95793829160649495836040519687809581946306e8995560e41b8352600483015260406024830152610b668151809281604486015260208686019101610a80565b601f01601f191681010301925af1908115610aff5750610af45750565b60009060018060a01b03825460081c1690813b156101b957829160448392604051958693849263abfdcced60e01b845260048401528160248401525af1908115610aff5750610af45750565b6040516e636f6e74726163742e65786973747360881b602080830191825260609390931b6001600160601b031916602f83015290610c108160438101610112565b51902060008054604051633d70e7e560e11b8152600481019390935283908390602490829060081c6001600160a01b03165afa918215610cf7578192610cbd575b5050610c5a5750565b6084906040519062461bcd60e51b82526004820152603660248201527f6d6574686f64206e6f7420616c6c6f77656420666f7220636f6e747261637473604482015275207468617420777269746520746f2073746f7261676560501b6064820152fd5b9091508281813d8311610cf0575b610cd58183610961565b81010312610311575190811515820361078357503880610c51565b503d610ccb565b50604051903d90823e3d90fdfea2646970667358221220827bc8984a5eb52fd503ae7bd3da675dcfc6829583409f2da8057912d4b27e5564736f6c6343000811003360803461008257601f610fdb38819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b0316919091179055604051610f3d908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b6000803560e01c90816354fd4d501461008e5750806392a2e5ac14610085578063a090f9b41461007c578063de1c7f7014610073578063edd148a21461006a5763ef21184f1461006257600080fd5b61000e610412565b5061000e6103e4565b5061000e61039f565b5061000e610282565b5061000e61011d565b346100ac57806003193601126100ac5760ff90541660805260206080f35b80fd5b602090600319011261000e5760043590565b60005b8381106100d45750506000910152565b81810151838201526020016100c4565b906020916100fd815180928185528580860191016100c1565b601f01601f1916010190565b90602061011a9281815201906100e4565b90565b503461000e5761012c366100af565b61017f6040519161016b8361015d602082019384602b916a1c1bdbdb0b999bdc8b9a5960aa1b8252600b8201520190565b03601f198101855284610488565b91519091206001600160a01b039190610647565b1661018861097f565b90603061019483610a27565b5360786101a083610a3d565b5360295b600181116101ca576101c6836101ba8415610ebc565b60405191829182610109565b0390f35b9080600f6102079216601081101561020c575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a6101fd8486610a4e565b5360041c91610ea1565b6101a4565b610214610a10565b6101dd565b6001600160a01b0381160361000e57565b919091604081019260408252606051809452606082019160806000955b80871061026357505061011a93945060208184039101526100e4565b909360019063ffffffff86511681526020809101950196019590610247565b503461000e57602036600319011261000e576004356102a081610219565b6040516020810191657075624b657960d01b83526bffffffffffffffffffffffff199060601b166026820152601a81526102d981610443565b5190206000908160018060a01b03815460081c1691602460405180948193630180634360e71b835260048301525afa918215610392575b809261032f575b6101c661032384610a7b565b6040519182918261022a565b9091503d8082843e6103418184610488565b82019160208184031261038e5780519067ffffffffffffffff821161038a57019082601f830112156100ac57506103846101c6928260206103239451910161092c565b91610317565b8280fd5b5080fd5b61039a61063a565b610310565b503461000e57602036600319011261000e576103c56004356103c081610219565b610bbc565b906101c6604051928392151583526040602084015260408301906100e4565b503461000e576101c66103fe6103f9366100af565b610878565b6040519182916020835260208301906100e4565b503461000e576101c66103fe610427366100af565b610524565b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761045f57604052565b61046761042c565b604052565b6060810190811067ffffffffffffffff82111761045f57604052565b90601f8019910116810190811067ffffffffffffffff82111761045f57604052565b60209067ffffffffffffffff81116104c8575b601f01601f19160190565b6104d061042c565b6104bd565b604051906020820182811067ffffffffffffffff8211176104fa575b60405260008252565b61050261042c565b6104f1565b6040519061051482610443565b60018252600360fc1b6020830152565b6040519061056e60208301836105528483602b916a1c1bdbdb0b999bdc8b9a5960aa1b8252600b8201520190565b0393610566601f1995868101835282610488565b519020610647565b6105ae60405160208101906a199c995b8b995e1a5d195960aa1b82523360601b602b82015284603f820152603f81526105a68161046c565b519020610755565b61061a5761060661061261011a946103f99460405193849160208301968790916042926d19195c1bdcda5d0b985b5bdd5b9d60921b83526bffffffffffffffffffffffff199060601b16600e83015260228201520190565b03908101835282610488565b5190206106bf565b50505061011a610507565b9081602091031261000e575161011a81610219565b506040513d6000823e3d90fd5b6000546040516321f8a72160e01b815260048101929092526020908290602490829060081c6001600160a01b03165afa9081156106b2575b60009161068a575090565b61011a915060203d81116106ab575b6106a38183610488565b810190610625565b503d610699565b6106ba61063a565b61067f565b60005460405163bd02d0f560e01b815260048101929092526020908290602490829060081c6001600160a01b03165afa908115610730575b600091610702575090565b906020823d8211610728575b8161071b60209383610488565b810103126100ac57505190565b3d915061070e565b61073861063a565b6106f7565b9081602091031261000e5751801515810361000e5790565b600054604051633d70e7e560e11b815260048101929092526020908290602490829060081c6001600160a01b03165afa9081156107c0575b600091610798575090565b61011a915060203d81116107b9575b6107b18183610488565b81019061073d565b503d6107a7565b6107c861063a565b61078d565b50634e487b7160e01b600052601260045260246000fd5b50634e487b7160e01b600052601160045260246000fd5b8115610805570490565b61080d6107cd565b0490565b811561081b570690565b6108236107cd565b0690565b9061083a602092828151948592016100c1565b0190565b9061087660216040518094600360fc1b602083015261086681518092602086860191016100c1565b8101036001810185520183610488565b565b66038d7ea4c68000670de0b6b3a7640000610894818404610dfc565b920604906108a182610dfc565b9160648110610918575b600a11610900575b602161011a9160405193816108d28693518092602080870191016100c1565b8201601760f91b60208201526108f182518093602087850191016100c1565b01036001810184520182610488565b90602161090f61011a9261083e565b929150506108b3565b91610924600a9161083e565b9290506108ab565b90929192610939816104aa565b916109476040519384610488565b82948284528282011161000e5760206108769301906100c1565b908160011b918083046002149015171561097757565b6108766107e4565b6040519061098c8261046c565b602a82526040366020840137565b906109a4826104aa565b6109b16040519182610488565b82815280926109c2601f19916104aa565b0190602036910137565b604051906109d982610443565b601082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152565b6001906000198114610a08570190565b61083a6107e4565b50634e487b7160e01b600052603260045260246000fd5b602090805115610a35570190565b61083a610a10565b602190805160011015610a35570190565b906020918051821015610a6057010190565b610a68610a10565b010190565b906001820180921161097757565b90610a8e610a898351610961565b61099a565b610a966109cc565b600093845b8151811015610b4f5780610b26610ac1610b20610ad5610acf610ac1610b4a9789610a4e565b516001600160f81b03191690565b60f81c90565b610af0610ac1610aea8a5160ff8095166107fb565b8a610a4e565b610b06610afc87610961565b918d1a918b610a4e565b53610b17610acf610ac1878a610a4e565b88519116610811565b86610a4e565b610b44610b3a610b3584610961565b610a6d565b91891a9187610a4e565b536109f8565b610a9b565b505060405161060f60f31b602082015292935061011a91839150610b77906022830190610827565b03601f198101835282610488565b60208183031261000e5780519067ffffffffffffffff821161000e57019080601f8301121561000e57815161011a9260200161092c565b90604051610c26610c20610c146020938481019061056681610b77610c05856019907f65787465726e616c2e636f6e74726163742e616464726573730000000000000081520190565b62454e5360e81b815260030190565b6001600160a01b031690565b93610d6e565b604051630178b8bf60e01b8152600481018290526001600160a01b0394851694919291908281602481895afa908115610d61575b600091610d44575b5016918215610d3457604051631ef3fca760e31b815260048101829052610cc4958390829060249082905afa928315610d27575b600093610d05575b505060009192604051808097819463691f343160e01b8352600483019190602083019252565b03915afa928315610cf8575b600093610cdc57509190565b61011a91933d8091833e610cf08183610488565b810190610b85565b610d0061063a565b610cd0565b600093509081610d2092903d106107b9576107b18183610488565b9138610c9e565b610d2f61063a565b610c96565b505050905060009061011a6104d5565b610d5b9150833d85116106ab576106a38183610488565b38610c62565b610d6961063a565b610c5a565b6028805b610dc0575050602860002060405160208101917f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e28352604082015260408152610dba8161046c565b51902090565b6f181899199a1a9b1b9c1cb0b131b232b360811b91600f9182821684901a600019820153600119019283928260041c161a825360081c91610d72565b8015610e98576000818181805b610e805750610e178161099a565b935b610e235750505090565b6000198101908111610e73575b8091600a91610e5d60308484068101809111610e66575b60f81b6001600160f81b031916861a9187610a4e565b53049081610e19565b610e6e6107e4565b610e47565b610e7b6107e4565b610e30565b9150610e8d600a916109f8565b910480849291610e09565b5061011a610507565b8015610eaf575b6000190190565b610eb76107e4565b610ea8565b15610ec357565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fdfea2646970667358221220aab169d69187ab524f056baec67003a21f8086baab8687c0f28b67dbb8c8187564736f6c6343000811003360803461008257601f6105bc38819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b031691909117905560405161051e908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600090813560e01c90816354fd4d501461040857508063809bef6214610201578063d3b150e6146100b35763d6e65cb91461005057600080fd5b346100b05760203660031901126100b05782359067ffffffffffffffff82116100b0575061009b6020610089819560ff94369101610479565b818551938285809451938492016104c5565b81016001815203019020541690519015158152f35b80fd5b5091346101fd57816003193601126101fd57803567ffffffffffffffff81116101f9576100e39036908301610479565b602435928315158094036101f557845481516353adc3e960e11b8152602094916001600160a01b039190869082908590829060081c86165afa9081156101eb5788916101b1575b501633036101645750908261014a939251938285809451938492016104c5565b810160018152030190209060ff8019835416911617905580f35b83608492519162461bcd60e51b8352820152602360248201527f4163636f756e74206973206e6f7420612074656d706f7261727920677561726460448201526234b0b760e91b6064820152fd5b90508581813d83116101e4575b6101c88183610425565b810103126101e0575181811681036101e0573861012a565b8780fd5b503d6101be565b84513d8a823e3d90fd5b8480fd5b8380fd5b8280fd5b50346100b05760209283600319360112610404576001600160a01b038135818116939192908481036101fd5785519387850191657075624b657960d01b83526bffffffffffffffffffffffff199060601b166026860152601a85528685019067ffffffffffffffff92868310848411176103f15760248387938193828d528a51902090855460081c1690630180634360e71b835260448b01525afa9485156103e75790849392918996610366575b505086519560ff87878188516102c981848c019d8e6104c5565b8101600181520301902054166102f4575b858860ff61009b838b8a85519384928392519283916104c5565b809192939495503b156101f957908383928194895180978193630a645e5560e21b83525af1801561035c5790889594939291156102da579091928094955011610349575050835283908261009b60ff386102da565b634e487b7160e01b825260419052602490fd5b87513d85823e3d90fd5b919550919293503d8085843e61037c8184610425565b81019188828985019403126101f55751908582116101f5570181605f820112156101f95786810151906103ae8261045d565b926103bb89519485610425565b828452606083830101116101f55782916103df9160608b80999897960191016104c5565b9238806102af565b87513d86823e3d90fd5b634e487b7160e01b865260418552602486fd5b5080fd5b90503461040457816003193601126104045760ff60209254168152f35b90601f8019910116810190811067ffffffffffffffff82111761044757604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161044757601f01601f191660200190565b81601f820112156104c0578035906104908261045d565b9261049e6040519485610425565b828452602083830101116104c057816000926020809301838601378301015290565b600080fd5b60005b8381106104d85750506000910152565b81810151838201526020016104c856fea2646970667358221220772ae6bc574819bfce72665f9a980daf83fe4984931250db4cd33915d35b9df064736f6c6343000811003360803461008257601f6113cc38819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b031691909117905560405161132e908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263084bad7814610c6b57508163319e909014610a5b578163441a3e70146109ac57816354fd4d501461098c5781635d8b788a1461085b57816368b0e07014610516578163bed62f351461044c578163e6b1a3ae146103ca578163e920eec014610184575063f038afe31461009357600080fd5b34610180576020906101796100a736610cf1565b906100dd6100d88551878101906100d0816100c23385610df7565b03601f198101835282610db2565b519020610fc6565b610ef1565b6101148451868101906c726167652e7175697474696e6760981b825283602d820152602d815261010c81610d7a565b519020610e3e565b61014984518681019068726167652e74696d6560b81b82528360298201526029815261013f81610d7a565b51902042906110a1565b83518581019169726167652e707269636560b01b8352602a820152602a815261017181610d7a565b5190206110a1565b5160018152f35b5080fd5b9050346103be5760803660031901126103be5767ffffffffffffffff9080358281116103c6576101b79036908301610d22565b9490926024358181116103be576101d19036908501610d22565b916044359081116103c2576101e99036908601610d22565b9290918751986020998a81019080336102029084610df7565b03601f19810182526102149082610db2565b51902061022090610fc6565b61022990610ef1565b8851978a8901657075624b657960d01b81523360601b998a6026820152601a815261025381610d96565b519020913690610262926111fc565b61026b91611233565b875189810190757769746864726177616c5f63726564656e7469616c7360501b8252886036820152602a81526102a081610d7a565b5190209136906102af926111fc565b6102b891611233565b855187810190687369676e617475726560b81b8252866029820152601d81526102e081610d96565b5190209136906102ef926111fc565b6102f891611233565b8351858101907019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82528460318201526025815261032881610d7a565b519020815460081c6001600160a01b031692833b156103be57906044839283885196879485936309d23b6160e31b855284015260643560248401525af19081156103b357509061017992916103a4575b508251848101916c1d985b1a59185d1bdc8b9cd95d609a1b8352602d8201526021815261010c81610d7a565b6103ad90610d50565b38610378565b8451903d90823e3d90fd5b8280fd5b8380fd5b8480fd5b505034610180576020366003190112610180576020906101796103eb610d0c565b6104056100d88451868101906100d0816100c23385610df7565b8251848101907f706f6f6c2e73706563696669632e6172742e616464726573730000000000000082523360601b6039820152602d815261044481610d7a565b519020611050565b9050346103be5760203660031901126103be5761047a6100d8835160208101906100d0816100c23385610df7565b82825160208101906e1d1c985b9cd9995c8b9b1bd8dad959608a1b82528335602f820152602f81526104ab81610d7a565b519020815460081c6001600160a01b031692833b156103be57604490838651958694859363abfdcced60e01b85528401528160248401525af1801561050a57602093506104fb575b505160018152f35b61050490610d50565b386104f3565b505051903d90823e3d90fd5b9050346103be5760209283600319360112610858578135918351916105596100d8878501856105453383610df7565b03956100d0601f1997888101835282610db2565b8451671d1bdad95b8b9a5960c21b87820181815260088084529261057c81610d96565b51902083546001600160a01b03929190841c831690813b15610806578591604483928c519485938492632b6cd4f760e21b84528c840152600160248401525af180156107fc57610849575b5087518981019182528381526105dc81610d96565b5190209588828554851c169760248a51809a819363bd02d0f560e01b83528a8301525afa96871561083f57849761080a575b508061063a610662928961062e6101718e8e519283918201943386610f2c565b038c8101835282610db2565b88518a81019061065a8161064e3385610f61565b038a8101835282610db2565b5190206110ee565b8651948886016a1a591ccb9a5b8b9c1bdbdb60aa1b81523360601b9687602b820152601f815261069181610d96565b519020828554851c1690813b15610806578591604483928c51948593849263785f002b60e11b84528c8401528d60248401525af180156107fc576107ed575b5061070788518a81016a1c1bdbdb0b999bdc8b9a5960aa1b815289602b830152602b82526106fd82610d7a565b3391519020611050565b87516107288a8201928261071c8b3387610f8f565b03908101835282610db2565b519020918354901c1692833b156103be5790604483928389519687948593637152429d60e11b8552840152600160248401525af19081156107e257509161079d9161017994936107d3575b508451868101916b199c995b9ccb9b1bd8dad95960a21b8352602c8201528681526100d081610d96565b908351858101916e1d1c985b9cd9995c8b9b1bd8dad959608a1b8352602f820152602f81526107cb81610d7a565b519020610ea2565b6107dc90610d50565b38610773565b8551903d90823e3d90fd5b6107f690610d50565b386106d0565b89513d87823e3d90fd5b8580fd5b90988098975081813d8311610838575b6108248183610db2565b810103126103c2575196979596958061060e565b503d61081a565b88513d86823e3d90fd5b61085290610d50565b386105c7565b80fd5b9050346103be5760603660031901126103be57356024356044359384151585036108585750825193610912826020966108b26100d88983018361089e3383610df7565b03936100d0601f1995868101835282610db2565b6108fd8751898101906a1c1bdbdb0b999bdc8b9a5960aa1b825288602b820152602b81526108df81610d7a565b51902033906001600160a01b03906108f69061117c565b161461113b565b865161065a898201928261071c8a3387610f8f565b6109448451928684016b746f74616c2e636c61696d7360a01b81523360601b9485602c82015288815261065a81610d96565b610952575b50505160018152f35b61098591835190858201926a199c995b8b995e1a5d195960aa1b8452602b830152603f820152603f815261010c81610d7a565b3880610949565b50503461018057816003193601126101805760ff60209254169051908152f35b505034610180576020906101796109c236610cf1565b90610a47828551926109f26100d8898601866109de3383610df7565b03966100d0601f1998898101835282610db2565b610a1f8751898101906a1c1bdbdb0b999bdc8b9a5960aa1b825283602b820152602b81526108df81610d7a565b8651610a3f81610a338b8201943386610f2c565b03868101835282610db2565b5190206112ab565b8351610a3f868201928261071c3386610f61565b9050346103be57816003193601126103be57610a75610d0c565b6024359182151583036103c657835194602095868101906c636f6e74726163742e6e616d6560981b82523360601b602d82015260218152610ab581610d7a565b51902081548651634c373c8d60e11b81528481019290925282908290602490829060081c6001600160a01b03165afa918215610c60578092610be6575b50508451610b1c878281610b0f8183019687815193849201610dd4565b8101038084520182610db2565b519020845186810190715374616b696e67506f6f6c466163746f727960701b825260128152610b4a81610d96565b51902003610bab57509061017991610b6f84518681019061010c816100c28685610df7565b8351858101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b83526001600160601b03199060601b166030820152602481526107cb81610d7a565b835162461bcd60e51b815290810185905260156024820152741bdb9b1e48199858dd1bdc9e4818d85b8818d85b1b605a1b6044820152606490fd5b9091503d8082843e610bf88184610db2565b82019187818403126101805780519067ffffffffffffffff82116103be570182601f8201121561018057805191610c2e83610e22565b93610c3b89519586610db2565b838552898484010111610858575090610c5991888085019101610dd4565b3880610af2565b8651903d90823e3d90fd5b8385346108585750610179610cdd602093610c8536610cf1565b809391610c9c6100d8898601866109de3383610df7565b610cc98751898101906a1c1bdbdb0b999bdc8b9a5960aa1b825283602b820152602b81526108df81610d7a565b865161065a81610a338b8201943386610f2c565b835161065a868201928261071c3386610f61565b6040906003190112610d07576004359060243590565b600080fd5b600435906001600160a01b0382168203610d0757565b9181601f84011215610d075782359167ffffffffffffffff8311610d075760208381860195010111610d0757565b67ffffffffffffffff8111610d6457604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610d6457604052565b6040810190811067ffffffffffffffff821117610d6457604052565b90601f8019910116810190811067ffffffffffffffff821117610d6457604052565b60005b838110610de75750506000910152565b8181015183820152602001610dd7565b601f916a706f6f6c2e65786973747360a81b82526001600160601b03199060601b16600b8201520190565b67ffffffffffffffff8111610d6457601f01601f191660200190565b60009060018060a01b03825460081c1690813b156103be57829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610e965750610e8b5750565b610e9490610d50565b565b604051903d90823e3d90fd5b6000805460081c6001600160a01b0316929091833b156103be57906044839283604051968794859363abfdcced60e01b85526004850152151560248401525af1908115610e965750610e8b5750565b15610ef857565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a5908141bdbdb60a21b6044820152606490fd5b90916042926d19195c1bdcda5d0b985b5bdd5b9d60921b83526001600160601b03199060601b16600e83015260228201520190565b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b90916044926f6672656e2e706173742e636c61696d7360801b83526001600160601b03199060601b16601083015260248201520190565b60008054604051633d70e7e560e11b815260048101939093526020908390602490829060081c6001600160a01b03165afa91821561104357819261100957505090565b9091506020813d821161103b575b8161102460209383610db2565b810103126101805751908115158203610858575090565b3d9150611017565b50604051903d90823e3d90fd5b600080546001600160a01b039391929060081c8416803b156103c25783929183604492604051978895869463ca446dd960e01b865260048601521660248401525af1908115610e965750610e8b5750565b6000805460081c6001600160a01b0316929091833b156103be579060448392836040519687948593637152429d60e11b8552600485015260248401525af1908115610e965750610e8b5750565b6000805460081c6001600160a01b0316929091833b156103be579060448392836040519687948593632b6cd4f760e21b8552600485015260248401525af1908115610e965750610e8b5750565b1561114257565b60405162461bcd60e51b81526020600482015260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b60018060a01b036000602082825460081c16936024604051809681936321f8a72160e01b835260048301525afa9283156110435781936111bd575b50505090565b909192506020813d82116111f4575b816111d960209383610db2565b810103126101805751918216820361085857503880806111b7565b3d91506111cc565b92919261120882610e22565b916112166040519384610db2565b829481845281830111610d07578281602093846000960137010152565b91909160009060018060a01b03825460081c1690813b156103be579382916064949583604051968780958194630b8a342160e21b835260048301526040602483015261128e8151809281604486015260208686019101610dd4565b601f01601f191681010301925af1908115610e965750610e8b5750565b6000805460081c6001600160a01b0316929091833b156103be57906044839283604051968794859363ebb9d8c960e01b8552600485015260248401525af1908115610e965750610e8b575056fea26469706673582212203e99bb2e5f55cde2755751c3f09bc654a30d8ab9018b47254c707bdda38b3d9264736f6c63430008110033608034620003b557601f1990601f906001600160401b03906200268b3881900384810186168301848111848210176200039f57839282916040528339602092839181010312620003b557516001600160a01b03938482169391849003620003b5576200006a620003ba565b92600b84526a4652454e5320536861726560a81b818501526200008c620003ba565b9060058252644652454e5360d81b818301528451978489116200039f576000988954966001978881811c9116801562000394575b8582101462000380579081878493116200032d575b508490878311600114620002cc578c92620002c0575b5050600019600383901b1c191690871b1789555b8251948511620002ac5785548681811c91168015620002a1575b838210146200028d5790818587969594931162000234575b5081938511600114620001cf5750508792620001c3575b5050600019600383901b1c191690821b1790555b600a5491604051937f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0339285169180a3600b80546001600160a01b0319169190911790556001600160a81b0319163360ff60a01b191617600a556122b09081620003db8239f35b01519050388062000148565b86959392919316858a52838a20938a905b8282106200021a575050841162000200575b505050811b0190556200015c565b015160001960f88460031b161c19169055388080620001f2565b8484015186558897909501949384019390810190620001e0565b909192939450868a52828a208580880160051c82019285891062000283575b9188978a9297969594930160051c01915b8281106200027457505062000131565b8c815588975089910162000264565b9250819262000253565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858b9516838052878420935b88828210620003165750508411620002fc575b505050811b018955620000ff565b015160001960f88460031b161c19169055388080620002ee565b8385015186558d97909501949384019301620002db565b9091508b8052848c208780850160051c82019287861062000376575b918b91869594930160051c01915b82811062000367575050620000d5565b8e81558594508b910162000357565b9250819262000349565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b038111838210176200039f5760405256fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461020757806306fdde03146101fe578063081812fc146101f5578063095ea7b3146101ec5780630bc59b38146101e357806318160ddd146101da57806323b872dd146101d15780632f745c59146101c857806342842e0e146101bf57806342966c68146101b65780634f558e79146101ad5780634f6ccce7146101a457806354fd4d501461019b5780636352211e146101925780636a6278421461018957806370a0823114610180578063715018a6146101775780638da5cb5b1461016e57806395d89b4114610165578063a22cb4651461015c578063a2d6c6da14610153578063b88d4fde1461014a578063c87b56dd14610141578063e985e9c5146101385763f2fde38b1461013057600080fd5b61000e611096565b5061000e61102d565b5061000e610f88565b5061000e610ef6565b5061000e610ca8565b5061000e610bb7565b5061000e610aeb565b5061000e610ac1565b5061000e610a5f565b5061000e610a2f565b5061000e610915565b5061000e6108f6565b5061000e6108d1565b5061000e610825565b5061000e6107e9565b5061000e6106bd565b5061000e610694565b5061000e6105dc565b5061000e6105b2565b5061000e610567565b5061000e610548565b5061000e610454565b5061000e610412565b5061000e610307565b5061000e610222565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561024281610210565b63ffffffff60e01b1663780e9d6360e01b8114908115610268575b506040519015158152f35b6380ac58cd60e01b81149150811561029a575b8115610289575b503861025d565b6301ffc9a760e01b14905038610282565b635b5e139f60e01b8114915061027b565b60005b8381106102be5750506000910152565b81810151838201526020016102ae565b906020916102e7815180928185528580860191016102ab565b601f01601f1916010190565b9060206103049281815201906102ce565b90565b503461000e5760008060031936011261040f57604051908080549060019180831c92808216928315610405575b60209283861085146103f15785885260208801949081156103d05750600114610378575b6103748761036881890382610ea9565b604051918291826102f3565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8386106103bf5750505091019050610368826103743880610358565b8054858701529482019481016103a3565b60ff191685525050505090151560051b019050610368826103743880610358565b634e487b7160e01b82526022600452602482fd5b93607f1693610334565b80fd5b503461000e57602036600319011261000e576020610431600435611501565b6040516001600160a01b039091168152f35b6001600160a01b0381160361000e57565b503461000e57604036600319011261000e5760043561047281610443565b60243561047e81611417565b916001600160a01b0380841690821681146104f9576104b0936104ab9133149081156104b2575b5061148f565b611e9a565b005b6001600160a01b031660009081526005602052604090206104f391506104ec9033905b9060018060a01b0316600052602052604060002090565b5460ff1690565b386104a5565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b503461000e57602036600319011261000e5760206104316004356111fa565b503461000e57600036600319011261000e576020600854604051908152f35b606090600319011261000e5760043561059e81610443565b906024356105ab81610443565b9060443590565b503461000e576104b06105c436610586565b916105d76105d2843361169e565b611593565b611d20565b503461000e57604036600319011261000e576004356105fa81610443565b602435906106078161139f565b82101561063b576001600160a01b031660009081526006602090815260408083209383529281529082902054915191825290f35b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461000e576104b06106a636610586565b90604051926106b484610e48565b600084526115f9565b503461000e57602036600319011261000e5760043560405161073661073160208301836107153383601f916a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b16600b8201520190565b0393610729601f1995868101835282610ea9565b519020611179565b611131565b610788604051916107746020840191846107688785602b916a1c1bdbdb0b999bdc8b9a5960aa1b8252600b8201520190565b03908101855284610ea9565b91519091206001600160a01b03919061122b565b163303610798576104b090611b2f565b60405162461bcd60e51b815260206004820152602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b503461000e57602036600319011261000e576004356000908152600260209081526040909120546001600160a01b031615156040519015158152f35b503461000e57602036600319011261000e576004356008548110156108775760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30154604051908152602090f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b503461000e57600036600319011261000e57602060ff600a5460a01c16604051908152f35b503461000e57602036600319011261000e576020610431600435611417565b503461000e5760208060031936011261000e5760043561093481610443565b6040516a706f6f6c2e65786973747360a81b8382019081523360601b6bffffffffffffffffffffffff1916600b82015261098491610731919061072981601f84015b03601f198101835282610ea9565b60405182810190671d1bdad95b8b9a5960c21b8252600881526109a681610e71565b519020600b5460405163bd02d0f560e01b815260048101929092528390829060249082906001600160a01b03165afa928315610a22575b6000936109ef575b6104b08484611789565b81813d8311610a1b575b610a038183610ea9565b81010312610a17575191506104b0386109e5565b8280fd5b503d6109f9565b610a2a61116c565b6109dd565b503461000e57602036600319011261000e576020610a57600435610a5281610443565b61139f565b604051908152f35b503461000e5760008060031936011261040f57600a5481906001600160a01b03811690610a8d33831461130b565b6001600160a01b031916600a557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461000e57600036600319011261000e57600a546040516001600160a01b039091168152602090f35b503461000e5760008060031936011261040f576040519080600190815480831c92808216928315610ba3575b60209283861085146103f15785885260208801949081156103d05750600114610b4a576103748761036881890382610ea9565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838610610b925750505091019050610368826103743880610358565b805485870152948201948101610b76565b93607f1693610b17565b8015150361000e57565b503461000e57604036600319011261000e57600435610bd581610443565b602435610be181610bad565b6001600160a01b03821691338314610c635781610c20610c319233600052600560205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b503461000e57602036600319011261000e576103746004356000610dd9610cce836111fa565b92610d3e6040519485610d22602082019283602d917f706f6f6c2e73706563696669632e6172742e616464726573730000000000000082526bffffffffffffffffffffffff199060601b1660198201520190565b0395610d36601f1997888101835282610ea9565b51902061122b565b6001600160a01b039490851680158514610e295750610daa610db691604051610d36602082019282610d9e610d8a866010906f636f6e74726163742e6164647265737360801b81520190565b67119c995b9cd05c9d60c21b815260080190565b03908101835282610ea9565b6001600160a01b031690565b905b60405194858094819363516b636d60e11b8352600483019190602083019252565b0392165afa908115610e1c575b600091610dfb575b50604051918291826102f3565b610e16913d8091833e610e0e8183610ea9565b8101906112ac565b38610dee565b610e2461116c565b610de6565b905090610db8565b50634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610e6457604052565b610e6c610e31565b604052565b6040810190811067ffffffffffffffff821117610e6457604052565b6060810190811067ffffffffffffffff821117610e6457604052565b90601f8019910116810190811067ffffffffffffffff821117610e6457604052565b60209067ffffffffffffffff8111610ee9575b601f01601f19160190565b610ef1610e31565b610ede565b503461000e57608036600319011261000e57600435610f1481610443565b602435610f2081610443565b6064359167ffffffffffffffff831161000e573660238401121561000e57826004013591610f4d83610ecb565b92610f5b6040519485610ea9565b808452366024828701011161000e5760208160009260246104b098018388013785010152604435916115f9565b503461000e57602036600319011261000e57610374610ff0610daa610daa60405160208101906f636f6e74726163742e6164647265737360801b8252754672656e73506f6f6c5368617265546f6b656e55524960501b603082015260268152610d3681610e8d565b60405163c87b56dd60e01b8152600480359082015290600090829060249082905afa908115610e1c57600091610dfb5750604051918291826102f3565b503461000e57604036600319011261000e57602060ff61108a60043561105281610443565b6024359061105f82610443565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57602036600319011261000e576004356110b481610443565b600a546001600160a01b03906110cd908216331461130b565b8116156110dd576104b090611356565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b1561113857565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a5908141bdbdb60a21b6044820152606490fd5b506040513d6000823e3d90fd5b600b54604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa9081156111ed575b6000916111b9575090565b906020823d82116111e5575b816111d260209383610ea9565b8101031261040f57505161030481610bad565b3d91506111c5565b6111f561116c565b6111ae565b61030490604051610d3681610976602082019485602b916a1c1bdbdb0b999bdc8b9a5960aa1b8252600b8201520190565b600b546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561129f575b60009161126b575090565b906020823d8211611297575b8161128460209383610ea9565b8101031261040f57505161030481610443565b3d9150611277565b6112a761116c565b611260565b60208183031261000e5780519067ffffffffffffffff821161000e570181601f8201121561000e5780516112df81610ecb565b926112ed6040519485610ea9565b8184526020828401011161000e5761030491602080850191016102ab565b1561131257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600a80546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b031680156113bf57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b6000908152600260205260409020546001600160a01b031680156114385790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b1561149657565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b6000818152600260205260409020546001600160a01b031615611539576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561159a57565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b916116259391611620936116106105d2843361169e565b61161b838383611d20565b612060565b61167a565b565b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561168157565b60405162461bcd60e51b81528061169a60048201611627565b0390fd5b6000828152600260205260409020546001600160a01b03161561172f576116c482611417565b6001600160a01b038281168282168114949091908515611717575b50505082156116ed57505090565b6001600160a01b0316600090815260056020526040902060ff925061171291906104d5565b541690565b6117249192939550611501565b1614913880806116df565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b9060405161179681610e48565b600081526001600160a01b0383169182156118a5576000818152600260205260409020546001600160a01b0316611860578381611620946117da8261162598611955565b6001600160a01b03831660009081526003602052604090206117fc8154611900565b905561183583611816846000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611f9f565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b50634e487b7160e01b600052601160045260246000fd5b906001820180921161190e57565b6116256118e9565b1561191d57565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b9061195f816120eb565b6001600160a01b038216611977576116259150612164565b611625916120b3565b6001600160a01b0381811692831592909185918415611a3557506119a3826120eb565b8216801594908515611a185750506119bb9150612164565b159081611a0f575b506119cb5750565b611a0a611a066116259260405161072981610976602082019485602f916e1d1c985b9cd9995c8b9b1bd8dad959608a1b8252600f8201520190565b1590565b611916565b905015386119c3565b03611a25575b50506119bb565b611a2e916120b3565b3883611a1e565b8184168603611a45575b506119a3565b611ab9611a518261139f565b6000198101908111611b13575b611aaa60009386855260076020526040852054838103611ac0575b5084611a8f886000526007602052604060002090565b556001600160a01b0316600090815260066020526040902090565b90600052602052604060002090565b5538611a3f565b8a8652600660205260408620848752602052611b0c604087205480611afb84611aaa8760018060a01b03166000526006602052604060002090565b556000526007602052604060002090565b5538611a79565b611b1b6118e9565b611a5e565b60001981019190821161190e57565b611b3881611417565b6001600160a01b038116908115908115611c295750611b56836120eb565b611b5f83612164565b1580611c21575b611be1575b611b7482611e46565b6000908082526003602052604082208054906000198201918211611bd4575b5582825260026020526040822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b611bdc6118e9565b611b93565b611c1c611a0a611a066040516020810190610729816109768985602f916e1d1c985b9cd9995c8b9b1bd8dad959608a1b8252600f8201520190565b611b6b565b506000611b66565b611c73611c358261139f565b6000198101908111611cbb575b611aaa60009387855260076020526040852054838103611c79575b5084611a8f896000526007602052604060002090565b55611b56565b878652600660205260408620848752602052611cb4604087205480611afb84611aaa8760018060a01b03166000526006602052604060002090565b5538611c5d565b611cc36118e9565b611c42565b15611ccf57565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90611d2a83611417565b6001600160a01b038381169290918216839003611def57611d84611dc892821694611d56861515611cc8565b611d61878483611980565b611d6a87611e46565b6001600160a01b0316600090815260036020526040902090565b611d8e8154611b20565b90556001600160a01b0381166000908152600360205260409020611db28154611900565b9055611816856000526002602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b03611e7383611417565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4565b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b0380611ed384611417565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b9081602091031261000e575161030481610210565b610304939260809260018060a01b0316825260006020830152604082015281606082015201906102ce565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610304929101906102ce565b3d15611f9a573d90611f8082610ecb565b91611f8e6040519384610ea9565b82523d6000602084013e565b606090565b909190803b1561205857611fd1602091600093604051948580948193630a85bd0160e11b998a84523360048501611f13565b03926001600160a01b03165af160009181612028575b5061201a57611ff4611f6f565b805190816120155760405162461bcd60e51b81528061169a60048201611627565b602001fd5b6001600160e01b0319161490565b61204a91925060203d8111612051575b6120428183610ea9565b810190611efe565b9038611fe7565b503d612038565b505050600190565b92909190823b1561209357611fd1926020926000604051809681958294630a85bd0160e11b9a8b85523360048601611f3e565b50505050600190565b50634e487b7160e01b600052603260045260246000fd5b6040906120bf8161139f565b9260009160018060a01b0316825260066020528282208483526020528083832055815260076020522055565b6008548160005260096020528060406000205568010000000000000000811015612157575b600181018060085581101561214a575b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61215261209c565b612120565b61215f610e31565b612110565b60088054600019929083810181811161226d575b61221460009384928184526009602052846040852054911015612260575b8684526122037ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee2958681015490831015612253575b88865280837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301556000526009602052604060002090565b556000526009602052604060002090565b55825493841561223f5784019380851015612232575b838352015555565b61223a61209c565b61222a565b634e487b7160e01b83526031600452602483fd5b61225b61209c565b6121cb565b61226861209c565b612196565b6122756118e9565b61217856fea26469706673582212209b817e6fd6fe706b8f12ae9e6825dd6601a526efae024fc98af5d060009baae564736f6c6343000811003360806040908082523462000192578062001340803803809162000023828562000197565b83396020928391810103126200019257516001600160a01b0391908281168103620001925760008054610100600160a81b0319811660089390931b610100600160a81b031692831780835586516f636f6e74726163742e6164647265737360801b8187019081526d4672656e73506f6f6c536861726560901b6030830152601e82529396949592949390928389019290916001600160401b038411858510176200017e576024848785948294838f52895190206321f8a72160e01b845260448a015260081c165afa9283156200017457879362000131575b5050600180546001600160a01b03191693909216929092179055506001600160a81b0319161790555161116e9081620001d28239f35b90809293503d83116200016c575b6200014b818562000197565b8101031262000168575181811681036200016857388080620000fb565b8480fd5b503d6200013f565b88513d89823e3d90fd5b634e487b7160e01b89526041600452602489fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001bb57604052565b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806354fd4d501461079f5763c87b56dd1461003757600080fd5b3461079b576020928360031936011261079857600154823592906100aa9061006f906001600160a01b03165b6001600160a01b031690565b8686518092634f558e7960e01b825281806100918a8983019190602083019252565b03915afa90811561078b575b849161075e575b5061087d565b8351926100f2868501856100d68483602b916a1c1bdbdb0b999bdc8b9a5960aa1b8252600b8201520190565b03956100ea601f1997888101835282610824565b519020610a29565b9260018060a01b0386818616928661015c61006384518d8101906100ea8d82610150610135866010906f636f6e74726163742e6164647265737360801b81520190565b6e233932b739a6b2ba30a432b63832b960891b8152600f0190565b03908101835282610824565b94835194631865c57d60e01b865283868a81855afa958615610751575b8496610733575b50610212959616908c888a87519763ef21184f60e01b89528789806101ac868683019190602083019252565b0381895afa988915610726575b88996106fb575b50516333c7180560e11b81529081019182528692918290829081906020015b0381875afa9182156106ee575b83926106c1575b50508d51809881926376e8a45160e11b83528d83019190602083019252565b0381855afa9586156106b4575b8496610682575b5091839161023661026294610f22565b8d516328243e6d60e21b81526001600160a01b039093169a83019a8b5299919384928391829160200190565b03915afa918215610675575b8092610650575b505061028085610dcd565b95895180978c82016102aa90601190706672656e20706f6f6c207368617265202360781b81520190565b6102b391610a12565b0389810188526102c39088610824565b895197888c81016102f890601b907f74686973206672656e206861732061206465706f736974206f6620000000000081520190565b6103029086610a12565b6c01022ba341034b7103837b7b61609d1b8152600d016103229084610a12565b7f2c207769746820636c61696d61626c652062616c616e6365206f6620000000008152601c016103529087610a12565b630408ae8d60e31b8152600401038a81018a5261036f908a610824565b6103799087610abb565b6103829061104f565b9561038c90610dcd565b8a51683d913730b6b2911d1160b91b8d820190815290998a9990916009016103b391610a12565b71111610113232b9b1b934b83a34b7b7111d1160711b81526012016103d791610a12565b7f222c202265787465726e616c5f75726c223a2268747470733a2f2f6672656e7381526a2e66756e2f746f6b656e2f60a81b6020820152602b0161041a91610a12565b7f222c202261747472696275746573223a205b7b2274726169745f74797065223a81527110113837b7b6111610113b30b63ab2911d1160711b602082015260320161046491610a12565b7f227d2c7b2274726169745f74797065223a202276616c696461746f72207075628152733634b19035b2bc911610113b30b63ab2911d101160611b60208201526034016104b091610a12565b7f227d2c7b2274726169745f74797065223a20226465706f736974222c20227661815266363ab2911d101160c91b60208201526027016104ef91610a12565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022636c61696d61626c65222c20228152683b30b63ab2911d101160b91b602082015260290161053d91610a12565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022706f6f6c207374617465222c20815269113b30b63ab2911d101160b11b6020820152602a0161058c91610a12565b6e113eae96101134b6b0b3b2911d101160891b8152600f017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152601a016105d391610a12565b61227d60f01b81526002010382810182526105ee9082610824565b6105f79061104f565b82517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000094810194855293849190601d0161063091610a12565b0390810183526106409083610824565b5161064c8192826107e1565b0390f35b61066c92503d8091833e6106648183610824565b810190610962565b90503880610275565b61067d610870565b61026e565b61026293919650916102366106a986943d8087833e6106a18183610824565b81019061092d565b979294505091610226565b6106bc610870565b61021f565b6106e09250803d106106e7575b6106d88183610824565b810190610953565b388f6101f3565b503d6106ce565b6106f6610870565b6101ec565b8493908995929a509261071a6101df943d8089833e6106a18183610824565b9a9250925092936101c0565b61072e610870565b6101b9565b610212965061074b903d8087833e6106a18183610824565b95610180565b610759610870565b610179565b61077e9150873d8911610784575b6107768183610824565b810190610853565b386100a4565b503d61076c565b610793610870565b61009d565b80fd5b8280fd5b833461079857806003193601126107985760ff90541660805260206080f35b60005b8381106107d15750506000910152565b81810151838201526020016107c1565b6040916020825261080181518092816020860152602086860191016107be565b601f01601f1916010190565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761084657604052565b61084e61080d565b604052565b9081602091031261086b5751801515810361086b5790565b600080fd5b506040513d6000823e3d90fd5b1561088457565b60405162461bcd60e51b81526020600482015260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b60209067ffffffffffffffff81116108db575b601f01601f19160190565b6108e361080d565b6108d0565b81601f8201121561086b5780516108fe816108bd565b9261090c6040519485610824565b8184526020828401011161086b5761092a91602080850191016107be565b90565b9060208282031261086b57815167ffffffffffffffff811161086b5761092a92016108e8565b9081602091031261086b575190565b91909160408184031261086b5780519267ffffffffffffffff9384811161086b5782019381601f8601121561086b57845194818611610a05575b8560051b90604051916020976109b489830185610824565b835287808401918301019185831161086b578801905b8282106109e9575050509483015190811161086b5761092a92016108e8565b815163ffffffff8116810361086b5781529088019088016109ca565b610a0d61080d565b61099c565b90610a25602092828151948592016107be565b0190565b60018060a01b036000602082825460081c16936024604051809681936321f8a72160e01b835260048301525afa928315610aae575b8193610a6b575b50505090565b909192506020813d8211610aa6575b81610a8760209383610824565b81010312610aa2575191821682036107985750388080610a65565b5080fd5b3d9150610a7a565b610ab6610870565b610a5e565b610c609161092a916000610ba9610b1b60405194856100d6602082019283602d917f706f6f6c2e73706563696669632e6172742e616464726573730000000000000082526bffffffffffffffffffffffff199060601b1660198201520190565b6001600160a01b039390841680158414610c985750610b8661006360405160208101906100ea81610b7a610b66856010906f636f6e74726163742e6164647265737360801b81520190565b67119c995b9cd05c9d60c21b815260080190565b038a8101835282610824565b905b60405194858094819363516b636d60e11b8352600483019190602083019252565b0392165afa908115610c8b575b600091610c72575b50610150604051948592610c5a60208501606c907f3c7376672077696474683d2234303022206865696768743d223430302220786d81527f6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672260208201527f20786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f60408201526b189c9c9c97bc3634b735911f60a11b60608201520190565b90610a12565b651e17b9bb339f60d11b815260060190565b610c85913d8091833e6106a18183610824565b38610bbe565b610c93610870565b610bb6565b90610b88565b604051906020820182811067ffffffffffffffff821117610cc3575b60405260008252565b610ccb61080d565b610cba565b50634e487b7160e01b600052601160045260246000fd5b604051906060820182811067ffffffffffffffff821117610d15575b604052602a8252604082602036910137565b610d1d61080d565b610d03565b90610d2c826108bd565b610d396040519182610824565b8281528092610d4a601f19916108bd565b0190602036910137565b600019810191908211610d6357565b610d6b610cd0565b565b6030019081603011610d6357565b9060028201809211610d6357565b9060208201809211610d6357565b50634e487b7160e01b600052603260045260246000fd5b906020918051821015610dc057010190565b610dc8610d97565b010190565b8015610e67576000818181805b610e3d5750610de881610d22565b935b610df45750505090565b610dfd90610d54565b90600a90610e28610e18610e12848406610d6d565b60ff1690565b60f81b6001600160f81b03191690565b841a610e348487610dae565b53049081610dea565b91506001600a916000198114610e5a575b01910480849291610dda565b610e62610cd0565b610e4e565b506040516040810181811067ffffffffffffffff821117610e97575b60405260018152600360fc1b602082015290565b610e9f61080d565b610e83565b600281901b91906001600160fe1b03811603610d6357565b8015610eca575b6000190190565b610ed2610cd0565b610ec3565b15610ede57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610f2a610ce7565b90815115610fc4575b603060208301538151600190811015610fb7575b90607860218401536029915b808311610f66575061092a915015610ed7565b9080600f610fa392166010811015610faa575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a610f998587610dae565b5360041c92610ebc565b9190610f53565b610fb2610d97565b610f79565b610fbf610d97565b610f47565b610fcc610d97565b610f33565b604051906060820182811067ffffffffffffffff821117611042575b604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b61104a61080d565b610fed565b80511561112f5761105e610fd1565b61107a61107561106e8451610d7b565b6003900490565b610ea4565b9161108c61108784610d89565b610d22565b92835280815182019060208501935b8282106110dd575050506003905106806001146110cc576002146110bd575090565b603d60f81b6000199091015290565b50613d3d60f01b6001199091015290565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c168801015160028601531685010151908201530193919061109b565b5061092a610c9e56fea26469706673582212201550c500cf1459116c6874290c8fbafa1da92cc346f9eee1898b5641bc86759764736f6c6343000811003360808060405234610035576009805460ff60a01b19169055600880546001600160a01b0319163317905561187f908161003b8239f35b600080fdfe608060409080825260048036101561001657600080fd5b60009283803560e01c9384630b9adc571461148f57505082630e14a376146113d85782631bed5241146113b15782631e0ea61e146112dc57826321f8a721146112aa5782632c62ff2d146111f65782632e28d084146110b15782633e49bed014610ffe5782634d1d384114610f2c5782634e91db0814610e7957838363616b59f614610dc55750826363a4b67b14610c795782636e89955014610af45782637ae1cfca14610ac75782638a0dac4a14610a7b578383638c16009514610a3a57508263986e791a14610a07578263a6ed563e146109df578263a75b87d2146109b6578263abfdcced146108e8578263adb353dc14610829578263bd02d0f514610801578263c031a180146107b0578263ca446dd9146106d9578263dc97d962146106b1578263e2a4853a1461060057838363e2b202bf1461055057508263ebb9d8c91461047e578263f04cfd6a146103dc579083918363f0be0056146102dd578363f6bb3cc4146101d05750505063febffd991461019257600080fd5b346101cd57806003193601126101cd576101b760018060a01b0360085416331461158d565b6009805460ff60a01b1916600160a01b17905580f35b80fd5b829350346102d957602091826003193601126102d45760095460a01c60ff1615156001036102875781518381019061021a8161020c33856116e1565b03601f1981018352826116a9565b51902084526005835261023260ff8386205416611793565b35835282825282209061024582546115d9565b908161025057505050f35b81601f859311600114610264575050505580f35b83835281832061027f91601f0160051c8101906001016117eb565b812091555580f35b81518381019061029b8161020c33856116e1565b51902084526005835260ff828520541680156102c0575b6102bb90611710565b610232565b506008546001600160a01b031632146102b2565b505050fd5b5050fd5b90346103d8576102ec36611577565b9290600160ff60095460a01c1615151460001461038957815160208101906103188161020c33856116e1565b5190208552600560205261033160ff8387205416611793565b845260076020528320805491600160401b83101561037657600183018083558310156103635750835260208320015580f35b634e487b7160e01b855260329052602484fd5b634e487b7160e01b855260419052602484fd5b8151602081019061039e8161020c33856116e1565b5190208552600560205260ff828620541680156103c4575b6103bf90611710565b610331565b506008546001600160a01b031632146103b6565b8280fd5b9083346101cd576020918260031936011261047a5792919235815260078352818120908251808584549182815201908194845286842090845b818110610466575050508161042b9103826116a9565b83519485948186019282875251809352850193925b82811061044f57505050500390f35b835185528695509381019392810192600101610440565b825484529288019260019283019201610415565b5080fd5b9150346103d85761048e36611577565b9290600160ff60095460a01c1615151460001461050157815160208101906104ba8161020c33856116e1565b519020855260056020526104d360ff8387205416611793565b8452600260205283209081549283039283116104ee57505580f35b634e487b7160e01b845260119052602483fd5b815160208101906105168161020c33856116e1565b5190208552600560205260ff8286205416801561053c575b61053790611710565b6104d3565b506008546001600160a01b0316321461052e565b925090346102d9576020806003193601126102d457600291600160ff60095460a01c161515146000146105b3578351828101906105918161020c33856116e1565b5190208552600582526105a960ff8587205416611793565b3584525281205580f35b8351828101906105c78161020c33856116e1565b51902085526005825260ff848620541680156105ec575b6105e790611710565b6105a9565b506008546001600160a01b031632146105de565b83903461047a5761061036611577565b9190600160ff60095460a01c16151514600014610662578151602081019061063c8161020c33856116e1565b5190208452600560205261065560ff8386205416611793565b8352600260205282205580f35b815160208101906106778161020c33856116e1565b5190208452600560205260ff8285205416801561069d575b61069890611710565b610655565b506008546001600160a01b0316321461068f565b9150346103d85760203660031901126103d85760209282913581526003845220549051908152f35b909150346103d857806003193601126103d8576024356001600160a01b0381811693918490036107ac5760095460a01c60ff16151560010361076157508151602081019061072b8161020c33856116e1565b5190208452600560205261074460ff8386205416611793565b80358452602052822080546001600160a01b031916909117905580f35b610799908351602081019061077a8161020c33856116e1565b5190208652600560205260ff848720541690811561079e575b50611710565b610744565b905060085416321438610793565b8480fd5b9150346103d85760203660031901126103d857906107eb816107fd946107e494358152600160205220825193848092611613565b03836116a9565b51918291602083526020830190611537565b0390f35b9150346103d85760203660031901126103d85760209282913581526002845220549051908152f35b9150346103d85761083936611577565b9290600160ff60095460a01c1615151460001461089957815160208101906108658161020c33856116e1565b5190208552600560205261087e60ff8387205416611793565b8452600260205283209081549283018093116104ee57505580f35b815160208101906108ae8161020c33856116e1565b5190208552600560205260ff828620541680156108d4575b6108cf90611710565b61087e565b506008546001600160a01b031632146108c6565b909150346103d857806003193601126103d857602435918215158093036109b25760095460a01c60ff16151560010361096357815160208101906109308161020c33856116e1565b5190208452600560205261094960ff8386205416611793565b358352600560205282209060ff8019835416911617905580f35b815160208101906109788161020c33856116e1565b5190208452600560205260ff8285205416801561099e575b61099990611710565b610949565b506008546001600160a01b03163214610990565b8380fd5b83903461047a578160031936011261047a5760085490516001600160a01b039091168152602090f35b9150346103d85760203660031901126103d85760209282913581526006845220549051908152f35b9150346103d85760203660031901126103d857906107eb816107fd946107e4943581528060205220825193848092611613565b925090346102d9576020806003193601126102d457600391600160ff60095460a01c161515146000146105b3578351828101906105918161020c33856116e1565b83823461047a57602036600319011261047a57356001600160a01b03818116918290036103d857610ab19060085416331461158d565b6001600160601b0360a01b600954161760095580f35b9150346103d85760203660031901126103d8578160209360ff923581526005855220541690519015158152f35b909150346103d857610b05366114e5565b9192906001938460ff60095460a01c16151514600014610c2a5782516020810190610b348161020c33856116e1565b51902087526005602052610b4d60ff8489205416611793565b865260209186835286209467ffffffffffffffff8411610c175750610b7c83610b7687546115d9565b87611802565b8591601f8411600114610bb657509282939183928794610bab575b50501b916000199060031b1c191617905580f35b013592503880610b97565b9183601f1981168789528489209489905b88838310610bfd5750505010610be3575b505050811b01905580f35b0135600019600384901b60f8161c19169055388080610bd8565b868601358855909601959384019387935090810190610bc7565b634e487b7160e01b875260419052602486fd5b82516020810190610c3f8161020c33856116e1565b5190208752600560205260ff83882054168015610c65575b610c6090611710565b610b4d565b506008546001600160a01b03163214610c57565b909150346103d857806003193601126103d8576024359167ffffffffffffffff918284116107ac57366023850112156107ac57838201359283116107ac573660248460051b860101116107ac576001938460ff60095460a01c16151514600014610d765781516020810190610cf28161020c33856116e1565b51902086526005602052610d0b60ff8388205416611793565b8235865260209160078352862092600160401b8511610c1757506024908354858555808610610d5c575b500191855280852090855b848110610d4b578680f35b833583820155928101928501610d40565b848852838820610d709181019087016117eb565b38610d35565b81516020810190610d8b8161020c33856116e1565b5190208652600560205260ff82872054168015610db1575b610dac90611710565b610d0b565b506008546001600160a01b03163214610da3565b9250346102d957602091826003193601126102d45760095460a01c60ff161515600103610e2c57815183810190610e008161020c33856116e1565b519020845260058352610e1860ff8386205416611793565b3583526001825282209061024582546115d9565b815183810190610e408161020c33856116e1565b51902084526005835260ff82852054168015610e65575b610e6090611710565b610e18565b506008546001600160a01b03163214610e57565b9150346103d857816003193601126103d85760095460a01c60ff161515600103610edd5781516020810190610eb28161020c33856116e1565b51902083526005602052610ecb60ff8385205416611793565b35825260066020526024359082205580f35b81516020810190610ef28161020c33856116e1565b5190208352600560205260ff82842054168015610f18575b610f1390611710565b610ecb565b506008546001600160a01b03163214610f0a565b909150346103d857602091826003193601126109b25760095460a01c60ff161515600103610fb157815183810190610f688161020c33856116e1565b519020845260058352610f8060ff8386205416611793565b3583526007825282209081549083835581610f99578380f35b610faa9284528320908101906117eb565b3880808380f35b815183810190610fc58161020c33856116e1565b51902084526005835260ff82852054168015610fea575b610fe590611710565b610f80565b506008546001600160a01b03163214610fdc565b9150346103d857816003193601126103d85760095460a01c60ff16151560010361106257815160208101906110378161020c33856116e1565b5190208352600560205261105060ff8385205416611793565b35825260036020526024359082205580f35b815160208101906110778161020c33856116e1565b5190208352600560205260ff8284205416801561109d575b61109890611710565b611050565b506008546001600160a01b0316321461108f565b909150346103d8576110c2366114e5565b9192906001938460ff60095460a01c161515146000146111a757825160208101906110f18161020c33856116e1565b5190208752600560205261110a60ff8489205416611793565b865260209184835286209467ffffffffffffffff8411610c17575061113383610b7687546115d9565b8591601f841160011461116157509282939183928794610bab5750501b916000199060031b1c191617905580f35b9183601f1981168789528489209489905b8883831061118d5750505010610be357505050811b01905580f35b868601358855909601959384019387935090810190611172565b825160208101906111bc8161020c33856116e1565b5190208752600560205260ff838820541680156111e2575b6111dd90611710565b61110a565b506008546001600160a01b031632146111d4565b9150346103d8576020806003193601126109b257600591600160ff60095460a01c1615151460001461125e578351828101906112368161020c33856116e1565b519020855282825261124d60ff8587205416611793565b358452528120805460ff1916905580f35b8351828101906112728161020c33856116e1565b519020855282825260ff84862054168015611296575b61129190611710565b61124d565b506008546001600160a01b03163214611288565b9150346103d85760203660031901126103d857803583526020908152918190205490516001600160a01b039091168152f35b83903461047a578160031936011261047a576009546001600160a01b0393848216903382900361135557507fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e9679394600854926001600160601b0360a01b908382861617600855166009558351921682526020820152a180f35b608490602085519162461bcd60e51b8352820152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152fd5b83903461047a578160031936011261047a5760209060ff60095460a01c1690519015158152f35b9150346103d8576020806003193601126109b25760095460a01c60ff161515600103611442578251818101906114128161020c33856116e1565b51902084526005815261142a60ff8486205416611793565b8135845252812080546001600160a01b031916905580f35b8251818101906114568161020c33856116e1565b51902084526005815260ff8385205416801561147b575b61147690611710565b61142a565b506008546001600160a01b0316321461146d565b91819284346102d457602090816003193601126107ac57600692600160ff60095460a01c161515146000146114d357508351828101906105918161020c33856116e1565b828101906105c78161020c33856116e1565b6040600319820112611532576004359160243567ffffffffffffffff9283821161153257806023830112156115325781600401359384116115325760248483010111611532576024019190565b600080fd5b919082519283825260005b848110611563575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611542565b6040906003190112611532576004359060243590565b1561159457565b60405162461bcd60e51b815260206004820152601760248201527f4973206e6f7420677561726469616e206163636f756e740000000000000000006044820152606490fd5b90600182811c92168015611609575b60208310146115f357565b634e487b7160e01b600052602260045260246000fd5b91607f16916115e8565b9060009291805491611624836115d9565b9182825260019384811690816000146116865750600114611646575b50505050565b90919394506000526020928360002092846000945b838610611672575050505001019038808080611640565b80548587018301529401938590820161165b565b9294505050602093945060ff191683830152151560051b01019038808080611640565b90601f8019910116810190811067ffffffffffffffff8211176116cb57604052565b634e487b7160e01b600052604160045260246000fd5b6023916e636f6e74726163742e65786973747360881b82526001600160601b03199060601b16600f8201520190565b1561171757565b60405162461bcd60e51b815260206004820152604860248201527f496e76616c6964206f72206f75746461746564206e6574776f726b20636f6e7460448201527f7261637420617474656d7074696e672061636365737320647572696e672064656064820152671c1b1bde5b595b9d60c21b608482015260a490fd5b1561179a57565b60405162461bcd60e51b8152602060048201526024808201527f496e76616c6964206f72206f75746461746564206e6574776f726b20636f6e746044820152631c9858dd60e21b6064820152608490fd5b8181106117f6575050565b600081556001016117eb565b9190601f811161181157505050565b61183d926000526020600020906020601f840160051c8301931061183f575b601f0160051c01906117eb565b565b909150819061183056fea2646970667358221220a5d8972a868f2e2558633eb2b41a25dd89d65569101549061227d084f7b7665e64736f6c6343000811003360803461008257601f61293038819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b0316919091179055604051612892908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263319e90901461005d5750506354fd4d501461003b57600080fd5b3461005957816003193601126100595760ff60209254169051908152f35b5080fd5b8385913461021c578160031936011261021c576001600160a01b039380358581169291908390036102a4576024918235968715158098036102a05786549161257c928382019067ffffffffffffffff948383108684111761028457928092856060938e97966102e185398b835260209e8f84015260081c168b82015203019089f08015610296578751938a85016f636f6e74726163742e6164647265737360801b81526e233932b739a837b7b629b2ba3a32b960891b6030870152601f86528986019186831090831117610284578188818d8f9488908f8490528b519020915460081c16906321f8a72160e01b835260448b01525afa94851561027a57918b93918b979695938896610231575b50509080604492169a8b918b519687958694630319e90960e41b86528a8601528b850152165af19081156102275783916101ed575b50156101dd575050507fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e82849281519033825287820152a251908152f35b634e487b7160e01b825260019052fd5b90508781813d8311610220575b61020481836102a8565b8101031261021c5751801515810361021c578861019f565b8280fd5b503d6101fa565b86513d85823e3d90fd5b919697509294508391933d8311610273575b61024d81856102a8565b8101031261026f5751818116810361026f57916044828b938b9796919261016a565b8880fd5b503d610243565b89513d8c823e3d90fd5b634e487b7160e01b8b5260418752878bfd5b87513d8a823e3d90fd5b8680fd5b8480fd5b90601f8019910116810190811067ffffffffffffffff8211176102ca57604052565b634e487b7160e01b600052604160045260246000fdfe6080806040523462000174576060816200257c8038038091620000238285620001ab565b83398101031262000174576200003981620001cf565b60208201519182151583036200017457604001516001600160a01b03908181169081900362000174576200013b93620000723362000271565b6001549260018060a01b03199083828616176001556200011460405182620000de602083016f636f6e74726163742e6164647265737360801b938482526d4672656e73506f6f6c536861726560901b6030820152601e8152620000d58162000179565b519020620001e4565b1684600254161760025560405160208101918252694672656e73436c61696d60b01b6030820152601a8152620000d58162000179565b16906003541617600355600014620001585750506001805460ff60a01b1916905562000271565b6000805460ff60a01b191690556040516122c39081620002b98239f35b6001600160a81b031990911617600160a01b1760015562000271565b600080fd5b604081019081106001600160401b038211176200019557604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176200019557604052565b51906001600160a01b03821682036200017457565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa908115620002655760009162000225575090565b906020823d82116200025c575b816200024160209383620001ab565b810103126200025957506200025690620001cf565b90565b80fd5b3d915062000232565b6040513d6000823e3d90fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c908163168a4822146113e7575080631865c57d146113c957806329917954146113025780632b97105a1461123e578063378de45b146111df578063379607f514610e275780633a4b66f114610e02578063441a3e7014610bb957806345b58fe414610a475780634ad02ef114610a025780634b2b4e36146108f857806354fd4d50146108d5578063678e300a146108b5578063715018a6146108575780638620891c146106cb5780638da5cb5b1461069f578063cfb5a5f814610638578063e6b1a3ae14610481578063e920eec014610449578063f2fde38b1461037c5763f9faa1040361001157826003193601126102f75760ff60015460a01c168181101561036957600161013691146114f7565b34156103325781519161018a6801bc16d674ec80000061018360209561017e87820161017483610166308461153c565b03601f1981018552846115cc565b3492519020611729565b6115ee565b1115611611565b838151928185808601956f636f6e74726163742e6164647265737360801b87526e233932b739a837b7b629b2ba3a32b960891b6030820152601f81526101cf81611594565b519095206001600160a01b03959086906101e8906116c3565b16602486518094819363068b0e0760e41b835234888401525af1908115610328579061021b9184916102fb575b50611687565b610247835186810190671d1bdad95b8b9a5960c21b82526008815261023f81611594565b519020611729565b9360025416803b156102f75760248392855194859384926335313c2160e11b845233908401525af180156102ed576102b3575b5091606091837fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc9451923484523390840152820152a180f35b917fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc9391946102e360609461156a565b949193509161027a565b82513d87823e3d90fd5b8280fd5b61031b9150873d8911610321575b61031381836115cc565b81019061166f565b38610215565b503d610309565b84513d85823e3d90fd5b6020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b634e487b7160e01b845260218252602484fd5b5090346102f75760203660031901126102f7576001600160a01b0382358181169390849003610445578454918216926103b6338514611796565b84156103f35750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b833461047e5761047b61045b3661148d565b9561047660018060a09894989795971b038a54163314611796565b611d3d565b80f35b80fd5b50346102f757602090816003193601126106345780356001600160a01b0381811691829003610630576104b8818754163314611796565b845163516b636d60e11b81526001848201528681602481865afa9081156106265787916105cf575b5051156105955790602484926105388751858101906f636f6e74726163742e6164647265737360801b82526e233932b739a837b7b629b2ba3a32b960891b6030820152601f815261053081611594565b5190206116c3565b16938787519586948593637358d1d760e11b85528401525af19182156105885761047b9350849261056b575b5050611687565b6105819250803d106103215761031381836115cc565b3880610564565b50505051903d90823e3d90fd5b845162461bcd60e51b815280840185905260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b6044820152606490fd5b90503d8088833e6105e081836115cc565b810190858183031261061e5780519067ffffffffffffffff821161062257019080601f8301121561061e578151610618928701611887565b386104e0565b8780fd5b8880fd5b86513d89823e3d90fd5b8580fd5b8380fd5b50913461047e57602036600319011261047e5750610698602092356106936106838451868101906a1c1bdbdb0b999bdc8b9a5960aa1b825284602b820152602b8152610530816115b0565b6001600160a01b03163014611f76565b611fd7565b9051908152f35b5050346106c757816003193601126106c757905490516001600160a01b039091168152602090f35b5080fd5b506020908160031936011261063457803560018060a01b036024848260025416875192838092634f558e7960e01b825287898301525afa90811561062657879161083a575b50156108035760ff60015460a01c16838110156107f0578492916107386001604493146114f7565b6107746801bc16d674ec80000061018361076d8a518881019061023f8161075f308561153c565b03601f1981018352826115cc565b34906115ee565b6107b88751858101906f636f6e74726163742e6164647265737360801b82526e233932b739a837b7b629b2ba3a32b960891b6030820152601f815261053081611594565b1693878751958694859363010975af60e31b85528401523460248401525af19182156105885761047b9350849261056b575050611687565b634e487b7160e01b875260218452602487fd5b845162461bcd60e51b815280840185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b6108519150853d87116103215761031381836115cc565b38610710565b833461047e578060031936011261047e57805481906001600160a01b03811690610882338314611796565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461047e57602036600319011261047e5750610698602092356120f9565b5050346106c757816003193601126106c75760ff6020925460a01c169051908152f35b5090346102f7576109083661148d565b9261092360018060a09998999594951b038b54163314611796565b875194610954602087018761093830836117e1565b039761094c601f19998a81018352826115cc565b51902061195b565b156109ea5750505050509061098f61099e92855161098760208201928261097b308661180e565b039081018352826115cc565b5190206118be565b60208151910120923691611850565b60208151910120036109b55750505b61047b6119ec565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b9397509350936109fd9750949094611d3d565b6109ad565b5050346106c757816003193601126106c75780610a30610a43925160208101906109878161075f308561180e565b9051918291602083526020830190611435565b0390f35b508290346106c757816003193601126106c757825192602093848101906a1a591ccb9a5b8b9c1bdbdb60aa1b82523060601b602b820152601f8152610a8b81611594565b519020936001948460018060a01b038754169160248551809481936378267eb560e11b8352898301525afa938415610baf578594610b01575b505092908094929451938080860192818752875180945286019601925b828110610aee5785870386f35b8351875295810195928101928401610ae1565b909193503d8086843e610b1481846115cc565b820190848383031261063057825167ffffffffffffffff9384821161061e57019082601f83011215610b98578151938411610b9c57508260051b90845193610b5e878401866115cc565b84528580850192820101928311610b985785809101915b838310610b885750505050918580610ac4565b8251815291810191869101610b75565b8680fd5b634e487b7160e01b875260419052602486fd5b83513d87823e3d90fd5b509190346106c757806003193601126106c75782359260249384359060ff60015460a01c1683811015610df057600103610dae5760025484516331a9108f60e11b8152808501839052602094916001600160a01b039190869082908b90829086165afa908115610da4579082918991610d77575b50163303610d455783610c4e87518781019061023f8161075f893086611f41565b10610d0c57916044859288809a95610ca28a9b9a51878101906f636f6e74726163742e6164647265737360801b82526e233932b739a837b7b629b2ba3a32b960891b6030820152601f815261053081611594565b16878b519788968795630441a3e760e41b87528601528401525af1918215610d0257849384938493610cdb92859261056b575050611687565b818115610cf9575b3390f115610cef575080f35b51903d90823e3d90fd5b506108fc610ce3565b85513d86823e3d90fd5b855162461bcd60e51b81528083018690526014818a0152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b855162461bcd60e51b8152808301869052600d818a01526c3737ba103a34329037bbb732b960991b6044820152606490fd5b610d979150873d8911610d9d575b610d8f81836115cc565b8101906116a4565b38610c2d565b503d610d85565b87513d8a823e3d90fd5b835162461bcd60e51b8152602081850152601b818801527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152606490fd5b634e487b7160e01b8652602184528686fd5b833461047e578060031936011261047e576109ad60018060a01b038254163314611796565b50346102f7576020908160031936011261063457803591610e6b8451828101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b8152610530816115b0565b6001600160a01b039390610e829085163014611f76565b60ff60015460a01c16838110156107f0576001811461119c57606447111561114b5786949392919060031461114257848285610ef48951838101906f636f6e74726163742e6164647265737360801b82526a4672656e734f7261636c6560a81b6030820152601b815261053081611594565b16602489518094819363404df7b160e11b8352308a8401525af180156110e85786918291611125575b50915b610f2981611fd7565b928487610f708b51838101906f636f6e74726163742e6164647265737360801b82526e233932b739a837b7b629b2ba3a32b960891b6030820152601f815261053081611594565b169160648b5180968193632ec5bc4560e11b8352878c8401528960248401521595861560448401525af192831561111b578593610fb3918a916111045750611687565b610fdb8951848101906b70726f746f636f6c2e66656560a01b8252600c815261023f81611594565b9081151590816110fc575b50611068575b506024866002541695895196879384926331a9108f60e11b84528301525afa801561105e57859485948594859361103f575b505083918315611035575b1690f115610cef575080f35b6108fc9250611029565b611056929350803d10610d9d57610d8f81836115cc565b90388061101e565b86513d87823e3d90fd5b9190928760646110a18361109b8d51878101906c1999594b9c9958da5c1a595b9d609a1b8252600d815261053081611594565b96611fb7565b04938885159182156110c4575b50505050916110bd9192611fca565b9138610fec565b8394955083928392889284926110f2575b1690f1156110e8578390873888816110ae565b87513d88823e3d90fd5b6108fc92506110d5565b905038610fe6565b61031b9150853d87116103215761031381836115cc565b89513d8a823e3d90fd5b61113c9150843d86116103215761031381836115cc565b38610f1d565b84600191610f20565b855162461bcd60e51b8152808501849052602560248201527f6d7573742062652067726561746572207468616e203130302077656920746f20604482015264636c61696d60d81b6064820152608490fd5b855162461bcd60e51b8152808501849052601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b50913461047e57602036600319011261047e57506106986020923561122a6106838451868101906a1c1bdbdb0b999bdc8b9a5960aa1b825284602b820152602b8152610530816115b0565b825161023f8161075f878201943086611f41565b50346102f757826003193601126102f757602083602460018060a01b03611269818454163314611796565b6112ad8651858101906f636f6e74726163742e6164647265737360801b82526e233932b739a837b7b629b2ba3a32b960891b6030820152601f815261053081611594565b16938286519586948593637358d1d760e11b85528401525af19081156112f65761047b925083916112de5750611687565b61031b915060203d81116103215761031381836115cc565b505051903d90823e3d90fd5b5090346102f757826003193601126102f7578051611368602082016f636f6e74726163742e6164647265737360801b81526a4672656e734f7261636c6560a81b6030840152601b835261135483611594565b91519091206001600160a01b0391906116c3565b163303611386576001805460ff60a01b1916600360a01b1790558280f35b906020606492519162461bcd60e51b8352820152601860248201527f6d7573742062652063616c6c6564206279206f7261636c6500000000000000006044820152fd5b5050346106c757816003193601126106c757610a4390610a30612187565b83853461047e578060031936011261047e57506106988260208094019061023f8161075f308561153c565b60005b8381106114255750506000910152565b8181015183820152602001611415565b9060209161144e81518092818552858086019101611412565b601f01601f1916010190565b9181601f840112156114885782359167ffffffffffffffff8311611488576020838186019501011161148857565b600080fd5b9060806003198301126114885767ffffffffffffffff60043581811161148857836114ba9160040161145a565b9390939260243583811161148857826114d59160040161145a565b93909392604435918211611488576114ef9160040161145a565b909160643590565b156114fe57565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b67ffffffffffffffff811161157e57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761157e57604052565b6060810190811067ffffffffffffffff82111761157e57604052565b90601f8019910116810190811067ffffffffffffffff82111761157e57604052565b919082018092116115fb57565b634e487b7160e01b600052601160045260246000fd5b1561161857565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b90816020910312611488575180151581036114885790565b1561168e57565b634e487b7160e01b600052600160045260246000fd5b9081602091031261148857516001600160a01b03811681036114885790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561171d57600091611702575090565b61171a915060203d8111610d9d57610d8f81836115cc565b90565b6040513d6000823e3d90fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561171d57600091611768575090565b906020823d821161178e575b81611781602093836115cc565b8101031261047e57505190565b3d9150611774565b1561179d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b67ffffffffffffffff811161157e57601f01601f191660200190565b92919261185c82611834565b9161186a60405193846115cc565b829481845281830111611488578281602093846000960137010152565b9092919261189481611834565b916118a260405193846115cc565b8294828452828201116114885760206118bc930190611412565b565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa91821561194e5781926118ff57505090565b909291503d8084833e61191281836115cc565b8101906020818303126106345780519067ffffffffffffffff8211610445570181601f820112156106345761171a929350602081519101611887565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa90811561171d5760009161199a575090565b61171a915060203d81116103215761031381836115cc565b156119b957565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b6801bc16d674ec80000090814710611ce6576001549160ff8360a01c166004811015611cd0576001611a1e91146119b2565b6040908151602090611a4b82820182611a3730836117e1565b039261094c601f19948581018352826115cc565b15611c9857611a68908451610987848201928261097b308661180e565b835195611aa5838801757769746864726177616c5f63726564656e7469616c7360501b81523060601b98896036820152602a8152610987816115b0565b93611ad1865185810190687369676e617475726560b81b82528a6029820152601d815261098781611594565b978651858101917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b8352603182015260258152611b01816115b0565b5190208651635376ab1f60e11b81526004810191909152916001600160a01b039085846024818585165afa938415611c8d57600094611c5e575b50611b8d8851878101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152610530816115b0565b60ff60a01b19909116600160a11b176001551694853b1561148857600093611bed93611bfc611bda938a519c8d97889687966304512a2360e31b8852608060048901526084880190611435565b6003199384888303016024890152611435565b91858303016044860152611435565b9060648301520391865af1948515611c53577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611c44575b5082519182523390820152a1565b611c4d9061156a565b38611c36565b83513d6000823e3d90fd5b90938682813d8311611c86575b611c7581836115cc565b8101031261047e5750519238611b3b565b503d611c6b565b88513d6000823e3d90fd5b835162461bcd60e51b81526004810183905260116024820152701d985b1a59185d1bdc881b9bdd081cd95d607a1b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b96959293949096600160f81b3001958630116115fb576040988951602098898201908152898252611d6d82611594565b611d78368a89611850565b8a81519101209151902003611efd57611dbc8a51898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b60308201526024815261094c816115b0565b611eab575b60ff60015460a01c16956004871015611cd057611e7b611e58968c96600095611ded60018e9c146119b2565b611e6c8951611e338d82016f636f6e74726163742e6164647265737360801b81526e233932b739a837b7b629b2ba3a32b960891b6030840152601f835261135483611594565b1699519c8d9b8c9a8b996303a483bb60e61b8b52608060048c015260848b0191611d1c565b9060031995868a84030160248b0152611d1c565b92868403016044870152611d1c565b90606483015203925af1918215611ea0576118bc93945060009261056b575050611687565b84513d6000823e3d90fd5b60015460ff8160a01c166004811015611cd057611ec890156119b2565b611ee8611ee28c518b81019061094c8161075f30856117e1565b15611687565b60ff60a01b1916600160a01b17600155611dc1565b895162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b90916042926d19195c1bdcda5d0b985b5bdd5b9d60921b83526001600160601b03199060601b16600e83015260228201520190565b15611f7d57565b60405162461bcd60e51b81526020600482015260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b818102929181159184041417156115fb57565b919082039182116115fb57565b47156120f35760405161202161200a6020830183611ff6863084611f41565b039361023f601f19958681018352826115cc565b9160405161023f60208201928261097b308661153c565b9060405190602082016f6672656e2e706173742e636c61696d7360801b81523060601b94856030850152604484015260448352608083019280841067ffffffffffffffff85111761157e576120866120b9926120b3926120bf96604052519020611729565b9560405160208101916b746f74616c2e636c61696d7360a01b8352602c8201526020815261023f81611594565b476115ee565b90611fb7565b81156120dd57049081156120d65761171a91611fca565b5050600090565b634e487b7160e01b600052601260045260246000fd5b50600090565b60ff60015460a01c16906004821015611cd0576001820361211b575050600090565b61212490611fd7565b9061214f60405160208101906b70726f746f636f6c2e66656560a01b8252600c815261023f81611594565b90811515908161217b575b50612163575090565b90606461217461171a934790611fb7565b0490611fca565b6003915014153861215a565b60ff60015460a01c166004811015611cd057801561225357600281146122305760018114612201576003146121df576040516121c281611594565b600d81526c7374617465206661696c75726560981b602082015290565b6040516121eb81611594565b6006815265195e1a5d195960d21b602082015290565b5060405161220e81611594565b6012815271616363657074696e67206465706f7369747360701b602082015290565b5060405161223d81611594565b60068152651cdd185ad95960d21b602082015290565b5060405161226081611594565b601781527f6177616974696e672076616c696461746f7220696e666f00000000000000000060208201529056fea2646970667358221220dd195cdc076eb0e58754fd560c2447b6aecb752c73921fbeb013007800e87bde64736f6c63430008110033a2646970667358221220502757ad5b3a04673038f135fae7945858b013a15ced5bf025a7eb342753f6c664736f6c63430008110033c97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bb41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583a26469706673582212206c17f1f0c6be1045c8bac7677a94bd4b6ed20cccc0c7ddc7badf5b1f9cd35b4664736f6c6343000811003350bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350",
    "sourceMap": "958:29770:51:-:0;;;;;;1594:4:30;958:29770:51;;;;;;;;;2341:42;1664;958:29770;;;;;;;;;1656:51;958:29770;;;1656:51;958:29770;1854:42;958:29770;1854:42;958:29770;;;1854:42;958:29770;1930:42;958:29770;1930:42;958:29770;;;1930:42;958:29770;;2014:25;958:29770;;;2014:25;958:29770;2073:42;958:29770;2073:42;958:29770;;;2073:42;958:29770;2160:42;958:29770;2152:51;958:29770;;;2152:51;958:29770;2246:42;958:29770;2238:51;958:29770;;;2238:51;958:29770;2333:51;958:29770;;;2333:51;958:29770;;2406:101;958:29770;;:::i;:::-;;;;;;;;;-1:-1:-1;;958:29770:51;2406:101;958:29770;;;;;;-1:-1:-1;;;;;;;;;;;958:29770:51;-1:-1:-1;;;958:29770:51;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;;;;;;;2868:66;;958:29770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:101;958:29770;;;;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "958:29770:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:82;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:30;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1454:32;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1623:84;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;2209:80;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1111:38;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1155:52;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;958:29770:51;;9345:5;;;:38;;;958:29770;9342:1177;;;-1:-1:-1;9404:5:51;958:29770;;;-1:-1:-1;958:29770:51;9394:16;;-1:-1:-1;;;;;958:29770:51;9394:16;:::i;:::-;9420:11;958:29770;;;-1:-1:-1;;;;;958:29770:51;9420:37;;;;;958:29770;;;;;;;;;;;;9420:37;;-1:-1:-1;;;;;958:29770:51;;9420:37;;;;;;;;;9342:1177;-1:-1:-1;;9477:14:51;958:29770;9404:5;958:29770;;;-1:-1:-1;;;9477:44:51;;-1:-1:-1;;;;;958:29770:51;;;;9477:44;;958:29770;;;;1671:64:30;;;958:29770:51;;;;;;;;;;;9477:44;;;;;;;;;;;9342:1177;9542:7;;;;;;:::i;:::-;9420:11;958:29770;;;-1:-1:-1;;;9575:32:51;;958:29770;9575:32;;1671:64:30;;;958:29770:51;;;;;;;;;-1:-1:-1;;;;;958:29770:51;9575:32;;;;;;;;;;9342:1177;9617:19;958:29770;;-1:-1:-1;;;;;958:29770:51;;9617:19;:::i;:::-;958:29770;-1:-1:-1;;;;;;;;;;;9684:37:51;;;;;958:29770;;;;;;;;;;;;;9684:37;;958:29770;;9684:37;;958:29770;9477:14;958:29770;;;;-1:-1:-1;;;958:29770:51;;;;9684:37;;;;;;;;9342:1177;-1:-1:-1;9731:12:51;958:29770;-1:-1:-1;;;;;958:29770:51;9731:39;;;;;958:29770;;;;;;;;;;;;9731:39;;;958:29770;9731:39;;1671:64:30;-1:-1:-1;;;;;958:29770:51;;9731:39;;;;;;;;;9342:1177;-1:-1:-1;9420:11:51;958:29770;-1:-1:-1;;;;;958:29770:51;9850:38;;;;;958:29770;;;;;;;;;;;;9850:38;;;958:29770;9850:38;;1671:64:30;-1:-1:-1;;;;;958:29770:51;;9850:38;;;;;;;;;9342:1177;-1:-1:-1;;9420:11:51;958:29770;;;-1:-1:-1;;;9913:32:51;;958:29770;9913:32;;1671:64:30;;;;958:29770:51;;;;;;;;-1:-1:-1;;;;;958:29770:51;9913:32;;;;;;;;;;;9342:1177;958:29770;10007:7;958:29770;-1:-1:-1;;;;;958:29770:51;9966:17;958:29770;;;;9966:17;:::i;:::-;10007:7;:::i;:::-;958:29770;;9913:32;;;;958:29770;9913:32;;958:29770;9913:32;;;;;;958:29770;9913:32;;;:::i;:::-;;;958:29770;;;;;;10007:7;9913:32;;958:29770;;;;9913:32;;;-1:-1:-1;9913:32:51;;;958:29770;;;;;;;;;9850:38;;;;:::i;:::-;958:29770;;9850:38;;;;958:29770;;;;9850:38;958:29770;;;;;;;;;9850:38;958:29770;;;9731:39;;;;:::i;:::-;958:29770;;9731:39;;;;9684:37;;;;:::i;:::-;958:29770;;9684:37;;;;9575:32;;958:29770;9575:32;;958:29770;9575:32;;;;;;958:29770;9575:32;;;:::i;:::-;;;958:29770;;;;9617:19;958:29770;;9575:32;;;;;-1:-1:-1;9575:32:51;;;958:29770;;;;;;;;;9477:44;;;;958:29770;9477:44;;958:29770;9477:44;;;;;;958:29770;9477:44;;;:::i;:::-;;;958:29770;;;;;9477:44;;;;;;;-1:-1:-1;9477:44:51;;9420:37;;;;:::i;:::-;958:29770;;9420:37;;;;958:29770;;;;9342:1177;10033:6;;;958:29770;-1:-1:-1;;;;;;;;;;;10051:37:51;;;;;958:29770;;;;;;;;10051:37;;;;;;958:29770;10051:37;;;:::i;:::-;;;;;;;;;;;;;;10030:489;-1:-1:-1;;10108:5:51;958:29770;-1:-1:-1;;;;;958:29770:51;10098:16;;958:29770;;10098:16;:::i;:::-;10124:11;958:29770;;10124:37;;;;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;10124:37;;958:29770;10124:37;;;;;;;;;10030:489;;958:29770;;10124:37;;;;:::i;:::-;958:29770;;;;10124:37;958:29770;;;10051:37;;;;:::i;:::-;958:29770;;10051:37;;;;958:29770;;;10051:37;958:29770;;;;;;;;;10030:489;10275:5;958:29770;;;-1:-1:-1;;;;;958:29770:51;10265:16;;958:29770;;10265:16;:::i;:::-;958:29770;10291:11;958:29770;;10291:37;;;;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;10291:37;;958:29770;10291:37;;;;;;;;;;;;10030:489;958:29770;;;10348:14;958:29770;;;;;10275:5;958:29770;;;;;;;;;;;;10348:44;;958:29770;10348:44;;958:29770;;;;;1671:64:30;10348:44:51;;;;;;;;;;;10030:489;958:29770;-1:-1:-1;;;;;;;;;;;10402:60:51;;;;;958:29770;;;;;;;;10402:60;;;;;;958:29770;10402:60;;;:::i;:::-;;;;;;;;;;;;;;10030:489;958:29770;;10291:11;958:29770;;10472:38;;;;;;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;10472:38;;958:29770;10472:38;;1671:64:30;958:29770:51;10472:38;;;;;;;;;10030:489;;958:29770;;10472:38;958:29770;;;;10402:60;;;;:::i;:::-;958:29770;;10402:60;;;;;958:29770;;;10348:44;;;;;958:29770;10348:44;;;;;;;;;958:29770;10348:44;;;:::i;:::-;;;958:29770;;;;;;;10348:44;;;;;;;-1:-1:-1;10348:44:51;;10291:37;;;;:::i;:::-;958:29770;;10291:37;;;;9345:38;958:29770;9375:8;9354:17;-1:-1:-1;;;;;958:29770:51;;-1:-1:-1;;;;;958:29770:51;;9354:17;:::i;:::-;:29;;9345:38;;958:29770;;;;;;;;;;;;;1289:44;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1073:32;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;7146:11;958:29770;;;-1:-1:-1;;;7146:19:51;;958:29770;7146:19;;-1:-1:-1;;;;;958:29770:51;7146:19;;958:29770;;;;;;;;7146:19;;;;;;;;;;;958:29770;;;7208:9;958:29770;;;;3678:6:30;;;3674:212;;958:29770:51;;;3674:212:30;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;3705:44:30;958:29770:51;;;;;;;;;;;:::i;:::-;;;;;;3768:34:30;;;;;;;;958:29770:51;;;;;;;;;;;;;:::i;:::-;;;;;3821:34:30;;;;;:::i;:::-;3674:212;;;958:29770:51;;;7146:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;958:29770;;;;;;;;;;;;;997:24;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;25076:9;958:29770;-1:-1:-1;;;;;958:29770:51;25076:9;;958:29770;;25076:9;:::i;:::-;958:29770;25094:11;958:29770;;25159:17;958:29770;25094:83;;;;;;958:29770;;;;;;;;;;;;;;;25094:83;;958:29770;25094:83;;;:::i;:::-;;;;;;;;;;;;;;958:29770;;;-1:-1:-1;;;;;;;;;;;25185:34:51;;;;;;958:29770;;;;;25185:34;;25148:9;;958:29770;25148:9;;;25185:34;;958:29770;25185:34;;958:29770;;;;;;-1:-1:-1;;;958:29770:51;;;;25185:34;;;;;;;;;;;958:29770;;;25094:11;958:29770;;;25159:17;958:29770;25227:82;;;;;958:29770;;-1:-1:-1;;;25227:82:51;;958:29770;;25227:82;;958:29770;;;;;;-1:-1:-1;;;958:29770:51;;;;;;;;;25124:22;958:29770;;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25148:9;958:29770;25148:9;;;958:29770;;;;;;;;;;;;;;;;;1671:64:30;25227:82:51;;;;;;;;;;958:29770;;;;;;;;;;-1:-1:-1;958:29770:51;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;-1:-1:-1;958:29770:51;;;;;;;;-1:-1:-1;958:29770:51;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;-1:-1:-1;;958:29770:51;;;;;;;;-1:-1:-1;958:29770:51;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;958:29770:51;;;;;;;;;;;;25124:22;958:29770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25185:34;;;;:::i;:::-;958:29770;;25185:34;;;;25094:83;;;;:::i;:::-;958:29770;;25094:83;;;;958:29770;;;;;;;;;;;;;1528:38;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;10591:6;;;;;;:15;;;958:29770;10591:38;;;958:29770;10588:1062;;;10650:5;958:29770;-1:-1:-1;;;;;958:29770:51;10640:16;;958:29770;;10640:16;:::i;:::-;958:29770;10666:11;958:29770;;10666:37;;;;;958:29770;;;;;;;;;;;;;10666:37;;;;;;;;;;;;;10588:1062;958:29770;;;10723:14;958:29770;;;;10650:5;958:29770;;;;;;;;;;;10723:44;;958:29770;10723:44;;958:29770;;;;;1671:64:30;958:29770:51;;;10723:44;;;;;;;;;;;;;;10588:1062;10788:7;;;;;;:::i;:::-;958:29770;10666:11;958:29770;;;;;;;;;;;;10821:32;;;;;958:29770;10821:32;;1671:64:30;10821:32:51;;;;;;;;;;;10588:1062;10863:19;;;;;:::i;:::-;958:29770;10666:11;958:29770;;10892:27;;;;;958:29770;;-1:-1:-1;;;10892:27:51;;958:29770;10892:27;;1671:64:30;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;10892:27;;;;;;;;;;;10588:1062;958:29770;;10666:11;958:29770;;;;;10944:32;;;;;;;958:29770;10944:32;;1671:64:30;10944:32:51;;;;;;;;;;;10588:1062;10997:17;;11038:7;10997:17;;;;:::i;10944:32::-;;;;;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;;;;10997:17;10944:32;;;;;;;10892:27;;;;;;;:::i;:::-;958:29770;;10892:27;;;;;;958:29770;;;;10892:27;958:29770;;;;;;;;;;;10892:27;958:29770;;;10821:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;10863:19;958:29770;;;10821:32;;;;;;;;;958:29770;;;;;;;;;10723:44;;-1:-1:-1;10723:44:51;-1:-1:-1;10723:44:51;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;;;;10723:44;;;;;;;;;10666:37;;;;:::i;:::-;958:29770;;10666:37;;;;10588:1062;11064:6;-1:-1:-1;11064:6:51;;;;;958:29770;;-1:-1:-1;;;;;;;;;;;11082:37:51;;;;;958:29770;;;;;;;;11082:37;;;;;;958:29770;11082:37;;;:::i;:::-;;;;;;;;;;;;;;11061:589;-1:-1:-1;;11139:5:51;958:29770;-1:-1:-1;;;;;958:29770:51;11129:16;;958:29770;;11129:16;:::i;:::-;11155:11;958:29770;;11155:37;;;;;958:29770;;;;;;;;;;;;11155:37;;;;;;;;;;11061:589;;958:29770;;11082:37;;;;:::i;:::-;958:29770;;11082:37;;;;11061:589;11220:8;11210:18;;11220:8;;;958:29770;;-1:-1:-1;;;;;;;;;;;11240:60:51;;;;;958:29770;;;;;;;;11240:60;;;;;;958:29770;11240:60;;;:::i;11207:443::-;958:29770;;;;;;;;11398:16;958:29770;11408:5;958:29770;;11398:16;:::i;:::-;958:29770;11424:11;958:29770;;11424:37;;;;;958:29770;;;;;;;;;;;;11424:37;;;;;;;;;;;;;11207:443;958:29770;;;11481:14;958:29770;;;;;11408:5;958:29770;;;;;;;;;;;;11481:44;;958:29770;11481:44;;958:29770;;;;;1671:64:30;11481:44:51;;;;;;;;;;;11207:443;11546:7;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;11565:39:51;;;;;;958:29770;;;;;;;;;;;;;;;11565:39;;958:29770;;11565:39;;958:29770;;;;-1:-1:-1;;;958:29770:51;;;;11565:39;;;;;;;;;;;11207:443;958:29770;;11424:11;958:29770;;11614:27;;;;;;958:29770;;-1:-1:-1;;;11614:27:51;;958:29770;11614:27;;1671:64:30;;;;958:29770:51;;;;;;;;;;;;;;;;;11614:27;;;;;;;;11207:443;;958:29770;;11565:39;;;;:::i;:::-;958:29770;;11565:39;;;;11481:44;;;;;958:29770;11481:44;;;;;;;;;958:29770;11481:44;;;:::i;:::-;;;958:29770;;;;;;;11481:44;;;;;;;-1:-1:-1;11481:44:51;;11424:37;;;;:::i;:::-;958:29770;;11424:37;;;;10591:38;10610:19;10621:8;10610:19;;;10591:38;;:15;10601:5;;;;10591:15;;958:29770;;;;;;;;;;;;;24680:9;958:29770;;;-1:-1:-1;;;;;958:29770:51;24680:9;;958:29770;;24680:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;24698:49:51;;;;;958:29770;;-1:-1:-1;;;24698:49:51;;;958:29770;;24698:49;;958:29770;;;;;;;;;;;;24698:49;958:29770;;;24698:49;;;;;;;;;;;;;958:29770;;;;24755:11;958:29770;;24833:17;958:29770;24755:96;;;;;;958:29770;;-1:-1:-1;;;24755:96:51;;958:29770;;;;;;;;;;;24755:96;;958:29770;24755:96;;;:::i;:::-;;;;;;;;;;;;;;958:29770;24859:49;;;;;;;958:29770;;24859:49;;;958:29770;;24859:49;;958:29770;;;;;;;;;;;;;;;;;;;;;;24859:49;;;;;;;;;;;958:29770;;;24755:11;958:29770;;24833:17;958:29770;24916:92;;;;;;958:29770;;-1:-1:-1;;;24916:92:51;;958:29770;;;;;;;;;;;24916:92;;958:29770;24916:92;;;:::i;:::-;;;;;;;;;;;958:29770;;24859:49;;;;:::i;:::-;958:29770;;24859:49;;;;24755:96;;;;:::i;:::-;958:29770;;24755:96;;;;24698:49;;;;:::i;:::-;958:29770;;24698:49;;;;958:29770;;;;;;;;;;;;;1251:32;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;2046:69;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1375:31;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;;:::i;:::-;;;;:::i;:::-;26831:10;;958:29770;;;26879:20;;958:29770;;;;;;;;;;;;;;;;;;;26937:20;958:29770;;;;;;;;;;26983:6;;:17;;;958:29770;26980:3207;;;-1:-1:-1;;27011:12:51;958:29770;27032:12;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;;;;27011:37;;;;;958:29770;;;;;;27011:37;;958:29770;27011:37;;958:29770;;;;;;;;27046:1;958:29770;;;1671:64:30;27011:37:51;;;;;;;;;;;26980:3207;958:29770;;27058:11;958:29770;27063:5;958:29770;;27058:11;:::i;:::-;27079;958:29770;;;;;27079:48;;;;;;958:29770;;;;;;;;;;27079:48;;;;;;;;;;;;;;;26980:3207;27142:3;;;958:29770;27137:9;958:29770;;;;27137:9;:::i;:::-;958:29770;;;;27156:46;;;;;;958:29770;;;;;;27156:46;;;;;;;;;;;;;;;;;;;26980:3207;958:29770;;;;;;;;;;27212:32;;958:29770;;27212:32;;;;;26980:3207;27212:32;;;;-1:-1:-1;;;;;;;;;;;27254:47:51;;;;;;958:29770;;-1:-1:-1;;;27254:47:51;;;958:29770;;27254:47;;958:29770;;;;;;;;;;;;27254:47;958:29770;;;27254:47;;;;;;;;;;;;;26980:3207;958:29770;;;;;;27311:20;;;;;;958:29770;;;;;;;;;;27311:20;;;;958:29770;;27311:20;;1671:64:30;27311:20:51;;;;;;;;;;;26980:3207;958:29770;;27346:9;958:29770;27346:9;958:29770;;27346:9;:::i;:::-;958:29770;;;;27427:17;958:29770;27366:79;;;;;;958:29770;;;;;;;;;;;;;;;27366:79;;958:29770;27366:79;;;:::i;:::-;;;;;;;;;;;;;;26980:3207;958:29770;;;;;;27475:28;958:29770;27046:1;958:29770;;;;;;27046:1;958:29770;;;;;;;27585:18;27544:3;958:29770;;;;;;;27585:18;;;:::i;:::-;958:29770;;27063:5;958:29770;;27633:22;27858:67;27815:33;27633:22;;958:29770;27731:35;958:29770;;;;27683:20;27731:35;;;:::i;:::-;958:29770;27815:33;;;:::i;:::-;958:29770;27032:12;958:29770;;27894:30;958:29770;;1671:64:30;;;:::i;:::-;958:29770:51;1671:64:30;;-1:-1:-1;;;958:29770:51;;;;27858:67;:::i;:::-;958:29770;28146:15;;28143:34;;26980:3207;958:29770;28190:13;;28187:29;;26980:3207;28263:25;28374:78;28263:25;;;;:::i;:::-;28397:22;;958:29770;;1671:64:30;;;;:::i;:::-;;;;958:29770:51;;;;;28374:78;:::i;:::-;958:29770;27063:5;958:29770;;28462:15;;;;;;958:29770;;;;;28462:15;;;;958:29770;28462:15;;958:29770;28462:15;;;;;;;;;;;;;;;;;26980:3207;958:29770;;;;;;28487:65;28523:28;;958:29770;;1671:64:30;;;:::i;:::-;958:29770:51;1671:64:30;;-1:-1:-1;;;958:29770:51;;;;28487:65;:::i;:::-;28562:20;;;;;958:29770;;;;;;;28562:20;;;;;;;958:29770;;28562:20;;1671:64:30;28562:20:51;;;;;;;;;;;;26980:3207;958:29770;;;28751:89;28883:21;958:29770;28945:72;958:29770;27063:5;958:29770;;28607:22;958:29770;;;:::i;:::-;28751:89;;:::i;:::-;28883:21;;:::i;:::-;958:29770;;;;;28966:20;958:29770;;:::i;:::-;28945:72;;:::i;:::-;958:29770;;;;29027:13;;;;;958:29770;;29027:13;;;958:29770;29027:13;;958:29770;29027:13;;;;;;;;;;;;;;;;;26980:3207;-1:-1:-1;;958:29770:51;;;;27544:3;29053:28;;:35;27544:3;;29102:56;;;;;;;;958:29770;;;;29102:56;;;;;;;;;958:29770;29102:56;;;:::i;:::-;;;;;;;;;;;;;;;29050:454;958:29770;;;;29170:20;;;;;958:29770;;;;;;29170:20;;;;;;;28805:1;958:29770;29170:20;;1671:64:30;29170:20:51;;;;;;;;29050:454;;;29513:92;29050:454;;27032:12;958:29770;;29537:29;958:29770;;1671:64:30;;;;:::i;:::-;27392:22:51;1671:64:30;;958:29770:51;;;;;29513:92;:::i;29170:20::-;;;;:::i;:::-;958:29770;;29170:20;;;;29102:56;;;;;;;:::i;:::-;958:29770;;29102:56;;;;;;29050:454;29219:20;;;;;;;;;;;;;;;958:29770;;;;;;29219:20;;;;;;;28805:1;958:29770;29219:20;;1671:64:30;29219:20:51;;;;;;;;29050:454;958:29770;;29513:92;958:29770;;29410:83;958:29770;;;29264:20;958:29770;;;:::i;:::-;29410:83;;:::i;:::-;29050:454;;29219:20;;;;:::i;:::-;958:29770;;29219:20;;;;29027:13;;;;:::i;:::-;958:29770;;29027:13;;;;;958:29770;;;;;;;;;29027:13;958:29770;;;28562:20;;;;;;:::i;:::-;958:29770;;28562:20;;;;;958:29770;;;;28562:20;958:29770;;;;;;;;;28562:20;958:29770;;;28462:15;;;;:::i;:::-;958:29770;;28462:15;;;;28187:29;28205:11;;-1:-1:-1;28187:29:51;;28143:34;28163:14;;-1:-1:-1;28143:34:51;;958:29770;-1:-1:-1;;;958:29770:51;;;;;1671:64:30;;958:29770:51;27366:79;;;;:::i;:::-;958:29770;;27366:79;;;;958:29770;;;;27366:79;958:29770;;;;;;;;;27311:20;;;;:::i;:::-;958:29770;;27311:20;;;;27254:47;;;;:::i;:::-;958:29770;;27254:47;;;;;958:29770;;;27212:32;;;;;27156:46;;;;;;;:::i;:::-;958:29770;;27156:46;;;;;27079:48;;;;:::i;:::-;958:29770;;27079:48;;;;27011:37;;;;:::i;:::-;958:29770;;27011:37;;;;;958:29770;;;;;;;;;26980:3207;29621:566;;;;;;;;;;;;958:29770;;;;-1:-1:-1;;;;;;;;;;;29642:37:51;;;;;958:29770;;;;;;;;29642:37;;;;;;958:29770;29642:37;;;:::i;29621:566::-;958:29770;;;;;;;;;;;29777:11;958:29770;29782:5;958:29770;;29777:11;:::i;:::-;958:29770;29798:11;958:29770;;29798:48;;;;;;958:29770;;;;;;;;;;;;29798:48;;;;;;;;;;;;;;;29621:566;958:29770;;29856:9;958:29770;29861:3;958:29770;;29856:9;:::i;:::-;958:29770;29798:11;958:29770;;29875:46;;;;;958:29770;;;;;29875:46;;;;;;;;;;;;;;;;;;29621:566;958:29770;;29941:9;958:29770;29941:9;958:29770;;29941:9;:::i;:::-;958:29770;29798:11;958:29770;;;30022:17;958:29770;29961:79;;;;;;958:29770;;-1:-1:-1;;;29961:79:51;;958:29770;;;;;;;;;;;29961:79;;958:29770;29961:79;;;:::i;:::-;;;;;;;;;;;;;;29621:566;958:29770;;;;;;;29798:11;958:29770;;30050:32;;958:29770;;30050:32;;;;;29621:566;30050:32;;;;-1:-1:-1;;;;;;;;;;;30092:56:51;;;;;958:29770;;;;;;;;30092:56;;;;;;958:29770;30092:56;;;:::i;:::-;;;;;;;;;;;;;;29621:566;958:29770;;29798:11;958:29770;;30158:20;;;;;958:29770;;;;;;;;;;;;;30158:20;;958:29770;;30158:20;;1671:64:30;30158:20:51;;;;;;;;29621:566;;958:29770;;30092:56;;;;:::i;:::-;958:29770;;30092:56;;;;30050:32;;;;;29961:79;;;;;;;:::i;:::-;958:29770;;29961:79;;;;;29875:46;;;;:::i;:::-;958:29770;;29875:46;;;;29798:48;;;;:::i;:::-;958:29770;;29798:48;;;;;958:29770;;;;;;;;;26983:17;958:29770;26997:3;958:29770;;;26993:7;26983:17;;958:29770;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;958:29770:51;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;958:29770:51;;;;;;;;;;;;;;13003:11;958:29770;;13086:5;958:29770;-1:-1:-1;;;;;958:29770:51;;;12995:28;;958:29770;13081:11;;958:29770;;13081:11;:::i;:::-;958:29770;;;;13100:56;;;;;958:29770;;;;;;13100:56;;13133:20;;958:29770;13133:20;;13100:56;;;;;;;;;;958:29770;;;;;;;;;;;13212:28;958:29770;;;;;;13212:28;;;:::i;:::-;958:29770;13288:15;958:29770;;;;;;;;;;;;13288:35;;;;;;;;;;;;;;;958:29770;1671:64:30;958:29770:51;1671:64:30;;958:29770:51;;13278:46;958:29770;13342:9;958:29770;13342:9;958:29770;;13342:9;:::i;:::-;958:29770;;;;13728:17;958:29770;13663:83;;;;;;958:29770;;-1:-1:-1;;;13663:83:51;;958:29770;;;;;;;;;;;13663:83;;958:29770;13663:83;;;:::i;:::-;;;;;;;;;;;;;;958:29770;;;;;;;13754:19;;;;;958:29770;;;;;;;;;;;;;13754:19;;;;;;;;;;;;;;958:29770;;;13806:28;958:29770;;;13806:28;;;:::i;:::-;13288:15;958:29770;;;;;;13865:35;;;;;;;;;;;;7918:5:33;13865:35:51;;;;;958:29770;1671:64:30;958:29770:51;1671:64:30;;958:29770:51;;13855:46;:68;7918:5:33;;:::i;13865:35:51:-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;13754:19;;;;;;:::i;:::-;958:29770;;13754:19;;;;;13663:83;;;;:::i;:::-;958:29770;;13663:83;;;;13288:35;;;;;;;;;;;;;:::i;:::-;;;;13100:56;;;;:::i;:::-;958:29770;;13100:56;;;;958:29770;;;;;;;-1:-1:-1;;958:29770:51;;;;;;:::i;:::-;;;;:::i;:::-;21801:10;958:29770;;;21849:20;958:29770;;;;;;;;;;;;;;;;;;;21907:20;;958:29770;;;;;;;;;;21953:6;;;;:17;;;958:29770;21950:2659;;;-1:-1:-1;;21986:5:51;958:29770;-1:-1:-1;;;;;958:29770:51;;21981:11;;958:29770;;21981:11;:::i;:::-;22002;958:29770;;;;;22002:48;;;;;958:29770;;;;;;;;;;22002:48;;;;;;;;;;;;;;;21950:2659;958:29770;;22060:9;958:29770;22065:3;958:29770;;22060:9;:::i;:::-;958:29770;;;;22079:46;;;;;958:29770;;;;;22079:46;;;;;;;;;;;;;;;;;;21950:2659;958:29770;;;;;;;;;;22135:32;;958:29770;;22135:32;;;;;21950:2659;22135:32;;;;-1:-1:-1;;;;;;;;;;;22177:47:51;;;;;;958:29770;;-1:-1:-1;;;22177:47:51;;;958:29770;;22177:47;;958:29770;;;;;;;;;;;;;22177:47;958:29770;;;22177:47;;;;;;;;;;;;;21950:2659;958:29770;;;;;;22234:20;;;;;;958:29770;;;;;;;;;;22234:20;;;;958:29770;;22234:20;;1671:64:30;22234:20:51;;;;;;;;;;;21950:2659;958:29770;;22269:9;958:29770;22269:9;958:29770;;22269:9;:::i;:::-;958:29770;;;;22350:17;958:29770;22289:79;;;;;;958:29770;;-1:-1:-1;;;22289:79:51;;958:29770;;;;;;;;;;;22289:79;;958:29770;22289:79;;;:::i;:::-;;;;;;;;;;;;;;21950:2659;958:29770;;;21986:5;958:29770;;22398:22;958:29770;;22065:3;958:29770;;22448:20;958:29770;22496:45;958:29770;;;;22497:28;;;22496:45;:::i;:::-;958:29770;22591:28;22590:43;22591:28;;;22590:43;:::i;:::-;22958:15;958:29770;22958:15;;22955:34;;21950:2659;958:29770;23002:13;;22999:29;;21950:2659;23047:20;;;;;958:29770;;;;;;;23047:20;;;;;;;958:29770;;23047:20;;1671:64:30;23047:20:51;;;;;;;;;;;21950:2659;23105:25;;;23299:89;23105:25;23493:72;23105:25;23431:21;23105:25;;:::i;:::-;958:29770;21986:5;958:29770;;23155:22;958:29770;;;:::i;23299:89::-;23431:21;;:::i;:::-;958:29770;;22065:3;958:29770;;23514:20;958:29770;;:::i;23493:72::-;958:29770;;;;23609:3;23577:28;;:35;23609:3;;23626:56;;;;;;;958:29770;;;;23626:56;;;;;;;;;958:29770;23626:56;;;:::i;:::-;;;;;;;;;;;;;;23574:454;958:29770;;;;23694:20;;;;;;958:29770;;;;;;;23694:20;;;;;;;23353:1;958:29770;23694:20;;1671:64:30;23694:20:51;;;;;;;;23574:454;;958:29770;;23626:56;;;;:::i;:::-;958:29770;;23626:56;;;;23574:454;23743:20;;;;;;;;;;;;;;958:29770;;;;;;;23743:20;;;;;;;23353:1;958:29770;23743:20;;1671:64:30;23743:20:51;;;;;;;;23574:454;958:29770;;23934:83;958:29770;22065:3;958:29770;;23788:20;958:29770;;;:::i;23743:20::-;;;;:::i;:::-;958:29770;;23743:20;;;;23047;;;;;;;:::i;:::-;958:29770;;23047:20;;;;;;958:29770;;;;;;;;;22999:29;23017:11;;-1:-1:-1;22999:29:51;;22955:34;22975:14;;-1:-1:-1;22955:34:51;;22289:79;;;;:::i;:::-;958:29770;;22289:79;;;;22234:20;;;;:::i;:::-;958:29770;;22234:20;;;;22177:47;;;;:::i;:::-;958:29770;;22177:47;;;;22135:32;;;;;22079:46;;;;;;;:::i;:::-;958:29770;;22079:46;;;;;22002:48;;;;:::i;:::-;958:29770;;22002:48;;;;21950:2659;24043:566;;;;;;-1:-1:-1;24043:566:51;;;958:29770;;;;-1:-1:-1;;;;;;;;;;;24064:37:51;;;;;958:29770;;;;;;;;24064:37;;;;;;958:29770;24064:37;;;:::i;21953:17::-;958:29770;21967:3;958:29770;;;21963:7;21953:17;;958:29770;;;;;;;;;;;;;1412:36;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7281:5;;;;;;:22;;;958:29770;7278:674;;;-1:-1:-1;;7324:5:51;958:29770;-1:-1:-1;;;;;958:29770:51;;7314:16;;958:29770;;7314:16;:::i;:::-;958:29770;;7340:11;958:29770;;7340:37;;;;;958:29770;;;;;;;;;;;;;7340:37;;;;;;;;;;7278:674;958:29770;;;7397:14;958:29770;;;;7324:5;958:29770;;;;;;;;;;;;7397:44;;958:29770;7397:44;;958:29770;;;;;1671:64:30;7397:44:51;;;;;;;;;;;7278:674;7462:7;;;;;;:::i;:::-;958:29770;;7340:11;958:29770;;;;;;;;;;;;;7495:32;;958:29770;7495:32;;1671:64:30;7495:32:51;;;;;;;;;;;7278:674;7537:19;958:29770;7537:19;;;;;;:::i;:::-;7340:11;958:29770;;;;;;;;;;;7580:30;;;;;;;;;;;;;7278:674;7620:19;;;;;:::i;7580:30::-;;;;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;7620:19;958:29770;;7580:30;;;;;;;;;7495:32;;;;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;;;7495:32;;;;;;;7397:44;;;;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;;7397:44;;;;;;;;7340:37;;;;:::i;:::-;958:29770;;7340:37;;;;7278:674;7654:298;;;-1:-1:-1;7657:6:51;;;-1:-1:-1;;;;;;;;;;;7675:37:51;;;;;958:29770;;;;;;;;7675:37;;;;;;958:29770;7675:37;;;:::i;7654:298::-;-1:-1:-1;;;;;;;;;;;7810:60:51;;;;;958:29770;;;;;;;;7810:60;;;;;;958:29770;7810:60;;;:::i;7281:22::-;7290:13;7295:8;7290:13;;;7281:22;;958:29770;;;;;;;;;;;;;2295:89;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;30240:5;958:29770;-1:-1:-1;;;;;958:29770:51;;30235:11;;958:29770;;30235:11;:::i;:::-;958:29770;30254:11;958:29770;;30254:44;;;;;958:29770;30287:8;958:29770;;;;;;;;;;;30254:44;;;;;;;;;;;;;958:29770;;;;30315:9;958:29770;;-1:-1:-1;;;;;;;;;;;30306:19:51;;;;;;958:29770;;;;;;30306:19;;958:29770;30306:19;;958:29770;30306:19;;958:29770;30306:19;;;;;;;;;;;;;;958:29770;;;;30254:11;958:29770;;30394:17;958:29770;30333:79;;;;;;958:29770;;;;;;;;;;;;;;;30333:79;;958:29770;30333:79;;;:::i;:::-;;;;;;;;;;;;;;958:29770;30420:38;;;;;;;958:29770;;-1:-1:-1;;;30420:38:51;;30437:4;958:29770;30420:38;;958:29770;;;;;;;;;;;;;;;;;;30420:38;;;;;;;;;;;958:29770;;;;30466:11;958:29770;;30466:36;;;;;;958:29770;;;;;;30466:36;;958:29770;;30466:36;;958:29770;;;30351:6;958:29770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30466:36;;;;;;;;;;;;;958:29770;;;;;30466:11;958:29770;;;;30254:11;958:29770;;;;;;;;;;;;30510:53;;958:29770;30510:53;;958:29770;30510:53;;;;;;;958:29770;30510:53;;;958:29770;;30254:11;958:29770;;;;;;;;;;;30593:22;;;;;;;;;;;;;958:29770;;;;30642:26;;;958:29770;-1:-1:-1;;;958:29770:51;;30642:26;;;;;;:::i;:::-;1671:64:30;30632:37:51;;958:29770;;;30681:23;;;;1671:64:30;30681:23:51;;;1671:64:30;;;;;;;;;:::i;:::-;;;30681:23:51;;;;;;;:::i;:::-;1671:64:30;30671:34:51;;958:29770;;;1671:64:30;;;:::i;:::-;958:29770:51;1671:64:30;;-1:-1:-1;;;958:29770:51;;;;4452:6:30;;;;4448:101;;;;958:29770:51;;;4448:101:30;4479:31;-1:-1:-1;;;;;;;;;;;958:29770:51;;;4479:31:30;;;;;:::i;:::-;;;;4147:212;;4448:101;;;958:29770:51;;;4147:212:30;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;4178:44:30;958:29770:51;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;4241:34;;;;;;;;958:29770:51;;;;;;;;;;;;;:::i;:::-;;;;1671:64:30;4294:34;;;;;:::i;:::-;4147:212;;;;;30593:22:51;;;;;;;;;;;;;:::i;:::-;;;958:29770;;;;;;;;;;;-1:-1:-1;;;;;958:29770:51;;;;;;;30359:22;958:29770;;;;;;;;;;;;;:::i;:::-;30593:22;;;;30510:53;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;30466:36;;;;:::i;:::-;958:29770;;30466:36;;;;958:29770;30351:6;958:29770;;;;;;-1:-1:-1;958:29770:51;;;;;;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;958:29770:51;;-1:-1:-1;958:29770:51;;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;958:29770:51;;;;;;;;30420:38;;;;:::i;:::-;958:29770;;30420:38;;;;30333:79;;;;:::i;:::-;958:29770;;30333:79;;;;30306:19;;;;:::i;:::-;958:29770;;30306:19;;;;30254:44;;;;:::i;:::-;958:29770;;30254:44;;;;958:29770;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;11764:11;958:29770;;11847:5;958:29770;-1:-1:-1;;;;;958:29770:51;;;11756:28;;11764:11;;11842;;958:29770;;11842:11;:::i;:::-;958:29770;;;;11861:56;;;;;958:29770;;;;;;11861:56;;;;11894:20;;958:29770;11894:20;;11861:56;;;;;;;;;;;;;958:29770;;;;;;;;;;;11973:28;958:29770;;;;;;11973:28;;;:::i;:::-;958:29770;12049:15;958:29770;;;;;;;;;;;;12049:35;;;;;;;;;;;;;;;958:29770;1671:64:30;958:29770:51;1671:64:30;;958:29770:51;;12039:46;958:29770;12098:9;958:29770;12098:9;958:29770;;12098:9;:::i;:::-;958:29770;;;;12480:17;958:29770;12419:79;;;;;;958:29770;;-1:-1:-1;;;12419:79:51;;958:29770;;;;;;;;;;;12419:79;;958:29770;12419:79;;;:::i;:::-;;;;;;;;;;;;;;958:29770;;;12531:28;958:29770;;;;;12531:28;;;:::i;:::-;958:29770;;12049:15;958:29770;;;;;;12590:35;;;;;;;;;;;;7918:5:33;12590:35:51;;;;;1671:64:30;958:29770:51;1671:64:30;;958:29770:51;;12580:46;:68;7918:5:33;;:::i;:::-;12712:16:51;958:29770;11847:5;958:29770;;12712:16;:::i;:::-;-1:-1:-1;;;;;;;;;;;12736:41:51;;;;;;958:29770;;-1:-1:-1;;;12736:41:51;;;958:29770;;12736:41;;958:29770;;;;;;-1:-1:-1;;;958:29770:51;;;;;;12736:41;958:29770;;;12736:41;;;;;;;;;;;;;958:29770;;;;;;;12785:37;;;;;;958:29770;;;;;;;12785:37;;;;;;;;;;;;;;;;;;958:29770;12830:41;;;;;;;958:29770;;12830:41;;;958:29770;;12830:41;;958:29770;;;;;;-1:-1:-1;;;958:29770:51;;;;;;;;;;;;;;;12830:41;;;;;;;;;;;958:29770;;;;;12879:37;;;;;958:29770;;;;;;;;;;;;;12879:37;;;958:29770;12879:37;;1671:64:30;12879:37:51;;;;;;;;958:29770;;12830:41;;;;:::i;:::-;958:29770;;12830:41;;;;12785:37;;;;:::i;:::-;958:29770;;12785:37;;;;12736:41;;;;:::i;:::-;958:29770;;12736:41;;;;12590:35;;;;;;;;;;;;;:::i;12419:79::-;;;;:::i;:::-;958:29770;;12419:79;;;;12049:35;;;;;;;;;;;;;:::i;:::-;;;;11861:56;;;;:::i;:::-;958:29770;;11861:56;;;;958:29770;;;;;;;;;;;;;1027:40;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1213:32;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1818:78;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1902:70;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;1339:30;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;3011:18;;;;;;;;-1:-1:-1;;;;;3011:18:51;;;;;;;;;;;;;;;;;;;958:29770;;;;;;2996:33;958:29770;;-1:-1:-1;;;;;958:29770:51;;;;;2996:33;958:29770;;;3073:30;;;;;;;;;;-1:-1:-1;;;;;3073:30:51;;;;;;;958:29770;3073:30;;;;;;;958:29770;;;;3073:30;;;;;;;;;958:29770;;;;;;;3058:45;958:29770;;-1:-1:-1;;;;;958:29770:51;;;;;3058:45;958:29770;;;-1:-1:-1;;;;;958:29770:51;;3156:50;958:29770;;;3156:50;958:29770;;;;;;2996:33;958:29770;;;;3260:34;;;;;;;;;;-1:-1:-1;;;;;3260:34:51;;;;;;;;958:29770;3260:34;;;;958:29770;;3260:34;;;;;;;;;958:29770;;;;;;-1:-1:-1;;;;;958:29770:51;;3241:53;958:29770;;;3241:53;958:29770;-1:-1:-1;;;;;;;;;;;3373:38:51;;;;958:29770;;-1:-1:-1;;;3373:38:51;;3390:4;958:29770;3373:38;;958:29770;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3373:38:51;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;-1:-1:-1;;;;;958:29770:51;3419:75;;;;;958:29770;;;;;;;;;;;;;3419:75;;;958:29770;3419:75;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;3419:75;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;-1:-1:-1;;;;;958:29770:51;3502:67;;;;;958:29770;;;;;;;;;;;;;3502:67;;;958:29770;3502:67;;958:29770;;;;;;3502:67;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;3645:18;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;3608:71;;;;;958:29770;;;;;;;;;;;;;;;3608:71;;958:29770;3608:71;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;3608:71;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;3760:7;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;3723:64;;;;;958:29770;;;;;;;;;;;;;;;3723:64;;958:29770;3723:64;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;3723:64;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;3856:10;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;3819:55;;;;;958:29770;;;;;;;;;;;;;;;3819:55;;958:29770;3819:55;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;3819:55;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;3927:32;;;;;-1:-1:-1;;;;;3927:32:51;;;;;;;;;;;;;;;;958:29770;;3927:32;;;;;;;;;;;;;3910:49;958:29770;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;;3241:53;958:29770;;;;;;;;3999:71;;;;;958:29770;;;;;;;;;;;;;;;;;3999:71;;958:29770;;;3999:71;;958:29770;;;;;;3058:45;958:29770;;;;-1:-1:-1;;;958:29770:51;;;;3999:71;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;3910:49;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;4078:66;;;;;958:29770;;;;;;;;;;;;;;;4078:66;;958:29770;4078:66;;958:29770;;;;;;4078:66;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;4196:36;;;;;-1:-1:-1;;;;;4196:36:51;;;;;;;;;;;;;;;;958:29770;;4196:36;;;;;;;;;;;;;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;;3241:53;958:29770;;;;;;;;4267:79;;;;;958:29770;;;;;;;;;;;;;;;;;4267:79;;958:29770;;;4267:79;;958:29770;;;;;;3910:49;958:29770;;;;-1:-1:-1;;;958:29770:51;;;;4267:79;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;4354:70;;;;;958:29770;;;;;;;;;;;;;;;4354:70;;958:29770;4354:70;;958:29770;;;;;;4354:70;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;4717:33;;;;;-1:-1:-1;;;;;4717:33:51;;;;;;;;;;;;;;;;958:29770;;4717:33;;;;;;;;;;;;;4699:51;958:29770;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;;3241:53;958:29770;;;;;;;;4788:73;;;;;958:29770;;;;;;;;;;;;;;;;;4788:73;;958:29770;;;4788:73;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;4788:73;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;4699:51;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;4869:66;;;;;958:29770;;;;;;;;;;;;;;;4869:66;;958:29770;4869:66;;958:29770;;;;;;4869:66;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;4981:30;;;;;-1:-1:-1;;;;;4981:30:51;;;;;;;;;;;;;;;;958:29770;;4981:30;;;;;;;;;;;;;4966:45;958:29770;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;;3241:53;958:29770;;;;;;;;5046:67;;;;;958:29770;;;;;;;;;;;;;;;;;5046:67;;958:29770;;;5046:67;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;5046:67;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;4966:45;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;5121:63;;;;;958:29770;;;;;;;;;;;;;;;5121:63;;958:29770;5121:63;;958:29770;;;;;;5121:63;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;5233:29;;;;;-1:-1:-1;;;;;5233:29:51;;;;;;;;;;;;;;;;958:29770;;5233:29;;;;;;;;;;;;;5219:43;958:29770;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;;3241:53;958:29770;;;;;;;;5301:65;;;;;958:29770;;;;;;;;;;;;;;;;;5301:65;;958:29770;;;5301:65;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;5301:65;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;5219:43;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;5374:63;;;;;958:29770;;;;;;;;;;;;;;;5374:63;;958:29770;5374:63;;958:29770;;;;;;5374:63;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;5489:33;;;;;-1:-1:-1;;;;;5489:33:51;;;;;;;;;;;;;;;;958:29770;;5489:33;;;;;;;;;;;;;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;;3241:53;958:29770;;;;;;;;5560:73;;;;;958:29770;;;;;;;;;;;;;;;;;5560:73;;958:29770;;;5560:73;;958:29770;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;5560:73;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;5641:67;;;;;958:29770;;;;;;;;;;;;;;;5641:67;;958:29770;5641:67;;958:29770;;;;;;5641:67;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;5765:40;;;;;-1:-1:-1;;;;;5765:40:51;;;;;;;;;;;;;;;;958:29770;;5765:40;;;;;;;;;;;;;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;3241:53;958:29770;;;;;;5841:87;;;;;958:29770;;;-1:-1:-1;;;5841:87:51;;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;5841:87;;958:29770;;;;;3760:7;958:29770;;;;-1:-1:-1;;;958:29770:51;;;;;;;;;;;;;;5841:87;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;5936:74;;;;;958:29770;;;;;;;;;;;;;;;5936:74;;958:29770;5936:74;;958:29770;;;;;;5936:74;;;;;;;;958:29770;;;;;;;;2996:33;958:29770;;;;;6047:26;;;;;-1:-1:-1;;;;;6047:26:51;;;;;;;;;;;;;;;;958:29770;;6047:26;;;;;;;;;;;;;6036:37;958:29770;;-1:-1:-1;;;;;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;;;;;;3241:53;958:29770;;;;;;6104:59;;;;;958:29770;;;-1:-1:-1;;;6104:59:51;;958:29770;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;6104:59;;958:29770;;;;;6036:37;958:29770;;;;-1:-1:-1;;;958:29770:51;;;;;;;;;;;;;;6104:59;;;;;;;;958:29770;-1:-1:-1;3241:53:51;958:29770;6036:37;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;6171:60;;;;;958:29770;;;;;;;;;;;;;;;6171:60;;958:29770;6171:60;;958:29770;;;;;;6171:60;;;;;;;;958:29770;6313:38;;-1:-1:-1;;;;;;;;;;;6313:38:51;;;;958:29770;;-1:-1:-1;;;6313:38:51;;3390:4;958:29770;6313:38;;958:29770;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6313:38:51;;;;;;;;958:29770;-1:-1:-1;2996:33:51;958:29770;-1:-1:-1;;;;;958:29770:51;6359:32;;;;;958:29770;;;;;;;;;;;;;6359:32;;;;;;;;;;958:29770;-1:-1:-1;;3156:50:51;958:29770;6481:9;958:29770;;;-1:-1:-1;;;6468:66:51;;;-1:-1:-1;;;;;958:29770:51;;;;6468:66;;958:29770;;;;;;;;;;;;;;;;;;;;;6468:66;;;;;;;;;;;958:29770;-1:-1:-1;958:29770:51;;;-1:-1:-1;;;;;;958:29770:51;-1:-1:-1;;;;;958:29770:51;;;;;;3156:50;958:29770;6481:9;958:29770;;;6810:66;;;958:29770;;;6810:66;;958:29770;;;;;;;;;;;;;;;;;;6810:66;;;;;;;;;;;958:29770;;;;;;;;-1:-1:-1;;;;;958:29770:51;;6916:42;958:29770;;;6916:42;958:29770;;;6810:66;;;;958:29770;6810:66;958:29770;6810:66;;;;;;;:::i;:::-;;;;6468;;;;958:29770;6468:66;958:29770;6468:66;;;;;;;:::i;:::-;;;;6359:32;;;;:::i;:::-;958:29770;;6359:32;;;;6313:38;;;;:::i;:::-;958:29770;;6313:38;;;;6171:60;;;;:::i;:::-;958:29770;;6171:60;;;;6104:59;;;;:::i;:::-;958:29770;;6104:59;;;;6047:26;-1:-1:-1;;;1671:64:30;;;958:29770:51;1671:64:30;958:29770:51;1671:64:30;;5936:74:51;;;;:::i;:::-;958:29770;;5936:74;;;;5841:87;;;;:::i;:::-;958:29770;;5841:87;;;;5641:67;;;;:::i;:::-;958:29770;;5641:67;;;;5560:73;;;;:::i;:::-;958:29770;;5560:73;;;;5374:63;;;;:::i;:::-;958:29770;;5374:63;;;;5301:65;;;;:::i;:::-;958:29770;;5301:65;;;;5121:63;;;;:::i;:::-;958:29770;;5121:63;;;;5046:67;;;;:::i;:::-;958:29770;;5046:67;;;;4869:66;;;;:::i;:::-;958:29770;;4869:66;;;;4788:73;;;;:::i;:::-;958:29770;;4788:73;;;;4354:70;;;;:::i;:::-;958:29770;;4354:70;;;;4267:79;;;;:::i;:::-;958:29770;;4267:79;;;;4078:66;;;;:::i;:::-;958:29770;;4078:66;;;;3999:71;;;;:::i;:::-;958:29770;;3999:71;;;;3819:55;;;;:::i;:::-;958:29770;;3819:55;;;;3723:64;;;;:::i;:::-;958:29770;;3723:64;;;;3608:71;;;;:::i;:::-;958:29770;;3608:71;;;;3502:67;;;;:::i;:::-;958:29770;;3502:67;;;;3419:75;;;;:::i;:::-;958:29770;;3419:75;;;;3373:38;;;;:::i;:::-;958:29770;;3373:38;;;;3260:34;-1:-1:-1;;;1671:64:30;;;958:29770:51;1671:64:30;;;;3073:30:51;-1:-1:-1;;;1671:64:30;;;958:29770:51;1671:64:30;;;;3011:18:51;-1:-1:-1;;;1671:64:30;;;958:29770:51;1671:64:30;;;;958:29770:51;;;;;;;-1:-1:-1;;958:29770:51;;;;;;:::i;:::-;-1:-1:-1;;;;;958:29770:51;;:::i;:::-;;;8028:5;;;;;:38;;;958:29770;8025:1235;;;-1:-1:-1;8087:5:51;958:29770;8077:16;;-1:-1:-1;;;;;958:29770:51;8077:16;:::i;:::-;8103:11;958:29770;;;-1:-1:-1;;;;;958:29770:51;8103:37;;;;;958:29770;;;;;;;;;;;;;8103:37;;;;;;;;;;8025:1235;-1:-1:-1;;8160:14:51;958:29770;8087:5;958:29770;;;-1:-1:-1;;;8160:44:51;;-1:-1:-1;;;;;958:29770:51;;;;8160:44;;958:29770;;;;;1671:64:30;;;958:29770:51;;;;;;;;;;;;;8160:44;;;;;;;;;;;8025:1235;8225:7;;;;;;:::i;:::-;8103:11;958:29770;;;-1:-1:-1;;;8258:32:51;;958:29770;8258:32;;1671:64:30;;;958:29770:51;;;;;;;;;-1:-1:-1;;;;;958:29770:51;8258:32;;;;;;;;;;8025:1235;8300:19;;;;;:::i;:::-;958:29770;-1:-1:-1;;;;;;;;;;;8372:36:51;;;;;958:29770;;;;;;;;;;;;;8372:36;;958:29770;;8372:36;;958:29770;;;;;;-1:-1:-1;;;958:29770:51;;;;8372:36;;;;;;;;8025:1235;-1:-1:-1;8103:11:51;958:29770;-1:-1:-1;;;;;958:29770:51;;;;;-1:-1:-1;;;;;958:29770:51;8418:37;;;;;958:29770;;;;;;;;;;8418:37;;;;;958:29770;8418:37;;1671:64:30;8418:37:51;;;;;;;;;;;8025:1235;-1:-1:-1;;8103:11:51;958:29770;-1:-1:-1;;;;;958:29770:51;;8504:38;;;;;958:29770;;;;;;;8504:38;;;;;;;;958:29770;8504:38;;1671:64:30;8504:38:51;;;;;;;;8025:1235;-1:-1:-1;;8103:11:51;958:29770;;;-1:-1:-1;;;8567:32:51;;958:29770;8567:32;;1671:64:30;;;;958:29770:51;;;;;;;;;-1:-1:-1;;;;;958:29770:51;8567:32;;;;;;;;;;;8025:1235;8620:17;;8661:7;8620:17;958:29770;8620:17;;:::i;:::-;8661:7;;;:::i;:::-;8103:11;958:29770;;;-1:-1:-1;;;8694:30:51;;958:29770;;;;;;;;-1:-1:-1;;;;;958:29770:51;8694:30;;;;;;;;;;;8025:1235;8748:7;;;;:::i;8694:30::-;;;958:29770;8694:30;;958:29770;8694:30;;;;;;958:29770;8694:30;;;:::i;:::-;;;958:29770;;;;8748:7;958:29770;;8694:30;;;;;;-1:-1:-1;8694:30:51;;8567:32;;;;958:29770;8567:32;;958:29770;8567:32;;;;;;958:29770;8567:32;;;:::i;:::-;;;958:29770;;;;;;8567:32;;8620:17;8567:32;;;;;-1:-1:-1;8567:32:51;;8504:38;;;;:::i;:::-;958:29770;;8504:38;;;;8418:37;;;;:::i;:::-;958:29770;;8418:37;;;;8372:36;;;;:::i;:::-;958:29770;;8372:36;;;;8258:32;;958:29770;8258:32;;958:29770;8258:32;;;;;;958:29770;8258:32;;;:::i;:::-;;;958:29770;;;;8300:19;958:29770;;8258:32;;;;;-1:-1:-1;8258:32:51;;8160:44;;;958:29770;8160:44;;958:29770;8160:44;;;;;;958:29770;8160:44;;;:::i;:::-;;;958:29770;;;;;8160:44;;;;;;-1:-1:-1;8160:44:51;;8103:37;;;;:::i;:::-;958:29770;;8103:37;;;;8025:1235;8771:489;;;8774:6;;;958:29770;;;-1:-1:-1;;;;;;;;;;;8792:37:51;;;;;958:29770;;;;;;;;8792:37;;;;;;958:29770;8792:37;;;:::i;8771:489::-;9016:5;958:29770;-1:-1:-1;;;;;958:29770:51;9006:16;;958:29770;;9006:16;:::i;:::-;958:29770;9032:11;958:29770;;9032:37;;;;;958:29770;;;;;;;;;;;;9032:37;;;;;;;;;;8771:489;958:29770;;;;9089:14;958:29770;;;;;9016:5;958:29770;;;;;;;;;;;;9089:44;;958:29770;9089:44;;958:29770;;;;;1671:64:30;9089:44:51;;;;;;;;;;;958:29770;-1:-1:-1;;;;;;;;;;;9143:60:51;;;;;958:29770;;;;;;;;9143:60;;;;;;958:29770;9143:60;;;:::i;9032:37::-;;;;;;;:::i;:::-;;;;;;8028:38;958:29770;8058:8;8037:17;-1:-1:-1;;;;;958:29770:51;;8037:17;;:::i;:::-;:29;;8028:38;;958:29770;;;;-1:-1:-1;;;;;958:29770:51;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;958:29770:51;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;1671:64:30:-;-1:-1:-1;;;;;1671:64:30;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:30;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:30;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:30;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:30;;;;;;-1:-1:-1;;1671:64:30;;;;:::o;:::-;;;;;;;;;;:::i;:::-;958:29770:51;1671:64:30;958:29770:51;;1671:64:30;;;:::i;:::-;;;;-1:-1:-1;1671:64:30;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;958:29770:51;;;1671:64:30;;;;;:::o;1819:584::-;1873:7;958:29770:51;;;;;;;;;;;;;;;1896:14:30:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:30;;1980:374;;2367:19;;;:::o;1980:374::-;958:29770:51;;;;;2196:43:30;;;958:29770:51;;;;1671:64:30;;;958:29770:51;1671:64:30;;;958:29770:51;2196:43:30;;958:29770:51;1671:64:30;;;;;;-1:-1:-1;;;;;1671:64:30;;;;;;2086:175;;1671:64;;;;;;;958:29770:51;1671:64:30;2086:175;;;1671:64;;;;;;;;;;;;;;;;:::i;:::-;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;958:29770:51:-;;;;;;;;;;-1:-1:-1;;;;;958:29770:51;;;;;;;:::o;:::-;;;;-1:-1:-1;;;958:29770:51;;;;;;;:::o;:::-;;;;-1:-1:-1;;;958:29770:51;;;;;;;:::o;2410:424:30:-;-1:-1:-1;;;;;;;;;;;2939:104:30;;2445:359;;2410:424;958:29770:51;;;;2928:1:30;958:29770:51;;;2928:1:30;958:29770:51;2410:424:30:o;2445:359::-;958:29770:51;;2645:67:30;;;;958:29770:51;;;;1671:64:30;;;958:29770:51;;;1671:64:30;2705:4;958:29770:51;;;1671:64:30;958:29770:51;2645:67:30;;958:29770:51;1671:64:30;;;;;;-1:-1:-1;;;;;1671:64:30;;;;;-1:-1:-1;1671:64:30;2534:196;;1671:64;;;;958:29770:51;1671:64:30;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;958:29770:51;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;:::o;3255:157:30:-;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;3345:30:30;;;:::i;:::-;3255:157::o;5202:262::-;5259:6;;;5255:203;;5202:262;;:::o;5255:203::-;958:29770:51;;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;5286:41:30;958:29770:51;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;5346:31;;;;;;;;958:29770:51;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;5396:31;;;;;:::i;1998:108:33:-;-1:-1:-1;;;;;;;;;;;2049:22:33;;;;;958:29770:51;;-1:-1:-1;;;2049:22:33;;-1:-1:-1;;;;;958:29770:51;;;2049:22:33;;;958:29770:51;;;-1:-1:-1;;;958:29770:51;;;1671:64:30;2049:22:33;;;958:29770:51;;;2049:22:33;;;;;;;;;;1998:108;2081:18;;;;;;958:29770:51;;;;;;;;;;;;;;;2081:18:33;;2049:22;2081:18;;958:29770:51;2081:18:33;;;;;;;;1998:108;;:::o;2081:18::-;;;;;:::i;:::-;958:29770:51;;1998:108:33;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;958:29770:51;;;;;;;;;;:::o;:::-;1671:64:30;;;958:29770:51;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;1671:64:30;958:29770:51;;1671:64:30;;;:::i;:::-;958:29770:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;12437:6;958:29770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;12437:6;-1:-1:-1;958:29770:51;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;-1:-1:-1;;958:29770:51;;;;;;;;-1:-1:-1;958:29770:51;;;;;;;1671:64:30;;;-1:-1:-1;958:29770:51;;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;12445:22;958:29770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;12445:22;-1:-1:-1;958:29770:51;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:30;958:29770:51:o;:::-;-1:-1:-1;958:29770:51;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;958:29770:51;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:30;958:29770:51:o;:::-;-1:-1:-1;958:29770:51;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;-1:-1:-1;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:98:33;-1:-1:-1;;;;;;;;;;;1495:22:33;;;;;958:29770:51;;-1:-1:-1;;;1495:22:33;;-1:-1:-1;;;;;958:29770:51;;;1495:22:33;;;958:29770:51;;;-1:-1:-1;;;958:29770:51;;;1671:64:30;1495:22:33;;;958:29770:51;;;1495:22:33;;;;;;;;;;1449:98;1527:13;;;;;;958:29770:51;;;;;;;;;;;;;;;1527:13:33;;1495:22;1527:13;;958:29770:51;1527:13:33;;;;;;;;1449:98;;:::o;1495:22::-;;;;;;;:::i;:::-;;;;;958:29770:51;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;:::o;:::-;1671:64:30;958:29770:51;1671:64:30;;;;:::i;:::-;958:29770:51;1671:64:30;;958:29770:51;;;;;:::o;:::-;1671:64:30;958:29770:51;1671:64:30;;;;:::i;:::-;958:29770:51;1671:64:30;;958:29770:51;;;;;:::o;:::-;1671:64:30;958:29770:51;1671:64:30;;;;:::i;:::-;958:29770:51;1671:64:30;;958:29770:51;;;;;:::o;:::-;;;;;1671:64:30;;958:29770:51;;;;;;;;;;;;:::i;:::-;1671:64:30;;-1:-1:-1;;1671:64:30;958:29770:51;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;;;;;;;:::i;5469:178:30:-;5545:6;;;5541:100;;5469:178;;;:::o;5541:100::-;-1:-1:-1;;;;;;;;;;;5572:30:30;5628:1;958:29770:51;;;5572:30:30;;;;;:::i;:::-;;;;5628:1;:::i;11201:335:33:-;;23353:1:51;11368:19:33;;;;:::i;:::-;11402:16;11398:132;;11201:335;;;:::o;11398:132::-;-1:-1:-1;;;;;;;;;;;11439:33:33;958:29770:51;;;;11439:33:33;;;;;:::i;:::-;;;;10819:19;;;;:::i;:::-;23353:1:51;10853:16:33;;10849:340;;11398:132;11201:335;;;:::o;10849:340::-;958:29770:51;;;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;10890:53:33;958:29770:51;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;10962:32:33;;;;;;;;;958:29770:51;;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;11013:32:33;;;958:29770:51;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;23353:1;958:29770;;;1671:64:30;11064:39:33;958:29770:51;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;11122:36:33;;;:::i;:::-;10849:340;;;;;;11201:335;;23984:1:51;11368:19:33;;;;:::i;:::-;11402:16;11398:132;;11201:335;;;:::o;11398:132::-;-1:-1:-1;;;;;;;;;;;11439:33:33;958:29770:51;;;;11439:33:33;;;;;:::i;:::-;;;;10819:19;;;;:::i;:::-;23984:1:51;10853:16:33;;10849:340;;11398:132;11201:335;;;:::o;10849:340::-;958:29770:51;;;;;-1:-1:-1;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;10890:53:33;958:29770:51;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;10962:32:33;;;;;;;;;958:29770:51;;;;;;;;;;;;:::i;:::-;;;;;1671:64:30;11013:32:33;;;958:29770:51;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;23984:1;958:29770;;;1671:64:30;11064:39:33;958:29770:51;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;11122:36:33;;;:::i;37202:138::-;37288:5;;;;;;37308;;;;:::i;37288:45::-;37328:5;;;:::i;958:29770:51:-;;;;;;-1:-1:-1;24777:6:51;958:29770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:30;958:29770:51:o;:::-;-1:-1:-1;958:29770:51;;;-1:-1:-1;958:29770:51;;-1:-1:-1;;;;;;;;;;;;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24777:6;-1:-1:-1;958:29770:51;;;;-1:-1:-1;958:29770:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;958:29770:51;;;;;;1671:64:30;958:29770:51;;;;;;;;6548:139:35;-1:-1:-1;6548:139:35;;;;6628:51;958:29770:51;;6628:51:35;;958:29770:51;6628:51:35;;;;;;;;;958:29770:51;6628:51:35;;;958:29770:51;;;;;;:::i;:::-;;;;;1671:64:30;6628:51:35;1671:64:30;;6628:51:35;;;;;;:::i;:::-;1671:64:30;392:159:35;131:42;392:159;;;6548:139::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "factoryProxy()": "7509c39b",
    "failed()": "ba414fa6",
    "feeRecipient()": "46904840",
    "frensArt()": "94cd95e3",
    "frensInitialiser()": "32551a60",
    "frensManager()": "9ecdeb8c",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolSetter()": "929230f2",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "proxy()": "ec556889",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testAddToDeposit(uint64,uint64)": "020f12da",
    "testAddToDepositWrongPool(uint64,uint64)": "b7ab10ee",
    "testBadWithdrawalCred()": "8adcff77",
    "testClaim(uint32,uint32)": "5c97929d",
    "testDeposit(uint72)": "4ccd89c4",
    "testExit()": "456f30ca",
    "testFees(uint32,uint32)": "5efae371",
    "testOwner()": "9e535c69",
    "testPubKeyMismatch()": "94892dda",
    "testStake()": "3a1143da",
    "testStakeTwoStep()": "5dcf6be5",
    "testWithdraw(uint72,uint72)": "90f805d9",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryProxy\",\"outputs\":[{\"internalType\":\"contract FactoryProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensInitialiser\",\"outputs\":[{\"internalType\":\"contract FrensInitialiser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensManager\",\"outputs\":[{\"internalType\":\"contract FrensManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolSetter\",\"outputs\":[{\"internalType\":\"contract FrensPoolSetter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract IStakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDepositWrongPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBadWithdrawalCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPubKeyMismatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStakeTwoStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"y\",\"type\":\"uint72\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/StakingPoolTest.t.sol\":\"StakingPoolTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0xd307bdd6d9d946d8170804d0fad3c8d2ea2223bdf3b8b61c484553f380abdd23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0425ed657acd21de9721a07bdf0594651512e2ca7cb1478ec107b747801826\",\"dweb:/ipfs/QmPtUCYWuNSApV96gDbYy5TuNS4eCmeaF2FGMJSDtPBHdq\"]},\"contracts/FrensArt.sol\":{\"keccak256\":\"0x636878870927bda83ec0bda0d9af0d37cb04b549e0e7f7da0bf0b380c2ebbe2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad42de2ceb1f62bb1a7c1d638150c74f3df1ead8b99e7de59f2aedbd4ec10871\",\"dweb:/ipfs/QmNr5B2XyLPx77zoDKjc2cwEwsVrn9LkAptR7rYhCmhpcT\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/FrensInitialiser.sol\":{\"keccak256\":\"0xafc8ad81ddb16adb4b0e77951d6aa910f1ea0a3b1564d497cbb91d75ebd598cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83564148466aa3f9fe9329057e492eca7990e985667865521d9099592f5cb660\",\"dweb:/ipfs/QmQ6MjuUBMmWAh9QghwHzQujyqQhxr5Njn2ELsgCfbzibM\"]},\"contracts/FrensManager.sol\":{\"keccak256\":\"0x0b97048dfa76e80bc21b04d91f7ffd3c16032c0969f26775fedee572a6286773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://667f085500486335ade605cf9564683a68ed02615446cfaf76302bf260237d10\",\"dweb:/ipfs/QmPmNyBDm6UJtsv5Zv1B6iX7hqemdfaqKRNnHx4ifgvThC\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x97d48781298172885887a8fff74967e8bf6562c5ce0d47a93a467643b77bca67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a704d9a294a907a837cd67486369e9d34206bbe40002079b64b729f9932ef4d2\",\"dweb:/ipfs/QmbqnSuWH8y4RVQ4r34xDJpmnFa4FURYRwcD1nh8T8wDDQ\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0xe5a88a7343e1544fa46a8b57f7d9189cca69f6551a0b44eefe179cda2e04ac42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b7c397534265f44ef8942d2cfb71b4320c32dbd5f20a7523f6acb715faaeeb\",\"dweb:/ipfs/QmWUAxnuAhHjsNzBbZjk3GGhMLAfbFyWVjUvBJzEaGLm1M\"]},\"contracts/FrensPoolSetter.sol\":{\"keccak256\":\"0xa99cb2162d0cae3650931d0438a942c1c6dcb40249e72a444f9c3b5fa5fead3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afcc30ec7ef633225a74f4478426ec0efa907ec896defcba3d8fda74117d2ad\",\"dweb:/ipfs/QmcKbvG2v8Nb8JfTjBzv9iK8QQ1itNiaRrYPUmDCuBr7mw\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x7c65aaf9c8e2056c861220bc15a470888e7d7c1dcd0eee75629bb043b046e44a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57cf79396500c5b053b600743a79a7483e36f974a55311fd9c7087e64fa92184\",\"dweb:/ipfs/QmVXpYZzyTkg7zq5qfJpra5dHJehqKwkeS33jdVrrd8CiV\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xdec90efb4fbeb26d4a4a3cbe03182333ead246b9b98de77eca435ae923a93a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d7d25d0d50136befe7a20824070fa1bb51c0bee6e74b24ae3394ef17035aa6f\",\"dweb:/ipfs/QmNxkDDpfsiMb6zmPpMTt78qC1tWGe22GGSa9BNQFz9y2a\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709\",\"dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x5d8223319458f344ebb1a791e02a5b2033c007bf8a3d6678e8218d05a00d1e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://194b97f4d179e1118daa8a233f4962934e9d7d7354d333bd4cb4a64ae26d7ac9\",\"dweb:/ipfs/Qma2KR3kaGv77JVQjk2WrToBw9r7CZCUhKYMZyFFvTJEuK\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x05483da0f7803599b84c92c7d75f95e7d3d0a0c4affe3ee9dcd53ea962b1a0b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04cf39cbd0151c2d8cc8e6905970b724468ce2be3d227e6556649f268b2b25dd\",\"dweb:/ipfs/QmdSqfabgx89xd3hKi47gkh83pmtAk7ugGG4PvhqWRQBkS\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2d1915d0a27801c2434920d4a0e3e8afad0927dd68fbc65a17c4066da758c495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3092fb85c9156bbabdc4ba3c9793a8c8b4ea2f7b4bae9252941e44df347a412b\",\"dweb:/ipfs/QmdhYxhMfwW5UUsHFp72SSp3BXFcdZzpZvPyt3ziEtuTaK\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84\",\"dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0x9bff27274261e4f47da3f35348818bc59f5abf405feec819dde700ff0baa3407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b412c9358f5e075c6757236018590962a2ea1b6065cb280962886eb19ff8c5\",\"dweb:/ipfs/QmYuKJbuyN3NTtCwAuhHRwvno2wcC339Bs6kkhLo9VYRGw\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316\",\"dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y\"]},\"contracts/interfaces/IFrensPoolSetter.sol\":{\"keccak256\":\"0x1c6f0e019feff8bba8f87ead61c135b60d433879afec8706fc7dd2094d5b2c61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95975354a7bb0712a281ba6405485961b61ef5f874be242c9ed1733cd47c2224\",\"dweb:/ipfs/QmY6rv8vknjCmsQUg8c2da8goDVuU39J6VJBYUxc9AiCFK\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xf73d20143c481e8156498eca5ef9048215c8af0cb4ab2a474bb833ed62db45a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c2c1a717a17c36163c59c5bd98085b3c9664a60b2e2db9a83246ae6df0f73c\",\"dweb:/ipfs/QmbVqLmfaVqGBC6KBHUbfBCKKWSeDHfrjN7rRVnybLTLQ3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009\",\"dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19\",\"dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/ISSVRegistry.sol\":{\"keccak256\":\"0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4\",\"dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xd13d574ddc976e1a972038cca99ecd4cc51f804bcfc52adae1b998f73bf9571f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09faa024d4294445e48e5d98b64701041753ea23a078eeaba2d37d68450c5789\",\"dweb:/ipfs/QmZWbAwwSNv8Dfom38DGL6ZnrbygHcsnVs26P5fa2c4BFD\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x6199da4e72120032a59e6d7b9b4feeba1662aa63a3ee26a66597b5899e80c1a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47d1070208a3aa1dc8a034e2df736c855c6a434a4500476f41ee8df164d914b\",\"dweb:/ipfs/QmVg6Cb2K7u7eUGUAQ5v1ntjNYqcFmdqbU6BT7iutc7bcd\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2\",\"dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/StakingPoolTest.t.sol\":{\"keccak256\":\"0xfbaa8f588eef834f49f5a84e21c68a2d12951b4800a87280c90fbb812ee288a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a5601db90363861d099f5b3a2ebce7a5600af7dc461461eb7c83a9ee1038959\",\"dweb:/ipfs/QmSfANfN2JiiQatKasvbTqrUaupYEPqxE4grevz32MWXno\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x661367673c9dad11fcebbacbef6c5d0ae670307103e624c4ec201c125a22dd1a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://980d227dcdc42abaefd67d0991c59d6c84f1167753e634a27cefe81eaced2f26\",\"dweb:/ipfs/QmS4Guqxc1SnjA9n4ob2f5AMU4EZaBcNDEBEw28Pt4heeb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryProxy",
          "outputs": [
            {
              "internalType": "contract FactoryProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRecipient",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensInitialiser",
          "outputs": [
            {
              "internalType": "contract FrensInitialiser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensManager",
          "outputs": [
            {
              "internalType": "contract FrensManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolSetter",
          "outputs": [
            {
              "internalType": "contract FrensPoolSetter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxy",
          "outputs": [
            {
              "internalType": "contract IStakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDepositWrongPool"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBadWithdrawalCred"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExit"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFees"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPubKeyMismatch"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStakeTwoStep"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            },
            {
              "internalType": "uint72",
              "name": "y",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/StakingPoolTest.t.sol": "StakingPoolTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0xd307bdd6d9d946d8170804d0fad3c8d2ea2223bdf3b8b61c484553f380abdd23",
        "urls": [
          "bzz-raw://5d0425ed657acd21de9721a07bdf0594651512e2ca7cb1478ec107b747801826",
          "dweb:/ipfs/QmPtUCYWuNSApV96gDbYy5TuNS4eCmeaF2FGMJSDtPBHdq"
        ],
        "license": "MIT"
      },
      "contracts/FrensArt.sol": {
        "keccak256": "0x636878870927bda83ec0bda0d9af0d37cb04b549e0e7f7da0bf0b380c2ebbe2d",
        "urls": [
          "bzz-raw://ad42de2ceb1f62bb1a7c1d638150c74f3df1ead8b99e7de59f2aedbd4ec10871",
          "dweb:/ipfs/QmNr5B2XyLPx77zoDKjc2cwEwsVrn9LkAptR7rYhCmhpcT"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/FrensInitialiser.sol": {
        "keccak256": "0xafc8ad81ddb16adb4b0e77951d6aa910f1ea0a3b1564d497cbb91d75ebd598cc",
        "urls": [
          "bzz-raw://83564148466aa3f9fe9329057e492eca7990e985667865521d9099592f5cb660",
          "dweb:/ipfs/QmQ6MjuUBMmWAh9QghwHzQujyqQhxr5Njn2ELsgCfbzibM"
        ],
        "license": "MIT"
      },
      "contracts/FrensManager.sol": {
        "keccak256": "0x0b97048dfa76e80bc21b04d91f7ffd3c16032c0969f26775fedee572a6286773",
        "urls": [
          "bzz-raw://667f085500486335ade605cf9564683a68ed02615446cfaf76302bf260237d10",
          "dweb:/ipfs/QmPmNyBDm6UJtsv5Zv1B6iX7hqemdfaqKRNnHx4ifgvThC"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x97d48781298172885887a8fff74967e8bf6562c5ce0d47a93a467643b77bca67",
        "urls": [
          "bzz-raw://a704d9a294a907a837cd67486369e9d34206bbe40002079b64b729f9932ef4d2",
          "dweb:/ipfs/QmbqnSuWH8y4RVQ4r34xDJpmnFa4FURYRwcD1nh8T8wDDQ"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0xe5a88a7343e1544fa46a8b57f7d9189cca69f6551a0b44eefe179cda2e04ac42",
        "urls": [
          "bzz-raw://44b7c397534265f44ef8942d2cfb71b4320c32dbd5f20a7523f6acb715faaeeb",
          "dweb:/ipfs/QmWUAxnuAhHjsNzBbZjk3GGhMLAfbFyWVjUvBJzEaGLm1M"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolSetter.sol": {
        "keccak256": "0xa99cb2162d0cae3650931d0438a942c1c6dcb40249e72a444f9c3b5fa5fead3b",
        "urls": [
          "bzz-raw://7afcc30ec7ef633225a74f4478426ec0efa907ec896defcba3d8fda74117d2ad",
          "dweb:/ipfs/QmcKbvG2v8Nb8JfTjBzv9iK8QQ1itNiaRrYPUmDCuBr7mw"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x7c65aaf9c8e2056c861220bc15a470888e7d7c1dcd0eee75629bb043b046e44a",
        "urls": [
          "bzz-raw://57cf79396500c5b053b600743a79a7483e36f974a55311fd9c7087e64fa92184",
          "dweb:/ipfs/QmVXpYZzyTkg7zq5qfJpra5dHJehqKwkeS33jdVrrd8CiV"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0xdec90efb4fbeb26d4a4a3cbe03182333ead246b9b98de77eca435ae923a93a67",
        "urls": [
          "bzz-raw://7d7d25d0d50136befe7a20824070fa1bb51c0bee6e74b24ae3394ef17035aa6f",
          "dweb:/ipfs/QmNxkDDpfsiMb6zmPpMTt78qC1tWGe22GGSa9BNQFz9y2a"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf",
        "urls": [
          "bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709",
          "dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x5d8223319458f344ebb1a791e02a5b2033c007bf8a3d6678e8218d05a00d1e9c",
        "urls": [
          "bzz-raw://194b97f4d179e1118daa8a233f4962934e9d7d7354d333bd4cb4a64ae26d7ac9",
          "dweb:/ipfs/Qma2KR3kaGv77JVQjk2WrToBw9r7CZCUhKYMZyFFvTJEuK"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x05483da0f7803599b84c92c7d75f95e7d3d0a0c4affe3ee9dcd53ea962b1a0b0",
        "urls": [
          "bzz-raw://04cf39cbd0151c2d8cc8e6905970b724468ce2be3d227e6556649f268b2b25dd",
          "dweb:/ipfs/QmdSqfabgx89xd3hKi47gkh83pmtAk7ugGG4PvhqWRQBkS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2d1915d0a27801c2434920d4a0e3e8afad0927dd68fbc65a17c4066da758c495",
        "urls": [
          "bzz-raw://3092fb85c9156bbabdc4ba3c9793a8c8b4ea2f7b4bae9252941e44df347a412b",
          "dweb:/ipfs/QmdhYxhMfwW5UUsHFp72SSp3BXFcdZzpZvPyt3ziEtuTaK"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1",
        "urls": [
          "bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84",
          "dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0x9bff27274261e4f47da3f35348818bc59f5abf405feec819dde700ff0baa3407",
        "urls": [
          "bzz-raw://96b412c9358f5e075c6757236018590962a2ea1b6065cb280962886eb19ff8c5",
          "dweb:/ipfs/QmYuKJbuyN3NTtCwAuhHRwvno2wcC339Bs6kkhLo9VYRGw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67",
        "urls": [
          "bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316",
          "dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolSetter.sol": {
        "keccak256": "0x1c6f0e019feff8bba8f87ead61c135b60d433879afec8706fc7dd2094d5b2c61",
        "urls": [
          "bzz-raw://95975354a7bb0712a281ba6405485961b61ef5f874be242c9ed1733cd47c2224",
          "dweb:/ipfs/QmY6rv8vknjCmsQUg8c2da8goDVuU39J6VJBYUxc9AiCFK"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xf73d20143c481e8156498eca5ef9048215c8af0cb4ab2a474bb833ed62db45a5",
        "urls": [
          "bzz-raw://12c2c1a717a17c36163c59c5bd98085b3c9664a60b2e2db9a83246ae6df0f73c",
          "dweb:/ipfs/QmbVqLmfaVqGBC6KBHUbfBCKKWSeDHfrjN7rRVnybLTLQ3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c",
        "urls": [
          "bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009",
          "dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c",
        "urls": [
          "bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19",
          "dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISSVRegistry.sol": {
        "keccak256": "0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f",
        "urls": [
          "bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4",
          "dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xd13d574ddc976e1a972038cca99ecd4cc51f804bcfc52adae1b998f73bf9571f",
        "urls": [
          "bzz-raw://09faa024d4294445e48e5d98b64701041753ea23a078eeaba2d37d68450c5789",
          "dweb:/ipfs/QmZWbAwwSNv8Dfom38DGL6ZnrbygHcsnVs26P5fa2c4BFD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x6199da4e72120032a59e6d7b9b4feeba1662aa63a3ee26a66597b5899e80c1a7",
        "urls": [
          "bzz-raw://d47d1070208a3aa1dc8a034e2df736c855c6a434a4500476f41ee8df164d914b",
          "dweb:/ipfs/QmVg6Cb2K7u7eUGUAQ5v1ntjNYqcFmdqbU6BT7iutc7bcd"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb",
        "urls": [
          "bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2",
          "dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/StakingPoolTest.t.sol": {
        "keccak256": "0xfbaa8f588eef834f49f5a84e21c68a2d12951b4800a87280c90fbb812ee288a4",
        "urls": [
          "bzz-raw://8a5601db90363861d099f5b3a2ebce7a5600af7dc461461eb7c83a9ee1038959",
          "dweb:/ipfs/QmSfANfN2JiiQatKasvbTqrUaupYEPqxE4grevz32MWXno"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x661367673c9dad11fcebbacbef6c5d0ae670307103e624c4ec201c125a22dd1a",
        "urls": [
          "bzz-raw://980d227dcdc42abaefd67d0991c59d6c84f1167753e634a27cefe81eaced2f26",
          "dweb:/ipfs/QmS4Guqxc1SnjA9n4ob2f5AMU4EZaBcNDEBEw28Pt4heeb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/StakingPoolTest.t.sol",
    "id": 33477,
    "exportedSymbols": {
      "Address": [
        30946
      ],
      "Base64": [
        31322
      ],
      "BoolGetter": [
        33513
      ],
      "Context": [
        30968
      ],
      "DSTest": [
        7740
      ],
      "ERC165": [
        31195
      ],
      "ERC721": [
        30119
      ],
      "ERC721Enumerable": [
        30591
      ],
      "FactoryProxy": [
        62
      ],
      "FrensArt": [
        242
      ],
      "FrensBase": [
        833
      ],
      "FrensInitialiser": [
        1017
      ],
      "FrensManager": [
        1257
      ],
      "FrensMetaHelper": [
        1659
      ],
      "FrensOracle": [
        1744
      ],
      "FrensPoolSetter": [
        2318
      ],
      "FrensPoolShare": [
        2582
      ],
      "FrensPoolShareTokenURI": [
        2884
      ],
      "FrensStorage": [
        3514
      ],
      "IDepositContract": [
        5045
      ],
      "IENS": [
        5182
      ],
      "IERC165": [
        31207
      ],
      "IERC721": [
        30235
      ],
      "IERC721Enumerable": [
        30622
      ],
      "IERC721Metadata": [
        30649
      ],
      "IERC721Receiver": [
        30253
      ],
      "IFrensArt": [
        5192
      ],
      "IFrensClaim": [
        5218
      ],
      "IFrensLogo": [
        5226
      ],
      "IFrensMetaHelper": [
        5269
      ],
      "IFrensOracle": [
        5286
      ],
      "IFrensPoolSetter": [
        5370
      ],
      "IFrensPoolShare": [
        5414
      ],
      "IFrensPoolShareTokenURI": [
        5424
      ],
      "IFrensStorage": [
        5620
      ],
      "IMaliciousProxyInterface": [
        33488
      ],
      "IPmFont": [
        5628
      ],
      "IReverseResolver": [
        5638
      ],
      "ISSVRegistry": [
        5840
      ],
      "IStakingPool": [
        5933
      ],
      "IStakingPoolFactory": [
        5945
      ],
      "IWaves": [
        5953
      ],
      "NftReceiver": [
        33562
      ],
      "Ownable": [
        29285
      ],
      "Script": [
        8003
      ],
      "StakingPool": [
        4926
      ],
      "StakingPoolFactory": [
        5026
      ],
      "StakingPoolTest": [
        33476
      ],
      "StdStorage": [
        11031
      ],
      "Strings": [
        31171
      ],
      "Test": [
        10933
      ],
      "Vm": [
        13052
      ],
      "console": [
        21116
      ],
      "console2": [
        29180
      ],
      "stdError": [
        11003
      ],
      "stdJson": [
        8363
      ],
      "stdMath": [
        12272
      ],
      "stdStorage": [
        12133
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:30690:51",
    "nodes": [
      {
        "id": 31324,
        "nodeType": "PragmaDirective",
        "src": "39:24:51",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31325,
        "nodeType": "ImportDirective",
        "src": "181:28:51",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 12273,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31326,
        "nodeType": "ImportDirective",
        "src": "229:38:51",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 243,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31327,
        "nodeType": "ImportDirective",
        "src": "268:46:51",
        "nodes": [],
        "absolutePath": "contracts/FrensInitialiser.sol",
        "file": "../../contracts/FrensInitialiser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 1018,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31328,
        "nodeType": "ImportDirective",
        "src": "315:42:51",
        "nodes": [],
        "absolutePath": "contracts/FrensManager.sol",
        "file": "../../contracts/FrensManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 1258,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31329,
        "nodeType": "ImportDirective",
        "src": "358:45:51",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 1660,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31330,
        "nodeType": "ImportDirective",
        "src": "404:52:51",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 2885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31331,
        "nodeType": "ImportDirective",
        "src": "457:42:51",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 3515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31332,
        "nodeType": "ImportDirective",
        "src": "500:42:51",
        "nodes": [],
        "absolutePath": "contracts/FactoryProxy.sol",
        "file": "../../contracts/FactoryProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 63,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31333,
        "nodeType": "ImportDirective",
        "src": "543:41:51",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 4927,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31334,
        "nodeType": "ImportDirective",
        "src": "585:48:51",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 5027,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31335,
        "nodeType": "ImportDirective",
        "src": "634:44:51",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 2583,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31336,
        "nodeType": "ImportDirective",
        "src": "722:45:51",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolSetter.sol",
        "file": "../../contracts/FrensPoolSetter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 2319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31337,
        "nodeType": "ImportDirective",
        "src": "768:41:51",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 1745,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31338,
        "nodeType": "ImportDirective",
        "src": "810:60:51",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 5946,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31339,
        "nodeType": "ImportDirective",
        "src": "871:57:51",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 5046,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31340,
        "nodeType": "ImportDirective",
        "src": "929:26:51",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33477,
        "sourceUnit": 33563,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33476,
        "nodeType": "ContractDefinition",
        "src": "958:29770:51",
        "nodes": [
          {
            "id": 31345,
            "nodeType": "VariableDeclaration",
            "src": "997:24:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "1013:8:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$242",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 31344,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31343,
                "name": "FrensArt",
                "nameLocations": [
                  "997:8:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 242,
                "src": "997:8:51"
              },
              "referencedDeclaration": 242,
              "src": "997:8:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$242",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31348,
            "nodeType": "VariableDeclaration",
            "src": "1027:40:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "32551a60",
            "mutability": "mutable",
            "name": "frensInitialiser",
            "nameLocation": "1051:16:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
              "typeString": "contract FrensInitialiser"
            },
            "typeName": {
              "id": 31347,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31346,
                "name": "FrensInitialiser",
                "nameLocations": [
                  "1027:16:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1017,
                "src": "1027:16:51"
              },
              "referencedDeclaration": 1017,
              "src": "1027:16:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                "typeString": "contract FrensInitialiser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31351,
            "nodeType": "VariableDeclaration",
            "src": "1073:32:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "9ecdeb8c",
            "mutability": "mutable",
            "name": "frensManager",
            "nameLocation": "1093:12:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensManager_$1257",
              "typeString": "contract FrensManager"
            },
            "typeName": {
              "id": 31350,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31349,
                "name": "FrensManager",
                "nameLocations": [
                  "1073:12:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1257,
                "src": "1073:12:51"
              },
              "referencedDeclaration": 1257,
              "src": "1073:12:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensManager_$1257",
                "typeString": "contract FrensManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31354,
            "nodeType": "VariableDeclaration",
            "src": "1111:38:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "1134:15:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 31353,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31352,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "1111:15:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1659,
                "src": "1111:15:51"
              },
              "referencedDeclaration": 1659,
              "src": "1111:15:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31357,
            "nodeType": "VariableDeclaration",
            "src": "1155:52:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "1185:22:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 31356,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31355,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "1155:22:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2884,
                "src": "1155:22:51"
              },
              "referencedDeclaration": 2884,
              "src": "1155:22:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31360,
            "nodeType": "VariableDeclaration",
            "src": "1213:32:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "1233:12:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$3514",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 31359,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31358,
                "name": "FrensStorage",
                "nameLocations": [
                  "1213:12:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3514,
                "src": "1213:12:51"
              },
              "referencedDeclaration": 3514,
              "src": "1213:12:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$3514",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31363,
            "nodeType": "VariableDeclaration",
            "src": "1251:32:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "7509c39b",
            "mutability": "mutable",
            "name": "factoryProxy",
            "nameLocation": "1271:12:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryProxy_$62",
              "typeString": "contract FactoryProxy"
            },
            "typeName": {
              "id": 31362,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31361,
                "name": "FactoryProxy",
                "nameLocations": [
                  "1251:12:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62,
                "src": "1251:12:51"
              },
              "referencedDeclaration": 62,
              "src": "1251:12:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryProxy_$62",
                "typeString": "contract FactoryProxy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31366,
            "nodeType": "VariableDeclaration",
            "src": "1289:44:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1315:18:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 31365,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31364,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1289:18:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5026,
                "src": "1289:18:51"
              },
              "referencedDeclaration": 5026,
              "src": "1289:18:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31369,
            "nodeType": "VariableDeclaration",
            "src": "1339:30:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1358:11:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$4926",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31367,
                "name": "StakingPool",
                "nameLocations": [
                  "1339:11:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4926,
                "src": "1339:11:51"
              },
              "referencedDeclaration": 4926,
              "src": "1339:11:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$4926",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31372,
            "nodeType": "VariableDeclaration",
            "src": "1375:31:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1394:12:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$4926",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31371,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31370,
                "name": "StakingPool",
                "nameLocations": [
                  "1375:11:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4926,
                "src": "1375:11:51"
              },
              "referencedDeclaration": 4926,
              "src": "1375:11:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$4926",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31375,
            "nodeType": "VariableDeclaration",
            "src": "1412:36:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1434:14:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 31374,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31373,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1412:14:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2582,
                "src": "1412:14:51"
              },
              "referencedDeclaration": 2582,
              "src": "1412:14:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31378,
            "nodeType": "VariableDeclaration",
            "src": "1454:32:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec556889",
            "mutability": "mutable",
            "name": "proxy",
            "nameLocation": "1481:5:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
              "typeString": "contract IStakingPoolFactory"
            },
            "typeName": {
              "id": 31377,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31376,
                "name": "IStakingPoolFactory",
                "nameLocations": [
                  "1454:19:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5945,
                "src": "1454:19:51"
              },
              "referencedDeclaration": 5945,
              "src": "1454:19:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
                "typeString": "contract IStakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31381,
            "nodeType": "VariableDeclaration",
            "src": "1528:38:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "929230f2",
            "mutability": "mutable",
            "name": "frensPoolSetter",
            "nameLocation": "1551:15:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
              "typeString": "contract FrensPoolSetter"
            },
            "typeName": {
              "id": 31380,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31379,
                "name": "FrensPoolSetter",
                "nameLocations": [
                  "1528:15:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2318,
                "src": "1528:15:51"
              },
              "referencedDeclaration": 2318,
              "src": "1528:15:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                "typeString": "contract FrensPoolSetter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31384,
            "nodeType": "VariableDeclaration",
            "src": "1572:30:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1591:11:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$1744",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 31383,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31382,
                "name": "FrensOracle",
                "nameLocations": [
                  "1572:11:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1744,
                "src": "1572:11:51"
              },
              "referencedDeclaration": 1744,
              "src": "1572:11:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$1744",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31390,
            "nodeType": "VariableDeclaration",
            "src": "1623:84:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1646:7:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31385,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1623:15:51",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 31388,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1664:42:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31387,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1656:8:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31386,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1656:8:51",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31389,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1656:51:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31393,
            "nodeType": "VariableDeclaration",
            "src": "1818:78:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1833:18:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1818:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 31392,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1854:42:51",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 31396,
            "nodeType": "VariableDeclaration",
            "src": "1902:70:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1917:10:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31394,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1902:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 31395,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1930:42:51",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 31402,
            "nodeType": "VariableDeclaration",
            "src": "1979:60:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1996:15:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$5045",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 31398,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31397,
                "name": "IDepositContract",
                "nameLocations": [
                  "1979:16:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5045,
                "src": "1979:16:51"
              },
              "referencedDeclaration": 5045,
              "src": "1979:16:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$5045",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 31400,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31390,
                  "src": "2031:7:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 31399,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5045,
                "src": "2014:16:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$5045_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 31401,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2014:25:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$5045",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31405,
            "nodeType": "VariableDeclaration",
            "src": "2046:69:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "2061:9:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31403,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2046:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 31404,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2073:42:51",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 31411,
            "nodeType": "VariableDeclaration",
            "src": "2121:82:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "2144:5:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31406,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2121:15:51",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 31409,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2160:42:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31408,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2152:8:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31407,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2152:8:51",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31410,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2152:51:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31417,
            "nodeType": "VariableDeclaration",
            "src": "2209:80:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "2232:3:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2209:15:51",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 31415,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2246:42:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31414,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2238:8:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31413,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2238:8:51",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2238:51:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31423,
            "nodeType": "VariableDeclaration",
            "src": "2295:89:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "46904840",
            "mutability": "mutable",
            "name": "feeRecipient",
            "nameLocation": "2318:12:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31418,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2295:15:51",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030363934323030303030303031333337",
                  "id": 31421,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2341:42:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000694200000001337"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31420,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2333:8:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31419,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2333:8:51",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31422,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2333:51:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31426,
            "nodeType": "VariableDeclaration",
            "src": "2391:116:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "2397:6:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 31424,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2391:5:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7",
              "id": 31425,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2406:101:51",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bdfcfb749742c3093aa9581e8ef2ad1af416ff72460d5243d448d690ad5323e3",
                "typeString": "literal_string hex\"b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31429,
            "nodeType": "VariableDeclaration",
            "src": "2513:100:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2519:22:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 31427,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2513:5:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c",
              "id": 31428,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2544:69:51",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5d67e6bdff9aea033a87277a58dc16c10570179f0e67537385b6a1ef5aafe5d7",
                "typeString": "literal_string hex\"010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31432,
            "nodeType": "VariableDeclaration",
            "src": "2619:215:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2625:9:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 31430,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2619:5:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3",
              "id": 31431,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2637:197:51",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92410a21b5a1c3f6142a52b50473f8a72585ecd3f6161746c16dd03094aaf9d4",
                "typeString": "literal_string hex\"b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31435,
            "nodeType": "VariableDeclaration",
            "src": "2840:94:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2848:17:51",
            "scope": 33476,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 31433,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2840:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834333632613038353937613136373037623466396364653838616132653964353164313737373562363734393037323630373263653838393731323864346332",
              "id": 31434,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2868:66:51",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30479219748484076069933062356768087265247727824042884735859412202213029237954_by_1",
                "typeString": "int_const 3047...(69 digits omitted)...7954"
              },
              "value": "0x4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c2"
            },
            "visibility": "internal"
          },
          {
            "id": 31801,
            "nodeType": "FunctionDefinition",
            "src": "2941:4136:51",
            "nodes": [],
            "body": {
              "id": 31800,
              "nodeType": "Block",
              "src": "2965:4112:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31438,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31360,
                      "src": "2996:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$3514",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 31441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3011:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$3514_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 31440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31439,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "3015:12:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3514,
                            "src": "3015:12:51"
                          },
                          "referencedDeclaration": 3514,
                          "src": "3015:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 31442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3011:18:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$3514",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2996:33:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$3514",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 31444,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:33:51"
                },
                {
                  "expression": {
                    "id": 31451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31445,
                      "name": "factoryProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31363,
                      "src": "3058:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$62",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31449,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "3090:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3073:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FactoryProxy_$62_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FactoryProxy)"
                        },
                        "typeName": {
                          "id": 31447,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31446,
                            "name": "FactoryProxy",
                            "nameLocations": [
                              "3077:12:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 62,
                            "src": "3077:12:51"
                          },
                          "referencedDeclaration": 62,
                          "src": "3077:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FactoryProxy_$62",
                            "typeString": "contract FactoryProxy"
                          }
                        }
                      },
                      "id": 31450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3073:30:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$62",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "src": "3058:45:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryProxy_$62",
                      "typeString": "contract FactoryProxy"
                    }
                  },
                  "id": 31452,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:45:51"
                },
                {
                  "expression": {
                    "id": 31460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31453,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31378,
                      "src": "3156:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 31457,
                              "name": "factoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31363,
                              "src": "3192:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryProxy_$62",
                                "typeString": "contract FactoryProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryProxy_$62",
                                "typeString": "contract FactoryProxy"
                              }
                            ],
                            "id": 31456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3184:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31455,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3184:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3184:21:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31454,
                        "name": "IStakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5945,
                        "src": "3164:19:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakingPoolFactory_$5945_$",
                          "typeString": "type(contract IStakingPoolFactory)"
                        }
                      },
                      "id": 31459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3164:42:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "src": "3156:50:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
                      "typeString": "contract IStakingPoolFactory"
                    }
                  },
                  "id": 31461,
                  "nodeType": "ExpressionStatement",
                  "src": "3156:50:51"
                },
                {
                  "expression": {
                    "id": 31468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31462,
                      "name": "frensInitialiser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31348,
                      "src": "3241:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31466,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "3281:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3260:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensInitialiser_$1017_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensInitialiser)"
                        },
                        "typeName": {
                          "id": 31464,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31463,
                            "name": "FrensInitialiser",
                            "nameLocations": [
                              "3264:16:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1017,
                            "src": "3264:16:51"
                          },
                          "referencedDeclaration": 1017,
                          "src": "3264:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                            "typeString": "contract FrensInitialiser"
                          }
                        }
                      },
                      "id": 31467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3260:34:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "src": "3241:53:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                      "typeString": "contract FrensInitialiser"
                    }
                  },
                  "id": 31469,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31475,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3390:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 31474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3382:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3382:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3382:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31479,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3405:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 31478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3397:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3397:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3397:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31470,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "3373:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3376:5:51",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12509,
                      "src": "3373:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 31481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3373:38:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31482,
                  "nodeType": "ExpressionStatement",
                  "src": "3373:38:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31488,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31348,
                            "src": "3456:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 31487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3448:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31486,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3448:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3448:25:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73496e697469616c69736572",
                        "id": 31490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3475:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        },
                        "value": "FrensInitialiser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        }
                      ],
                      "expression": {
                        "id": 31483,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "3419:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3436:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "3419:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3419:75:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31492,
                  "nodeType": "ExpressionStatement",
                  "src": "3419:75:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31498,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31348,
                            "src": "3545:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 31497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3537:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3537:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3537:25:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 31500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31493,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "3502:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3519:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "3502:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:67:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31502,
                  "nodeType": "ExpressionStatement",
                  "src": "3502:67:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31506,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31393,
                        "src": "3645:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5353565265676973747279",
                        "id": 31507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3665:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        },
                        "value": "SSVRegistry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        }
                      ],
                      "expression": {
                        "id": 31503,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "3608:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3625:19:51",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 978,
                      "src": "3608:36:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31509,
                  "nodeType": "ExpressionStatement",
                  "src": "3608:71:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31513,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31390,
                        "src": "3760:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "4465706f736974436f6e7472616374",
                        "id": 31514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3769:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        },
                        "value": "DepositContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        }
                      ],
                      "expression": {
                        "id": 31510,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "3723:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3740:19:51",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 978,
                      "src": "3723:36:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:64:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31516,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:64:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31520,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31396,
                        "src": "3856:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "454e53",
                        "id": 31521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3868:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        },
                        "value": "ENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        }
                      ],
                      "expression": {
                        "id": 31517,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "3819:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3836:19:51",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 978,
                      "src": "3819:36:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:55:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31523,
                  "nodeType": "ExpressionStatement",
                  "src": "3819:55:51"
                },
                {
                  "expression": {
                    "id": 31530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31524,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31375,
                      "src": "3910:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31528,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "3946:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3927:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensPoolShare_$2582_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 31526,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31525,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3931:14:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2582,
                            "src": "3931:14:51"
                          },
                          "referencedDeclaration": 2582,
                          "src": "3931:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 31529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3927:32:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3910:49:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 31531,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:49:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31537,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31375,
                            "src": "4036:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 31536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4028:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4028:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4028:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265",
                        "id": 31539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4053:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        },
                        "value": "FrensPoolShare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        }
                      ],
                      "expression": {
                        "id": 31532,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "3999:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4016:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "3999:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3999:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31541,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:71:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31547,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31375,
                            "src": "4121:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 31546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4113:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31545,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4113:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4113:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4138:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31542,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "4078:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4095:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "4078:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4078:66:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31551,
                  "nodeType": "ExpressionStatement",
                  "src": "4078:66:51"
                },
                {
                  "expression": {
                    "id": 31558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31552,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31366,
                      "src": "4175:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31556,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "4219:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4196:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_StakingPoolFactory_$5026_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 31554,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31553,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "4200:18:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5026,
                            "src": "4200:18:51"
                          },
                          "referencedDeclaration": 5026,
                          "src": "4200:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 31557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4196:36:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "4175:57:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 31559,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:57:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31565,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31366,
                            "src": "4304:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 31564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4296:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31563,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4296:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4296:27:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67506f6f6c466163746f7279",
                        "id": 31567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        },
                        "value": "StakingPoolFactory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        }
                      ],
                      "expression": {
                        "id": 31560,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "4267:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4284:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "4267:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4267:79:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31569,
                  "nodeType": "ExpressionStatement",
                  "src": "4267:79:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31575,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31366,
                            "src": "4397:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5026",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 31574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4389:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31573,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4389:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4389:27:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4418:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31570,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "4354:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4371:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "4354:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4354:70:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31579,
                  "nodeType": "ExpressionStatement",
                  "src": "4354:70:51"
                },
                {
                  "expression": {
                    "id": 31586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31580,
                      "name": "frensPoolSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31381,
                      "src": "4699:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                        "typeString": "contract FrensPoolSetter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31584,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "4737:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4717:19:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensPoolSetter_$2318_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolSetter)"
                        },
                        "typeName": {
                          "id": 31582,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31581,
                            "name": "FrensPoolSetter",
                            "nameLocations": [
                              "4721:15:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2318,
                            "src": "4721:15:51"
                          },
                          "referencedDeclaration": 2318,
                          "src": "4721:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                            "typeString": "contract FrensPoolSetter"
                          }
                        }
                      },
                      "id": 31585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4717:33:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                        "typeString": "contract FrensPoolSetter"
                      }
                    },
                    "src": "4699:51:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                      "typeString": "contract FrensPoolSetter"
                    }
                  },
                  "id": 31587,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:51:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31593,
                            "name": "frensPoolSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31381,
                            "src": "4825:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                              "typeString": "contract FrensPoolSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                              "typeString": "contract FrensPoolSetter"
                            }
                          ],
                          "id": 31592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4817:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31591,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4817:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4817:24:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c536574746572",
                        "id": 31595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4843:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45b002fb55a01b34a6c58e4d710b50ebbce7cf0354e418a1b19e16023b42cc4a",
                          "typeString": "literal_string \"FrensPoolSetter\""
                        },
                        "value": "FrensPoolSetter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45b002fb55a01b34a6c58e4d710b50ebbce7cf0354e418a1b19e16023b42cc4a",
                          "typeString": "literal_string \"FrensPoolSetter\""
                        }
                      ],
                      "expression": {
                        "id": 31588,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "4788:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4805:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "4788:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:73:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31597,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:73:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31603,
                            "name": "frensPoolSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31381,
                            "src": "4912:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                              "typeString": "contract FrensPoolSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2318",
                              "typeString": "contract FrensPoolSetter"
                            }
                          ],
                          "id": 31602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4904:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31601,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4904:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4904:24:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 31605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4930:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31598,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "4869:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4886:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "4869:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4869:66:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31607,
                  "nodeType": "ExpressionStatement",
                  "src": "4869:66:51"
                },
                {
                  "expression": {
                    "id": 31614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31608,
                      "name": "frensManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31351,
                      "src": "4966:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensManager_$1257",
                        "typeString": "contract FrensManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31612,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "4998:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4981:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensManager_$1257_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensManager)"
                        },
                        "typeName": {
                          "id": 31610,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31609,
                            "name": "FrensManager",
                            "nameLocations": [
                              "4985:12:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1257,
                            "src": "4985:12:51"
                          },
                          "referencedDeclaration": 1257,
                          "src": "4985:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensManager_$1257",
                            "typeString": "contract FrensManager"
                          }
                        }
                      },
                      "id": 31613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4981:30:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensManager_$1257",
                        "typeString": "contract FrensManager"
                      }
                    },
                    "src": "4966:45:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensManager_$1257",
                      "typeString": "contract FrensManager"
                    }
                  },
                  "id": 31615,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:45:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31621,
                            "name": "frensManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31351,
                            "src": "5083:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensManager_$1257",
                              "typeString": "contract FrensManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensManager_$1257",
                              "typeString": "contract FrensManager"
                            }
                          ],
                          "id": 31620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5075:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5075:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5075:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d616e61676572",
                        "id": 31623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5098:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe4e22d2638c8611056f84a5b460190ec8edca4e6928e14fc6af602643cb0ca8",
                          "typeString": "literal_string \"FrensManager\""
                        },
                        "value": "FrensManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe4e22d2638c8611056f84a5b460190ec8edca4e6928e14fc6af602643cb0ca8",
                          "typeString": "literal_string \"FrensManager\""
                        }
                      ],
                      "expression": {
                        "id": 31616,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5046:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5063:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "5046:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5046:67:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31625,
                  "nodeType": "ExpressionStatement",
                  "src": "5046:67:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31631,
                            "name": "frensManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31351,
                            "src": "5164:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensManager_$1257",
                              "typeString": "contract FrensManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensManager_$1257",
                              "typeString": "contract FrensManager"
                            }
                          ],
                          "id": 31630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5156:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5156:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5156:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 31633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5179:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31626,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5121:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5138:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "5121:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5121:63:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31635,
                  "nodeType": "ExpressionStatement",
                  "src": "5121:63:51"
                },
                {
                  "expression": {
                    "id": 31642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31636,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31384,
                      "src": "5219:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$1744",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31640,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "5249:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5233:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensOracle_$1744_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 31638,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31637,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "5237:11:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "5237:11:51"
                          },
                          "referencedDeclaration": 1744,
                          "src": "5237:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$1744",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 31641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5233:29:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$1744",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "5219:43:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$1744",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 31643,
                  "nodeType": "ExpressionStatement",
                  "src": "5219:43:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31649,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31384,
                            "src": "5338:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$1744",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$1744",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 31648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5330:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5330:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5330:20:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734f7261636c65",
                        "id": 31651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5352:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                          "typeString": "literal_string \"FrensOracle\""
                        },
                        "value": "FrensOracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                          "typeString": "literal_string \"FrensOracle\""
                        }
                      ],
                      "expression": {
                        "id": 31644,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5301:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5318:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "5301:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5301:65:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31653,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:65:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31659,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31384,
                            "src": "5417:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$1744",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$1744",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 31658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5409:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31657,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5409:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5409:20:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5431:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31654,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5374:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5391:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "5374:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5374:63:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31663,
                  "nodeType": "ExpressionStatement",
                  "src": "5374:63:51"
                },
                {
                  "expression": {
                    "id": 31670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31664,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31354,
                      "src": "5471:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31668,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "5509:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5489:19:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensMetaHelper_$1659_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 31666,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31665,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "5493:15:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1659,
                            "src": "5493:15:51"
                          },
                          "referencedDeclaration": 1659,
                          "src": "5493:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 31669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5489:33:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "5471:51:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 31671,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:51:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31677,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31354,
                            "src": "5597:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 31676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5589:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5589:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5589:24:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d65746148656c706572",
                        "id": 31679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5615:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        },
                        "value": "FrensMetaHelper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        }
                      ],
                      "expression": {
                        "id": 31672,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5560:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5577:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "5560:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5560:73:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31681,
                  "nodeType": "ExpressionStatement",
                  "src": "5560:73:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31687,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31354,
                            "src": "5684:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1659",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 31686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5676:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31685,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5676:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5676:24:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5702:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31682,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5641:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5658:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "5641:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5641:67:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31691,
                  "nodeType": "ExpressionStatement",
                  "src": "5641:67:51"
                },
                {
                  "expression": {
                    "id": 31698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31692,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31357,
                      "src": "5740:22:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31696,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "5792:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5765:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensPoolShareTokenURI_$2884_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 31694,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31693,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "5769:22:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2884,
                            "src": "5769:22:51"
                          },
                          "referencedDeclaration": 2884,
                          "src": "5769:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 31697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5765:40:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "5740:65:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 31699,
                  "nodeType": "ExpressionStatement",
                  "src": "5740:65:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31705,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31357,
                            "src": "5878:22:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 31704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5870:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5870:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5870:31:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                        "id": 31707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5903:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        },
                        "value": "FrensPoolShareTokenURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        }
                      ],
                      "expression": {
                        "id": 31700,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5841:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5858:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "5841:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5841:87:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31709,
                  "nodeType": "ExpressionStatement",
                  "src": "5841:87:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31715,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31357,
                            "src": "5979:22:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2884",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 31714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5971:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5971:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5971:31:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6004:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31710,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "5936:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5953:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "5936:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5936:74:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31719,
                  "nodeType": "ExpressionStatement",
                  "src": "5936:74:51"
                },
                {
                  "expression": {
                    "id": 31726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31720,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31345,
                      "src": "6036:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$242",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31724,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31360,
                          "src": "6060:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3514",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 31723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6047:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5620_$returns$_t_contract$_FrensArt_$242_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 31722,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31721,
                            "name": "FrensArt",
                            "nameLocations": [
                              "6051:8:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 242,
                            "src": "6051:8:51"
                          },
                          "referencedDeclaration": 242,
                          "src": "6051:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$242",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 31725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6047:26:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$242",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "6036:37:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$242",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 31727,
                  "nodeType": "ExpressionStatement",
                  "src": "6036:37:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31733,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31345,
                            "src": "6141:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 31732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6133:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31731,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6133:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6133:17:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73417274",
                        "id": 31735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6152:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        },
                        "value": "FrensArt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        }
                      ],
                      "expression": {
                        "id": 31728,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "6104:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6121:11:51",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 905,
                      "src": "6104:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 31736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6104:59:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31737,
                  "nodeType": "ExpressionStatement",
                  "src": "6104:59:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31743,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31345,
                            "src": "6214:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 31742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6206:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31741,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6206:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6206:17:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6225:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31738,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31348,
                        "src": "6171:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1017",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 31740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6188:17:51",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "6171:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6171:60:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31747,
                  "nodeType": "ExpressionStatement",
                  "src": "6171:60:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31753,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6330:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 31752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6322:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6322:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6322:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31757,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6345:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 31756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6337:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31755,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6337:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6337:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31748,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "6313:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6316:5:51",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12509,
                      "src": "6313:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 31759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6313:38:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31760,
                  "nodeType": "ExpressionStatement",
                  "src": "6313:38:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31761,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31360,
                        "src": "6359:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$3514",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 31763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6372:17:51",
                      "memberName": "setDeployedStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3080,
                      "src": "6359:30:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6359:32:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31765,
                  "nodeType": "ExpressionStatement",
                  "src": "6359:32:51"
                },
                {
                  "assignments": [
                    31767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31767,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6460:4:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 31800,
                      "src": "6452:12:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 31766,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6452:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31773,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31770,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "6481:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6492:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31768,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31378,
                        "src": "6468:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 31769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6474:6:51",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5944,
                      "src": "6468:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 31772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6468:66:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6451:83:51"
                },
                {
                  "expression": {
                    "id": 31781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31774,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31369,
                      "src": "6574:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4926",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 31778,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31767,
                              "src": "6608:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6600:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 31776,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6600:8:51",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6600:13:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 31775,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4926,
                        "src": "6588:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$4926_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 31780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6588:26:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4926",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6574:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 31782,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:40:51"
                },
                {
                  "assignments": [
                    31784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31784,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "6801:5:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 31800,
                      "src": "6793:13:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 31783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6793:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31790,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31787,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "6823:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 31788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6834:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31785,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31378,
                        "src": "6810:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$5945",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 31786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6816:6:51",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5944,
                      "src": "6810:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 31789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6810:66:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6792:84:51"
                },
                {
                  "expression": {
                    "id": 31798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31791,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31372,
                      "src": "6916:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4926",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 31795,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31784,
                              "src": "6951:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6943:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 31793,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6943:8:51",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6943:14:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 31792,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4926,
                        "src": "6931:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$4926_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 31797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6931:27:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4926",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6916:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 31799,
                  "nodeType": "ExpressionStatement",
                  "src": "6916:42:51"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2950:5:51",
            "parameters": {
              "id": 31436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2955:2:51"
            },
            "returnParameters": {
              "id": 31437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2965:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31819,
            "nodeType": "FunctionDefinition",
            "src": "7083:143:51",
            "nodes": [],
            "body": {
              "id": 31818,
              "nodeType": "Block",
              "src": "7111:115:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31805,
                      "mutability": "mutable",
                      "name": "stakingPoolOwner",
                      "nameLocation": "7127:16:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 31818,
                      "src": "7119:24:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 31804,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7119:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31809,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31806,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "7146:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7158:5:51",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4794,
                      "src": "7146:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 31808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7146:19:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7119:46:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31811,
                        "name": "stakingPoolOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31805,
                        "src": "7182:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31814,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31405,
                            "src": "7208:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7200:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31812,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7200:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7200:18:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31810,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9121,
                        9146,
                        9159,
                        9175,
                        9217,
                        9259,
                        9301,
                        9338,
                        9375,
                        9412,
                        6274,
                        6299,
                        6329,
                        6354,
                        6413,
                        6438,
                        6468,
                        6493,
                        7593,
                        7628
                      ],
                      "referencedDeclaration": 6274,
                      "src": "7173:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7173:46:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31817,
                  "nodeType": "ExpressionStatement",
                  "src": "7173:46:51"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "7092:9:51",
            "parameters": {
              "id": 31802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7101:2:51"
            },
            "returnParameters": {
              "id": 31803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7111:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31922,
            "nodeType": "FunctionDefinition",
            "src": "7232:726:51",
            "nodes": [],
            "body": {
              "id": 31921,
              "nodeType": "Block",
              "src": "7270:688:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 31830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 31826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31824,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31821,
                        "src": "7281:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 31825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7285:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7281:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 31829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31827,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31821,
                        "src": "7290:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 31828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7295:8:51",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7290:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7281:22:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 31882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31880,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31821,
                        "src": "7657:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 31881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7662:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7657:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 31918,
                      "nodeType": "Block",
                      "src": "7800:152:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 31904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7826:43:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 31901,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "7810:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 31903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7813:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "7810:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 31905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7810:60:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31906,
                          "nodeType": "ExpressionStatement",
                          "src": "7810:60:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31908,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "7890:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31907,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "7880:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 31909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7880:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31910,
                          "nodeType": "ExpressionStatement",
                          "src": "7880:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31911,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "7906:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 31913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7918:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "7906:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 31915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 31914,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31821,
                                  "src": "7939:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "7906:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7906:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31917,
                          "nodeType": "ExpressionStatement",
                          "src": "7906:37:51"
                        }
                      ]
                    },
                    "id": 31919,
                    "nodeType": "IfStatement",
                    "src": "7654:298:51",
                    "trueBody": {
                      "id": 31900,
                      "nodeType": "Block",
                      "src": "7665:129:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 31886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7691:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 31883,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "7675:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 31885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7678:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "7675:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 31887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7675:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31888,
                          "nodeType": "ExpressionStatement",
                          "src": "7675:37:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31890,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "7732:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31889,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "7722:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 31891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7722:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31892,
                          "nodeType": "ExpressionStatement",
                          "src": "7722:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31893,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "7748:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 31895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7760:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "7748:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 31897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 31896,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31821,
                                  "src": "7781:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "7748:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7748:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31899,
                          "nodeType": "ExpressionStatement",
                          "src": "7748:37:51"
                        }
                      ]
                    }
                  },
                  "id": 31920,
                  "nodeType": "IfStatement",
                  "src": "7278:674:51",
                  "trueBody": {
                    "id": 31879,
                    "nodeType": "Block",
                    "src": "7304:344:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31832,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "7324:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31831,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8559,
                              8580,
                              8604,
                              8628
                            ],
                            "referencedDeclaration": 8559,
                            "src": "7314:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7314:16:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31834,
                        "nodeType": "ExpressionStatement",
                        "src": "7314:16:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31835,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "7340:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7352:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "7340:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 31838,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31821,
                                "src": "7373:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "7340:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7340:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31841,
                        "nodeType": "ExpressionStatement",
                        "src": "7340:37:51"
                      },
                      {
                        "assignments": [
                          31843
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31843,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "7392:2:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 31879,
                            "src": "7387:7:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31842,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7387:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31849,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31846,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "7432:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 31847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7439:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 31844,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31375,
                              "src": "7397:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 31845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7412:19:51",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30331,
                            "src": "7397:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 31848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7397:44:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7387:54:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 31851,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31843,
                                "src": "7462:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 31852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7468:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7462:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31850,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6223,
                              6244
                            ],
                            "referencedDeclaration": 6223,
                            "src": "7451:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 31854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7451:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31855,
                        "nodeType": "ExpressionStatement",
                        "src": "7451:20:51"
                      },
                      {
                        "assignments": [
                          31857
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31857,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "7486:6:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 31879,
                            "src": "7481:11:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31856,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7481:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31862,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31860,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31843,
                              "src": "7524:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31858,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "7495:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 31859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7507:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "7495:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 31861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7495:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7481:46:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31864,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31821,
                              "src": "7546:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 31865,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31857,
                              "src": "7549:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 31863,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "7537:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 31866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7537:19:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31867,
                        "nodeType": "ExpressionStatement",
                        "src": "7537:19:51"
                      },
                      {
                        "assignments": [
                          31869
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31869,
                            "mutability": "mutable",
                            "name": "totDep",
                            "nameLocation": "7571:6:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 31879,
                            "src": "7566:11:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31868,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7566:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31873,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 31870,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "7580:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 31871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7592:16:51",
                            "memberName": "getTotalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4781,
                            "src": "7580:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 31872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7580:30:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7566:44:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31875,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31821,
                              "src": "7629:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 31876,
                              "name": "totDep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31869,
                              "src": "7632:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 31874,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "7620:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 31877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7620:19:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31878,
                        "nodeType": "ExpressionStatement",
                        "src": "7620:19:51"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4ccd89c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "7241:11:51",
            "parameters": {
              "id": 31822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31821,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7260:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 31922,
                  "src": "7253:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 31820,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "7253:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7252:10:51"
            },
            "returnParameters": {
              "id": 31823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7270:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32097,
            "nodeType": "FunctionDefinition",
            "src": "7964:1302:51",
            "nodes": [],
            "body": {
              "id": 32096,
              "nodeType": "Block",
              "src": "8017:1249:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 31943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 31931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31929,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31924,
                        "src": "8028:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 31930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8032:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8028:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31934,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31924,
                              "src": "8042:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 31933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8037:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 31932,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8037:4:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8037:7:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 31938,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31926,
                              "src": "8052:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 31937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8047:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 31936,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8047:4:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8047:7:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8037:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 31941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8058:8:51",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "8037:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8028:38:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32039,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31924,
                        "src": "8774:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8779:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8774:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32093,
                      "nodeType": "Block",
                      "src": "8917:343:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32061,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "9016:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32060,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "9006:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9006:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32063,
                          "nodeType": "ExpressionStatement",
                          "src": "9006:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32064,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "9032:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9044:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "9032:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32067,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31924,
                                  "src": "9065:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "9032:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9032:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32070,
                          "nodeType": "ExpressionStatement",
                          "src": "9032:37:51"
                        },
                        {
                          "assignments": [
                            32072
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 32072,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "9084:2:51",
                              "nodeType": "VariableDeclaration",
                              "scope": 32093,
                              "src": "9079:7:51",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 32071,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9079:4:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 32078,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 32075,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "9124:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 32076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9131:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 32073,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31375,
                                "src": "9089:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 32074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9104:19:51",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30331,
                              "src": "9089:34:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 32077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9089:44:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9079:54:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9159:43:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32079,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "9143:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9146:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "9143:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9143:60:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32084,
                          "nodeType": "ExpressionStatement",
                          "src": "9143:60:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32090,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32072,
                                "src": "9248:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 32085,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "9213:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9225:12:51",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3809,
                                "src": "9213:24:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 32089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32088,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31926,
                                  "src": "9245:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "9213:34:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9213:38:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32092,
                          "nodeType": "ExpressionStatement",
                          "src": "9213:38:51"
                        }
                      ]
                    },
                    "id": 32094,
                    "nodeType": "IfStatement",
                    "src": "8771:489:51",
                    "trueBody": {
                      "id": 32059,
                      "nodeType": "Block",
                      "src": "8782:129:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8808:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32042,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "8792:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8795:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "8792:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8792:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32047,
                          "nodeType": "ExpressionStatement",
                          "src": "8792:37:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32049,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "8849:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32048,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "8839:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8839:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32051,
                          "nodeType": "ExpressionStatement",
                          "src": "8839:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32052,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "8865:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8877:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "8865:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32055,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31924,
                                  "src": "8898:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "8865:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8865:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32058,
                          "nodeType": "ExpressionStatement",
                          "src": "8865:37:51"
                        }
                      ]
                    }
                  },
                  "id": 32095,
                  "nodeType": "IfStatement",
                  "src": "8025:1235:51",
                  "trueBody": {
                    "id": 32038,
                    "nodeType": "Block",
                    "src": "8067:698:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31945,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "8087:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31944,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8559,
                              8580,
                              8604,
                              8628
                            ],
                            "referencedDeclaration": 8559,
                            "src": "8077:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8077:16:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31947,
                        "nodeType": "ExpressionStatement",
                        "src": "8077:16:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31948,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "8103:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8115:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "8103:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 31951,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31924,
                                "src": "8136:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8103:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8103:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31954,
                        "nodeType": "ExpressionStatement",
                        "src": "8103:37:51"
                      },
                      {
                        "assignments": [
                          31956
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31956,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8155:2:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32038,
                            "src": "8150:7:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31955,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8150:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31962,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31959,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "8195:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 31960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8202:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 31957,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31375,
                              "src": "8160:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 31958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8175:19:51",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30331,
                            "src": "8160:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 31961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8160:44:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8150:54:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 31964,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31956,
                                "src": "8225:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 31965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8231:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8225:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31963,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6223,
                              6244
                            ],
                            "referencedDeclaration": 6223,
                            "src": "8214:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 31967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8214:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31968,
                        "nodeType": "ExpressionStatement",
                        "src": "8214:20:51"
                      },
                      {
                        "assignments": [
                          31970
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31970,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "8249:6:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32038,
                            "src": "8244:11:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31969,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8244:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31975,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31973,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31956,
                              "src": "8287:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31971,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "8258:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 31972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8270:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "8258:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 31974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8258:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8244:46:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31977,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31924,
                              "src": "8309:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 31978,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31970,
                              "src": "8312:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 31976,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "8300:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 31979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8300:19:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31980,
                        "nodeType": "ExpressionStatement",
                        "src": "8300:19:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "696420646f6573206e6f74206578697374",
                              "id": 31984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8388:19:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e78ef4f017a8bc6df749ab9c2404c9194222fa8aaeccb8286454828d404e3213",
                                "typeString": "literal_string \"id does not exist\""
                              },
                              "value": "id does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e78ef4f017a8bc6df749ab9c2404c9194222fa8aaeccb8286454828d404e3213",
                                "typeString": "literal_string \"id does not exist\""
                              }
                            ],
                            "expression": {
                              "id": 31981,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7771,
                              "src": "8372:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13052",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 31983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8375:12:51",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12538,
                            "src": "8372:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 31985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8372:36:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31986,
                        "nodeType": "ExpressionStatement",
                        "src": "8372:36:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 31992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8453:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 31987,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "8418:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8430:12:51",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3809,
                              "src": "8418:24:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 31991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 31990,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31926,
                                "src": "8450:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8418:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 31993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8418:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31994,
                        "nodeType": "ExpressionStatement",
                        "src": "8418:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32000,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31956,
                              "src": "8539:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 31995,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "8504:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8516:12:51",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3809,
                              "src": "8504:24:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 31999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 31998,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31926,
                                "src": "8536:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8504:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8504:38:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32002,
                        "nodeType": "ExpressionStatement",
                        "src": "8504:38:51"
                      },
                      {
                        "assignments": [
                          32004
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32004,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "8557:7:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32038,
                            "src": "8552:12:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32003,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8552:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32009,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32007,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31956,
                              "src": "8596:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32005,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "8567:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8579:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "8567:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8567:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8552:47:51"
                      },
                      {
                        "assignments": [
                          32011
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32011,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "8614:3:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32038,
                            "src": "8609:8:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32010,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8609:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32021,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32014,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31924,
                                "src": "8625:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8620:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32012,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8620:4:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8620:7:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32018,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31926,
                                "src": "8635:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8630:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32016,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8630:4:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8630:7:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8620:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8609:28:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32023,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32011,
                              "src": "8656:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32024,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32004,
                              "src": "8661:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32022,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "8647:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8647:22:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32026,
                        "nodeType": "ExpressionStatement",
                        "src": "8647:22:51"
                      },
                      {
                        "assignments": [
                          32028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32028,
                            "mutability": "mutable",
                            "name": "totDeps",
                            "nameLocation": "8684:7:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32038,
                            "src": "8679:12:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32027,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8679:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32032,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32029,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "8694:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8706:16:51",
                            "memberName": "getTotalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4781,
                            "src": "8694:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 32031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8694:30:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8679:45:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32034,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32011,
                              "src": "8743:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32035,
                              "name": "totDeps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32028,
                              "src": "8748:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32033,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "8734:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8734:22:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32037,
                        "nodeType": "ExpressionStatement",
                        "src": "8734:22:51"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "020f12da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDeposit",
            "nameLocation": "7973:16:51",
            "parameters": {
              "id": 31927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31924,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7997:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32097,
                  "src": "7990:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 31923,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31926,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "8007:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32097,
                  "src": "8000:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 31925,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8000:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7989:20:51"
            },
            "returnParameters": {
              "id": 31928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8017:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32261,
            "nodeType": "FunctionDefinition",
            "src": "9272:1253:51",
            "nodes": [],
            "body": {
              "id": 32260,
              "nodeType": "Block",
              "src": "9334:1191:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32104,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32099,
                        "src": "9345:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9349:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9345:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32109,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32099,
                              "src": "9359:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9354:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32107,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9354:4:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9354:7:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 32113,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32101,
                              "src": "9369:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9364:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32111,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9364:4:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9364:7:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9354:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9375:8:51",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "9354:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9345:38:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32203,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32099,
                        "src": "10033:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10038:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10033:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32257,
                      "nodeType": "Block",
                      "src": "10176:343:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32225,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "10275:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32224,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "10265:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10265:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32227,
                          "nodeType": "ExpressionStatement",
                          "src": "10265:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32228,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "10291:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10303:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "10291:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32231,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32099,
                                  "src": "10324:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10291:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10291:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32234,
                          "nodeType": "ExpressionStatement",
                          "src": "10291:37:51"
                        },
                        {
                          "assignments": [
                            32236
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 32236,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "10343:2:51",
                              "nodeType": "VariableDeclaration",
                              "scope": 32257,
                              "src": "10338:7:51",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 32235,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10338:4:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 32242,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 32239,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "10383:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 32240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10390:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 32237,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31375,
                                "src": "10348:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 32238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10363:19:51",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30331,
                              "src": "10348:34:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 32241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10348:44:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10338:54:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10418:43:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32243,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "10402:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10405:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "10402:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10402:60:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32248,
                          "nodeType": "ExpressionStatement",
                          "src": "10402:60:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32254,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32236,
                                "src": "10507:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 32249,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "10472:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10484:12:51",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3809,
                                "src": "10472:24:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 32253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32252,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32101,
                                  "src": "10504:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10472:34:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10472:38:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32256,
                          "nodeType": "ExpressionStatement",
                          "src": "10472:38:51"
                        }
                      ]
                    },
                    "id": 32258,
                    "nodeType": "IfStatement",
                    "src": "10030:489:51",
                    "trueBody": {
                      "id": 32223,
                      "nodeType": "Block",
                      "src": "10041:129:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10067:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32206,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "10051:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10054:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "10051:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10051:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32211,
                          "nodeType": "ExpressionStatement",
                          "src": "10051:37:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32213,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "10108:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32212,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "10098:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10098:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32215,
                          "nodeType": "ExpressionStatement",
                          "src": "10098:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32216,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "10124:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10136:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "10124:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32219,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32099,
                                  "src": "10157:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10124:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10124:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32222,
                          "nodeType": "ExpressionStatement",
                          "src": "10124:37:51"
                        }
                      ]
                    }
                  },
                  "id": 32259,
                  "nodeType": "IfStatement",
                  "src": "9342:1177:51",
                  "trueBody": {
                    "id": 32202,
                    "nodeType": "Block",
                    "src": "9384:640:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32120,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "9404:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32119,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8559,
                              8580,
                              8604,
                              8628
                            ],
                            "referencedDeclaration": 8559,
                            "src": "9394:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9394:16:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32122,
                        "nodeType": "ExpressionStatement",
                        "src": "9394:16:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32123,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "9420:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9432:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "9420:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32126,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32099,
                                "src": "9453:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9420:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9420:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32129,
                        "nodeType": "ExpressionStatement",
                        "src": "9420:37:51"
                      },
                      {
                        "assignments": [
                          32131
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32131,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9472:2:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32202,
                            "src": "9467:7:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32130,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9467:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32137,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32134,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "9512:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9519:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32132,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31375,
                              "src": "9477:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9492:19:51",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30331,
                            "src": "9477:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9477:44:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9467:54:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32139,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32131,
                                "src": "9542:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9548:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9542:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 32138,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6223,
                              6244
                            ],
                            "referencedDeclaration": 6223,
                            "src": "9531:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 32142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9531:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32143,
                        "nodeType": "ExpressionStatement",
                        "src": "9531:20:51"
                      },
                      {
                        "assignments": [
                          32145
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32145,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "9566:6:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32202,
                            "src": "9561:11:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32144,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9561:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32150,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32148,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32131,
                              "src": "9604:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32146,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "9575:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9587:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "9575:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9575:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9561:46:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32152,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32099,
                              "src": "9626:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 32153,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32145,
                              "src": "9629:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32151,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "9617:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9617:19:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32155,
                        "nodeType": "ExpressionStatement",
                        "src": "9617:19:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77726f6e67207374616b696e6720706f6f6c",
                              "id": 32159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9700:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bc8097e4f22cd38d305855905857ee7726203311b02f65b4e36865ec549aa7ee",
                                "typeString": "literal_string \"wrong staking pool\""
                              },
                              "value": "wrong staking pool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bc8097e4f22cd38d305855905857ee7726203311b02f65b4e36865ec549aa7ee",
                                "typeString": "literal_string \"wrong staking pool\""
                              }
                            ],
                            "expression": {
                              "id": 32156,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7771,
                              "src": "9684:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13052",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9687:12:51",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12538,
                            "src": "9684:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 32160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9684:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32161,
                        "nodeType": "ExpressionStatement",
                        "src": "9684:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32167,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32131,
                              "src": "9767:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32162,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31372,
                                "src": "9731:12:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9744:12:51",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3809,
                              "src": "9731:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32165,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32101,
                                "src": "9764:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9731:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9731:39:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32169,
                        "nodeType": "ExpressionStatement",
                        "src": "9731:39:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32175,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32131,
                              "src": "9885:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32170,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "9850:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9862:12:51",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3809,
                              "src": "9850:24:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32173,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32101,
                                "src": "9882:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9850:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9850:38:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32177,
                        "nodeType": "ExpressionStatement",
                        "src": "9850:38:51"
                      },
                      {
                        "assignments": [
                          32179
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32179,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "9903:7:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32202,
                            "src": "9898:12:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32178,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9898:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32184,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32182,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32131,
                              "src": "9942:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32180,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "9913:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9925:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "9913:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9913:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9898:47:51"
                      },
                      {
                        "assignments": [
                          32186
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32186,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "9960:3:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32202,
                            "src": "9955:8:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32185,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9955:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32196,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32189,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32099,
                                "src": "9971:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9966:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32187,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9966:4:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9966:7:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32193,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32101,
                                "src": "9981:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9976:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32191,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9976:4:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9976:7:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9966:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9955:28:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32198,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32186,
                              "src": "10002:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32199,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32179,
                              "src": "10007:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32197,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "9993:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9993:22:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32201,
                        "nodeType": "ExpressionStatement",
                        "src": "9993:22:51"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b7ab10ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDepositWrongPool",
            "nameLocation": "9281:25:51",
            "parameters": {
              "id": 32102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32099,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "9314:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32261,
                  "src": "9307:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32098,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9307:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32101,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "9324:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32261,
                  "src": "9317:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32100,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9317:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9306:20:51"
            },
            "returnParameters": {
              "id": 32103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9334:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32439,
            "nodeType": "FunctionDefinition",
            "src": "10531:1125:51",
            "nodes": [],
            "body": {
              "id": 32438,
              "nodeType": "Block",
              "src": "10580:1076:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 32274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 32270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32268,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32263,
                          "src": "10591:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 32269,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32265,
                          "src": "10596:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "src": "10591:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 32273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32271,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32263,
                          "src": "10601:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10605:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10601:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10591:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 32277,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32263,
                            "src": "10615:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          ],
                          "id": 32276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10610:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32275,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10610:4:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10610:7:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10621:8:51",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "10610:19:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10591:38:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32351,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32263,
                        "src": "11064:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11069:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11064:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32374,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32263,
                              "src": "11215:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "id": 32373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11210:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32372,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11210:4:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11210:7:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 32376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11220:8:51",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        },
                        "src": "11210:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 32434,
                        "nodeType": "Block",
                        "src": "11388:262:51",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32397,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31411,
                                  "src": "11408:5:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32396,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  8559,
                                  8580,
                                  8604,
                                  8628
                                ],
                                "referencedDeclaration": 8559,
                                "src": "11398:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 32398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11398:16:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32399,
                            "nodeType": "ExpressionStatement",
                            "src": "11398:16:51"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 32400,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "11424:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11436:13:51",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3738,
                                  "src": "11424:25:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 32404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 32403,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32263,
                                    "src": "11457:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "11424:35:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11424:37:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32406,
                            "nodeType": "ExpressionStatement",
                            "src": "11424:37:51"
                          },
                          {
                            "assignments": [
                              32408
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 32408,
                                "mutability": "mutable",
                                "name": "id",
                                "nameLocation": "11476:2:51",
                                "nodeType": "VariableDeclaration",
                                "scope": 32434,
                                "src": "11471:7:51",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 32407,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11471:4:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 32414,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 32411,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31411,
                                  "src": "11516:5:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 32412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11523:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 32409,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31375,
                                  "src": "11481:14:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 32410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11496:19:51",
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30331,
                                "src": "11481:34:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 32413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11481:44:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "11471:54:51"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 32418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 32416,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32408,
                                    "src": "11546:2:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 32417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11552:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11546:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 32415,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  6223,
                                  6244
                                ],
                                "referencedDeclaration": 6223,
                                "src": "11535:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                  "typeString": "function (bool)"
                                }
                              },
                              "id": 32419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11535:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32420,
                            "nodeType": "ExpressionStatement",
                            "src": "11535:20:51"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f7420656e6f756768206465706f7369746564",
                                  "id": 32424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11581:22:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  },
                                  "value": "not enough deposited"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  }
                                ],
                                "expression": {
                                  "id": 32421,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7771,
                                  "src": "11565:2:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$13052",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 32423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11568:12:51",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12538,
                                "src": "11565:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 32425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11565:39:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32426,
                            "nodeType": "ExpressionStatement",
                            "src": "11565:39:51"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32430,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32408,
                                  "src": "11635:2:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 32431,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32265,
                                  "src": "11639:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                ],
                                "expression": {
                                  "id": 32427,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "11614:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11626:8:51",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4236,
                                "src": "11614:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) external"
                                }
                              },
                              "id": 32432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11614:27:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32433,
                            "nodeType": "ExpressionStatement",
                            "src": "11614:27:51"
                          }
                        ]
                      },
                      "id": 32435,
                      "nodeType": "IfStatement",
                      "src": "11207:443:51",
                      "trueBody": {
                        "id": 32395,
                        "nodeType": "Block",
                        "src": "11230:152:51",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                  "id": 32381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11256:43:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  },
                                  "value": "total deposits cannot be more than 32 Eth"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  }
                                ],
                                "expression": {
                                  "id": 32378,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7771,
                                  "src": "11240:2:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$13052",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 32380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11243:12:51",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12538,
                                "src": "11240:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 32382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11240:60:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32383,
                            "nodeType": "ExpressionStatement",
                            "src": "11240:60:51"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32385,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31411,
                                  "src": "11320:5:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32384,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  8559,
                                  8580,
                                  8604,
                                  8628
                                ],
                                "referencedDeclaration": 8559,
                                "src": "11310:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 32386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11310:16:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32387,
                            "nodeType": "ExpressionStatement",
                            "src": "11310:16:51"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 32388,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "11336:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11348:13:51",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3738,
                                  "src": "11336:25:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 32392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 32391,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32263,
                                    "src": "11369:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "11336:35:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11336:37:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32394,
                            "nodeType": "ExpressionStatement",
                            "src": "11336:37:51"
                          }
                        ]
                      }
                    },
                    "id": 32436,
                    "nodeType": "IfStatement",
                    "src": "11061:589:51",
                    "trueBody": {
                      "id": 32371,
                      "nodeType": "Block",
                      "src": "11072:129:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11098:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32354,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "11082:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11085:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "11082:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11082:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32359,
                          "nodeType": "ExpressionStatement",
                          "src": "11082:37:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32361,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "11139:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32360,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "11129:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11129:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32363,
                          "nodeType": "ExpressionStatement",
                          "src": "11129:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32364,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "11155:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11167:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "11155:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32367,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32263,
                                  "src": "11188:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "11155:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11155:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32370,
                          "nodeType": "ExpressionStatement",
                          "src": "11155:37:51"
                        }
                      ]
                    }
                  },
                  "id": 32437,
                  "nodeType": "IfStatement",
                  "src": "10588:1062:51",
                  "trueBody": {
                    "id": 32350,
                    "nodeType": "Block",
                    "src": "10630:425:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32283,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "10650:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32282,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8559,
                              8580,
                              8604,
                              8628
                            ],
                            "referencedDeclaration": 8559,
                            "src": "10640:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10640:16:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32285,
                        "nodeType": "ExpressionStatement",
                        "src": "10640:16:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32286,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "10666:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10678:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "10666:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32289,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32263,
                                "src": "10699:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "10666:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10666:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32292,
                        "nodeType": "ExpressionStatement",
                        "src": "10666:37:51"
                      },
                      {
                        "assignments": [
                          32294
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32294,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "10718:2:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32350,
                            "src": "10713:7:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32293,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10713:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32300,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32297,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "10758:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10765:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32295,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31375,
                              "src": "10723:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2582",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10738:19:51",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30331,
                            "src": "10723:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10723:44:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10713:54:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32302,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32294,
                                "src": "10788:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10794:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10788:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 32301,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6223,
                              6244
                            ],
                            "referencedDeclaration": 6223,
                            "src": "10777:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 32305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10777:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32306,
                        "nodeType": "ExpressionStatement",
                        "src": "10777:20:51"
                      },
                      {
                        "assignments": [
                          32308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32308,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "10812:6:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32350,
                            "src": "10807:11:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32307,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10807:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32313,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32311,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32294,
                              "src": "10850:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32309,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "10821:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10833:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "10821:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10821:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10807:46:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32315,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32263,
                              "src": "10872:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32316,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32308,
                              "src": "10875:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32314,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "10863:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10863:19:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32318,
                        "nodeType": "ExpressionStatement",
                        "src": "10863:19:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32322,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32294,
                              "src": "10913:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32323,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32265,
                              "src": "10917:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "expression": {
                              "id": 32319,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "10892:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10904:8:51",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4236,
                            "src": "10892:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 32324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10892:27:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32325,
                        "nodeType": "ExpressionStatement",
                        "src": "10892:27:51"
                      },
                      {
                        "assignments": [
                          32327
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32327,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "10934:7:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32350,
                            "src": "10929:12:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32326,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10929:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32332,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32330,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32294,
                              "src": "10973:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32328,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "10944:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10956:16:51",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4762,
                            "src": "10944:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10944:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10929:47:51"
                      },
                      {
                        "assignments": [
                          32334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32334,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "10991:3:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32350,
                            "src": "10986:8:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32333,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10986:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32344,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32337,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32263,
                                "src": "11002:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 32336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10997:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32335,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10997:4:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10997:7:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32341,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32265,
                                "src": "11012:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 32340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11007:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32339,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11007:4:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11007:7:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10997:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10986:28:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32346,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32334,
                              "src": "11033:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32347,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32327,
                              "src": "11038:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32345,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6468,
                            "src": "11024:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11024:22:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32349,
                        "nodeType": "ExpressionStatement",
                        "src": "11024:22:51"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "90f805d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "10540:12:51",
            "parameters": {
              "id": 32266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32263,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "10560:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32439,
                  "src": "10553:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32262,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "10553:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32265,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "10570:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32439,
                  "src": "10563:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32264,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "10563:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10552:20:51"
            },
            "returnParameters": {
              "id": 32267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10580:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32544,
            "nodeType": "FunctionDefinition",
            "src": "11662:1261:51",
            "nodes": [],
            "body": {
              "id": 32543,
              "nodeType": "Block",
              "src": "11690:1233:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32443,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "11739:14:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32543,
                      "src": "11734:19:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32442,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11734:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32449,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 32446,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "11764:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 32445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11756:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 32444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11756:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 32447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11756:20:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 32448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11777:7:51",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "11756:28:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11734:50:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32451,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31411,
                        "src": "11847:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 32450,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8469,
                        8490,
                        8514,
                        8538
                      ],
                      "referencedDeclaration": 8469,
                      "src": "11842:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11842:11:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32453,
                  "nodeType": "ExpressionStatement",
                  "src": "11842:11:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 32454,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "11861:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 32456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11873:13:51",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3738,
                        "src": "11861:25:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 32458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 32457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11894:20:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "11861:54:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 32459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11861:56:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32460,
                  "nodeType": "ExpressionStatement",
                  "src": "11861:56:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32462,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32443,
                          "src": "11934:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 32463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11951:20:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "11934:37:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32467,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "11981:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 32466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11973:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32465,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11973:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11973:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11994:7:51",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "11973:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32461,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9121,
                        9146,
                        9159,
                        9175,
                        9217,
                        9259,
                        9301,
                        9338,
                        9375,
                        9412,
                        6274,
                        6299,
                        6329,
                        6354,
                        6413,
                        6438,
                        6468,
                        6493,
                        7593,
                        7628
                      ],
                      "referencedDeclaration": 6468,
                      "src": "11925:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11925:77:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32471,
                  "nodeType": "ExpressionStatement",
                  "src": "11925:77:51"
                },
                {
                  "assignments": [
                    32473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32473,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "12018:18:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32543,
                      "src": "12010:26:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 32472,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12010:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32479,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 32475,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31402,
                            "src": "12049:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$5045",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 32476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12065:17:51",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5044,
                          "src": "12049:33:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 32477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12049:35:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 32474,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12039:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 32478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12039:46:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12010:75:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32481,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "12098:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32480,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8469,
                        8490,
                        8514,
                        8538
                      ],
                      "referencedDeclaration": 8469,
                      "src": "12093:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12093:15:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32483,
                  "nodeType": "ExpressionStatement",
                  "src": "12093:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32487,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "12437:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32488,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31429,
                        "src": "12445:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32489,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "12469:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32490,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "12480:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 32484,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "12419:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12431:5:51",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3874,
                      "src": "12419:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 32491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12419:79:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32492,
                  "nodeType": "ExpressionStatement",
                  "src": "12419:79:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32494,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32443,
                        "src": "12515:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32497,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "12539:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 32496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12531:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32495,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12531:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12531:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12552:7:51",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12531:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32493,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9121,
                        9146,
                        9159,
                        9175,
                        9217,
                        9259,
                        9301,
                        9338,
                        9375,
                        9412,
                        6274,
                        6299,
                        6329,
                        6354,
                        6413,
                        6438,
                        6468,
                        6493,
                        7593,
                        7628
                      ],
                      "referencedDeclaration": 6468,
                      "src": "12506:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12506:54:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32501,
                  "nodeType": "ExpressionStatement",
                  "src": "12506:54:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 32509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32504,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31402,
                                  "src": "12590:15:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$5045",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 32505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12606:17:51",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5044,
                                "src": "12590:33:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 32506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12590:35:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 32503,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "12580:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 32507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12580:46:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32508,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32473,
                          "src": "12630:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12580:68:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32502,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9071,
                        9085
                      ],
                      "referencedDeclaration": 9071,
                      "src": "12568:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 32510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12568:81:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32511,
                  "nodeType": "ExpressionStatement",
                  "src": "12568:81:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32513,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31411,
                        "src": "12722:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 32512,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8559,
                        8580,
                        8604,
                        8628
                      ],
                      "referencedDeclaration": 8559,
                      "src": "12712:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12712:16:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32515,
                  "nodeType": "ExpressionStatement",
                  "src": "12712:16:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 32519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12752:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 32516,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "12736:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12739:12:51",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12538,
                      "src": "12736:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12736:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32521,
                  "nodeType": "ExpressionStatement",
                  "src": "12736:41:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 32522,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "12785:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 32524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12797:13:51",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3738,
                        "src": "12785:25:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 32526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 32525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12818:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "12785:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 32527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12785:37:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32528,
                  "nodeType": "ExpressionStatement",
                  "src": "12785:37:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 32532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12846:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 32529,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "12830:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12833:12:51",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12538,
                      "src": "12830:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12830:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32534,
                  "nodeType": "ExpressionStatement",
                  "src": "12830:41:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 32540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12914:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 32535,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "12879:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 32537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12891:12:51",
                        "memberName": "addToDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3809,
                        "src": "12879:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 32539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 32538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12911:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "12879:34:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 32541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12879:37:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32542,
                  "nodeType": "ExpressionStatement",
                  "src": "12879:37:51"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "11671:9:51",
            "parameters": {
              "id": 32440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11680:2:51"
            },
            "returnParameters": {
              "id": 32441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11690:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32623,
            "nodeType": "FunctionDefinition",
            "src": "12929:1002:51",
            "nodes": [],
            "body": {
              "id": 32622,
              "nodeType": "Block",
              "src": "12964:967:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32548,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "12978:14:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32622,
                      "src": "12973:19:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32547,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12973:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32554,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 32551,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "13003:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 32550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12995:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 32549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12995:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 32552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12995:20:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 32553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13016:7:51",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12995:28:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12973:50:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32556,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31411,
                        "src": "13086:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 32555,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8469,
                        8490,
                        8514,
                        8538
                      ],
                      "referencedDeclaration": 8469,
                      "src": "13081:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13081:11:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32558,
                  "nodeType": "ExpressionStatement",
                  "src": "13081:11:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 32559,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "13100:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 32561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13112:13:51",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3738,
                        "src": "13100:25:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 32563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 32562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13133:20:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "13100:54:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 32564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13100:56:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32565,
                  "nodeType": "ExpressionStatement",
                  "src": "13100:56:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32567,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32548,
                          "src": "13173:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 32568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13190:20:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "13173:37:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32572,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "13220:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 32571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13212:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32570,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13212:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13212:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13233:7:51",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13212:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32566,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9121,
                        9146,
                        9159,
                        9175,
                        9217,
                        9259,
                        9301,
                        9338,
                        9375,
                        9412,
                        6274,
                        6299,
                        6329,
                        6354,
                        6413,
                        6438,
                        6468,
                        6493,
                        7593,
                        7628
                      ],
                      "referencedDeclaration": 6468,
                      "src": "13164:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13164:77:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32576,
                  "nodeType": "ExpressionStatement",
                  "src": "13164:77:51"
                },
                {
                  "assignments": [
                    32578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32578,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "13257:18:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32622,
                      "src": "13249:26:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 32577,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13249:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32584,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 32580,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31402,
                            "src": "13288:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$5045",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 32581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13304:17:51",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5044,
                          "src": "13288:33:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 32582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13288:35:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 32579,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "13278:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 32583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13278:46:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13249:75:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32586,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "13342:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32585,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8559,
                        8580,
                        8604,
                        8628
                      ],
                      "referencedDeclaration": 8559,
                      "src": "13332:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13332:20:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32588,
                  "nodeType": "ExpressionStatement",
                  "src": "13332:20:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32592,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "13685:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32593,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31429,
                        "src": "13693:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32594,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "13717:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32595,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "13728:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 32589,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "13663:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13675:9:51",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4042,
                      "src": "13663:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 32596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13663:83:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32597,
                  "nodeType": "ExpressionStatement",
                  "src": "13663:83:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32598,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "13754:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13766:5:51",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3883,
                      "src": "13754:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 32601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13754:19:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32602,
                  "nodeType": "ExpressionStatement",
                  "src": "13754:19:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32604,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32548,
                        "src": "13790:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32607,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "13814:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 32606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13806:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32605,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13806:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13806:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13827:7:51",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13806:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32603,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9121,
                        9146,
                        9159,
                        9175,
                        9217,
                        9259,
                        9301,
                        9338,
                        9375,
                        9412,
                        6274,
                        6299,
                        6329,
                        6354,
                        6413,
                        6438,
                        6468,
                        6493,
                        7593,
                        7628
                      ],
                      "referencedDeclaration": 6468,
                      "src": "13781:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 32610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13781:54:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32611,
                  "nodeType": "ExpressionStatement",
                  "src": "13781:54:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 32619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32614,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31402,
                                  "src": "13865:15:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$5045",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 32615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13881:17:51",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5044,
                                "src": "13865:33:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 32616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13865:35:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 32613,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13855:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 32617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13855:46:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32618,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32578,
                          "src": "13905:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "13855:68:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32612,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9071,
                        9085
                      ],
                      "referencedDeclaration": 9071,
                      "src": "13843:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 32620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13843:81:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32621,
                  "nodeType": "ExpressionStatement",
                  "src": "13843:81:51"
                }
              ]
            },
            "functionSelector": "5dcf6be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStakeTwoStep",
            "nameLocation": "12938:16:51",
            "parameters": {
              "id": 32545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12954:2:51"
            },
            "returnParameters": {
              "id": 32546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12964:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32936,
            "nodeType": "FunctionDefinition",
            "src": "21730:2886:51",
            "nodes": [],
            "body": {
              "id": 32935,
              "nodeType": "Block",
              "src": "21776:2840:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32631,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "21789:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32935,
                      "src": "21784:14:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32630,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21784:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32633,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 32632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21801:10:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21784:27:51"
                },
                {
                  "assignments": [
                    32635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32635,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "21824:12:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32935,
                      "src": "21819:17:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32634,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21819:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32644,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 32638,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32625,
                            "src": "21844:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 32637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21839:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32636,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "21839:4:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21839:7:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 32640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21849:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "21839:30:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 32642,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32631,
                      "src": "21872:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21839:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21819:62:51"
                },
                {
                  "assignments": [
                    32646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32646,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "21894:10:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 32935,
                      "src": "21889:15:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32645,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21889:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32650,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 32647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21907:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 32648,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32635,
                      "src": "21930:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21907:35:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21889:53:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 32653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32651,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32625,
                        "src": "21953:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21958:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21953:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 32656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32654,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32627,
                        "src": "21963:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 32655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21967:3:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "21963:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "21953:17:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 32858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32856,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32625,
                        "src": "24046:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24051:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "24046:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32932,
                      "nodeType": "Block",
                      "src": "24189:420:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32878,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "24204:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32877,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8469,
                                8490,
                                8514,
                                8538
                              ],
                              "referencedDeclaration": 8469,
                              "src": "24199:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24199:11:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32880,
                          "nodeType": "ExpressionStatement",
                          "src": "24199:11:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32881,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "24220:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24232:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "24220:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32884,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32635,
                                  "src": "24253:12:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "24220:46:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24220:48:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32887,
                          "nodeType": "ExpressionStatement",
                          "src": "24220:48:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32889,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31417,
                                "src": "24283:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32888,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8469,
                                8490,
                                8514,
                                8538
                              ],
                              "referencedDeclaration": 8469,
                              "src": "24278:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24278:9:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32891,
                          "nodeType": "ExpressionStatement",
                          "src": "24278:9:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32892,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "24297:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24309:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "24297:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32895,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32646,
                                  "src": "24330:10:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "24297:44:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24297:46:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32898,
                          "nodeType": "ExpressionStatement",
                          "src": "24297:46:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32900,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31405,
                                "src": "24363:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32899,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "24353:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24353:20:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32902,
                          "nodeType": "ExpressionStatement",
                          "src": "24353:20:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32906,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31426,
                                "src": "24401:6:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 32907,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31429,
                                "src": "24409:22:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 32908,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31432,
                                "src": "24433:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 32909,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31435,
                                "src": "24444:17:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 32903,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "24383:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24395:5:51",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3874,
                              "src": "24383:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 32910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24383:79:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32911,
                          "nodeType": "ExpressionStatement",
                          "src": "24383:79:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32917,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32627,
                                "src": "24502:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 32914,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "24480:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 32913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "24472:8:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 32912,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24472:8:51",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 32915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24472:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 32916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24493:8:51",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "24472:29:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 32918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24472:32:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32919,
                          "nodeType": "ExpressionStatement",
                          "src": "24472:32:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                "id": 32923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24530:39:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                },
                                "value": "must be greater than 100 wei to claim"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                }
                              ],
                              "expression": {
                                "id": 32920,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "24514:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24517:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "24514:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24514:56:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32925,
                          "nodeType": "ExpressionStatement",
                          "src": "24514:56:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 32929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24598:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 32926,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "24580:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24592:5:51",
                              "memberName": "claim",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4418,
                              "src": "24580:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) external"
                              }
                            },
                            "id": 32930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24580:20:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32931,
                          "nodeType": "ExpressionStatement",
                          "src": "24580:20:51"
                        }
                      ]
                    },
                    "id": 32933,
                    "nodeType": "IfStatement",
                    "src": "24043:566:51",
                    "trueBody": {
                      "id": 32876,
                      "nodeType": "Block",
                      "src": "24054:129:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24080:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32859,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "24064:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24067:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "24064:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24064:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32864,
                          "nodeType": "ExpressionStatement",
                          "src": "24064:37:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32866,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "24121:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32865,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "24111:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24111:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32868,
                          "nodeType": "ExpressionStatement",
                          "src": "24111:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32869,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "24137:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24149:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "24137:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32872,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32625,
                                  "src": "24170:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "24137:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24137:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32875,
                          "nodeType": "ExpressionStatement",
                          "src": "24137:37:51"
                        }
                      ]
                    }
                  },
                  "id": 32934,
                  "nodeType": "IfStatement",
                  "src": "21950:2659:51",
                  "trueBody": {
                    "id": 32855,
                    "nodeType": "Block",
                    "src": "21971:2066:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32659,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "21986:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32658,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8469,
                              8490,
                              8514,
                              8538
                            ],
                            "referencedDeclaration": 8469,
                            "src": "21981:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21981:11:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32661,
                        "nodeType": "ExpressionStatement",
                        "src": "21981:11:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32662,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "22002:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22014:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "22002:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32665,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32635,
                                "src": "22035:12:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "22002:46:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22002:48:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32668,
                        "nodeType": "ExpressionStatement",
                        "src": "22002:48:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32670,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31417,
                              "src": "22065:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32669,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8469,
                              8490,
                              8514,
                              8538
                            ],
                            "referencedDeclaration": 8469,
                            "src": "22060:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22060:9:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32672,
                        "nodeType": "ExpressionStatement",
                        "src": "22060:9:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32673,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "22079:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22091:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "22079:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32676,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32646,
                                "src": "22112:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "22079:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22079:46:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32679,
                        "nodeType": "ExpressionStatement",
                        "src": "22079:46:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32685,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32627,
                              "src": "22165:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32682,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "22143:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 32681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22135:8:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 32680,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22135:8:51",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 32683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22135:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 32684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22156:8:51",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "22135:29:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 32686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22135:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32687,
                        "nodeType": "ExpressionStatement",
                        "src": "22135:32:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365207769746864726177207768656e206e6f74207374616b6564",
                              "id": 32691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22193:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              },
                              "value": "use withdraw when not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              }
                            ],
                            "expression": {
                              "id": 32688,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7771,
                              "src": "22177:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13052",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22180:12:51",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12538,
                            "src": "22177:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 32692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22177:47:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32693,
                        "nodeType": "ExpressionStatement",
                        "src": "22177:47:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 32697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22252:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 32694,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "22234:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22246:5:51",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4418,
                            "src": "22234:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 32698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22234:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32699,
                        "nodeType": "ExpressionStatement",
                        "src": "22234:20:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32701,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31405,
                              "src": "22269:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32700,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8469,
                              8490,
                              8514,
                              8538
                            ],
                            "referencedDeclaration": 8469,
                            "src": "22264:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22264:15:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32703,
                        "nodeType": "ExpressionStatement",
                        "src": "22264:15:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32707,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31426,
                              "src": "22307:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 32708,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31429,
                              "src": "22315:22:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 32709,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31432,
                              "src": "22339:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 32710,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31435,
                              "src": "22350:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 32704,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "22289:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22301:5:51",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3874,
                            "src": "22289:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 32711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22289:79:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32712,
                        "nodeType": "ExpressionStatement",
                        "src": "22289:79:51"
                      },
                      {
                        "assignments": [
                          32714
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32714,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "22383:12:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32855,
                            "src": "22378:17:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32713,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22378:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32720,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32717,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "22406:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22398:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32715,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22398:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22398:14:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 32719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "22413:7:51",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "22398:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22378:42:51"
                      },
                      {
                        "assignments": [
                          32722
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32722,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "22435:10:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32855,
                            "src": "22430:15:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32721,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22430:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32728,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32725,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31417,
                                "src": "22456:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22448:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32723,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22448:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22448:12:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 32727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "22461:7:51",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "22448:20:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22430:38:51"
                      },
                      {
                        "assignments": [
                          32730
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32730,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "22483:10:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32855,
                            "src": "22478:15:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32729,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22478:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32741,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 32738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 32733,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31369,
                                        "src": "22505:11:51",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                                          "typeString": "contract StakingPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                                          "typeString": "contract StakingPool"
                                        }
                                      ],
                                      "id": 32732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "22497:7:51",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 32731,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "22497:7:51",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 32734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22497:20:51",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 32735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22518:7:51",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "22497:28:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 32736,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22496:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 32737,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32635,
                              "src": "22529:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22496:45:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 32739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22544:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "22496:68:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22478:86:51"
                      },
                      {
                        "assignments": [
                          32743
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32743,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "22579:8:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32855,
                            "src": "22574:13:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32742,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22574:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32752,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 32746,
                                      "name": "stakingPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31369,
                                      "src": "22599:11:51",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_StakingPool_$4926",
                                        "typeString": "contract StakingPool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_StakingPool_$4926",
                                        "typeString": "contract StakingPool"
                                      }
                                    ],
                                    "id": 32745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22591:7:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 32744,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22591:7:51",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 32747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22591:20:51",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 32748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "22612:7:51",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "22591:28:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 32749,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "22590:30:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 32750,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32730,
                            "src": "22623:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22590:43:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22574:59:51"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 32753,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32730,
                            "src": "22958:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 32754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22972:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "22958:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 32760,
                        "nodeType": "IfStatement",
                        "src": "22955:34:51",
                        "trueBody": {
                          "expression": {
                            "id": 32758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 32756,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32730,
                              "src": "22975:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 32757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22988:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "22975:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 32759,
                          "nodeType": "ExpressionStatement",
                          "src": "22975:14:51"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 32761,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32743,
                            "src": "23002:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 32762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23014:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "23002:13:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 32768,
                        "nodeType": "IfStatement",
                        "src": "22999:29:51",
                        "trueBody": {
                          "expression": {
                            "id": 32766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 32764,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32743,
                              "src": "23017:8:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 32765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23027:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "23017:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 32767,
                          "nodeType": "ExpressionStatement",
                          "src": "23017:11:51"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 32772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23065:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 32769,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "23047:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23059:5:51",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4418,
                            "src": "23047:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 32773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23047:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32774,
                        "nodeType": "ExpressionStatement",
                        "src": "23047:20:51"
                      },
                      {
                        "assignments": [
                          32776
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32776,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "23082:20:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32855,
                            "src": "23077:25:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32775,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "23077:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32780,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 32777,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32714,
                            "src": "23105:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 32778,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32730,
                            "src": "23120:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23105:25:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23077:53:51"
                      },
                      {
                        "expression": {
                          "id": 32787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32781,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32714,
                            "src": "23140:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32784,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31411,
                                  "src": "23163:5:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23155:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 32782,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23155:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 32785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23155:14:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 32786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23170:7:51",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "23155:22:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23140:37:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 32788,
                        "nodeType": "ExpressionStatement",
                        "src": "23140:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32790,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32714,
                              "src": "23317:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32791,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32776,
                              "src": "23331:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 32792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23353:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "616c69636542616c616e636520706f73742d636c61696d2077726f6e67",
                              "id": 32793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23356:31:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              },
                              "value": "aliceBalance post-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              }
                            ],
                            "id": 32789,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9481,
                              9517,
                              9567,
                              9603
                            ],
                            "referencedDeclaration": 9517,
                            "src": "23299:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 32794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23299:89:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32795,
                        "nodeType": "ExpressionStatement",
                        "src": "23299:89:51"
                      },
                      {
                        "assignments": [
                          32797
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32797,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "23410:18:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 32855,
                            "src": "23405:23:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32796,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "23405:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32801,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 32798,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32722,
                            "src": "23431:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 32799,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32743,
                            "src": "23444:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23431:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23405:47:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32803,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32722,
                              "src": "23502:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 32806,
                                    "name": "bob",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31417,
                                    "src": "23522:3:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 32805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23514:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 32804,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23514:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 32807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23514:12:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 32808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23527:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "23514:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "626f6242616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 32809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23536:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              },
                              "value": "bobBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              }
                            ],
                            "id": 32802,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6493,
                            "src": "23493:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23493:72:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32811,
                        "nodeType": "ExpressionStatement",
                        "src": "23493:72:51"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32814,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "23585:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 32813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23577:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 32812,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23577:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 32815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23577:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 32816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23598:7:51",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "23577:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 32817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23609:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "23577:35:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 32853,
                          "nodeType": "Block",
                          "src": "23731:297:51",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 32835,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23761:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "expression": {
                                    "id": 32832,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "23743:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "23755:5:51",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4418,
                                  "src": "23743:17:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 32836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23743:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 32837,
                              "nodeType": "ExpressionStatement",
                              "src": "23743:20:51"
                            },
                            {
                              "expression": {
                                "id": 32844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 32838,
                                  "name": "bobBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32722,
                                  "src": "23775:10:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 32841,
                                        "name": "bob",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31417,
                                        "src": "23796:3:51",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 32840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "23788:7:51",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 32839,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "23788:7:51",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 32842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "23788:12:51",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 32843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "23801:7:51",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "23788:20:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23775:33:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 32845,
                              "nodeType": "ExpressionStatement",
                              "src": "23775:33:51"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 32847,
                                    "name": "bobBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32722,
                                    "src": "23952:10:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 32848,
                                    "name": "bobBalanceExpected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32797,
                                    "src": "23964:18:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 32849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23984:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "626f6242616c616e636520706f73742d636c61696d2077726f6e67",
                                    "id": 32850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23987:29:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    },
                                    "value": "bobBalance post-claim wrong"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    }
                                  ],
                                  "id": 32846,
                                  "name": "assertApproxEqAbs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9481,
                                    9517,
                                    9567,
                                    9603
                                  ],
                                  "referencedDeclaration": 9517,
                                  "src": "23934:17:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,string memory)"
                                  }
                                },
                                "id": 32851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23934:83:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 32852,
                              "nodeType": "ExpressionStatement",
                              "src": "23934:83:51"
                            }
                          ]
                        },
                        "id": 32854,
                        "nodeType": "IfStatement",
                        "src": "23574:454:51",
                        "trueBody": {
                          "id": 32831,
                          "nodeType": "Block",
                          "src": "23614:111:51",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                    "id": 32822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23642:39:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    },
                                    "value": "must be greater than 100 wei to claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 32819,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7771,
                                    "src": "23626:2:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$13052",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 32821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "23629:12:51",
                                  "memberName": "expectRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12538,
                                  "src": "23626:15:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) external"
                                  }
                                },
                                "id": 32823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23626:56:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 32824,
                              "nodeType": "ExpressionStatement",
                              "src": "23626:56:51"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 32828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23712:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "expression": {
                                    "id": 32825,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "23694:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "23706:5:51",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4418,
                                  "src": "23694:17:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 32829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23694:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 32830,
                              "nodeType": "ExpressionStatement",
                              "src": "23694:20:51"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5c97929d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "21739:9:51",
            "parameters": {
              "id": 32628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32625,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "21756:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32936,
                  "src": "21749:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 32624,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21749:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32627,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "21766:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32936,
                  "src": "21759:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 32626,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21759:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21748:20:51"
            },
            "returnParameters": {
              "id": 32629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21776:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32974,
            "nodeType": "FunctionDefinition",
            "src": "24622:393:51",
            "nodes": [],
            "body": {
              "id": 32973,
              "nodeType": "Block",
              "src": "24662:353:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32940,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "24680:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32939,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8559,
                        8580,
                        8604,
                        8628
                      ],
                      "referencedDeclaration": 8559,
                      "src": "24670:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24670:20:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32942,
                  "nodeType": "ExpressionStatement",
                  "src": "24670:20:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 32946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24714:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 32943,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "24698:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24701:12:51",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12538,
                      "src": "24698:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24698:49:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32948,
                  "nodeType": "ExpressionStatement",
                  "src": "24698:49:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32952,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "24777:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 32953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24785:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 32954,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "24822:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32955,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "24833:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 32949,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "24755:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24767:9:51",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4042,
                      "src": "24755:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 32956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24755:96:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32957,
                  "nodeType": "ExpressionStatement",
                  "src": "24755:96:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 32961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24875:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 32958,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "24859:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24862:12:51",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12538,
                      "src": "24859:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24859:49:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32963,
                  "nodeType": "ExpressionStatement",
                  "src": "24859:49:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32967,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "24934:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 32968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24942:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 32969,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "24979:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32970,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "24990:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 32964,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "24916:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24928:5:51",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3874,
                      "src": "24916:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 32971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24916:92:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32972,
                  "nodeType": "ExpressionStatement",
                  "src": "24916:92:51"
                }
              ]
            },
            "functionSelector": "8adcff77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBadWithdrawalCred",
            "nameLocation": "24631:21:51",
            "parameters": {
              "id": 32937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24652:2:51"
            },
            "returnParameters": {
              "id": 32938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24662:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33006,
            "nodeType": "FunctionDefinition",
            "src": "25021:295:51",
            "nodes": [],
            "body": {
              "id": 33005,
              "nodeType": "Block",
              "src": "25058:258:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32978,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "25076:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32977,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8559,
                        8580,
                        8604,
                        8628
                      ],
                      "referencedDeclaration": 8559,
                      "src": "25066:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25066:20:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32980,
                  "nodeType": "ExpressionStatement",
                  "src": "25066:20:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32984,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "25116:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32985,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31429,
                        "src": "25124:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32986,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "25148:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 32987,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "25159:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 32981,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "25094:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25106:9:51",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4042,
                      "src": "25094:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 32988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25094:83:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32989,
                  "nodeType": "ExpressionStatement",
                  "src": "25094:83:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7075624b6579206d69736d61746368",
                        "id": 32993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25201:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        },
                        "value": "pubKey mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 32990,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "25185:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25188:12:51",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12538,
                      "src": "25185:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 32994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25185:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32995,
                  "nodeType": "ExpressionStatement",
                  "src": "25185:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "dead",
                        "id": 32999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25245:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        "value": "ޭ"
                      },
                      {
                        "id": 33000,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31429,
                        "src": "25256:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33001,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "25280:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33002,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "25291:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 32996,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "25227:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25239:5:51",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3874,
                      "src": "25227:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25227:82:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33004,
                  "nodeType": "ExpressionStatement",
                  "src": "25227:82:51"
                }
              ]
            },
            "functionSelector": "94892dda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPubKeyMismatch",
            "nameLocation": "25030:18:51",
            "parameters": {
              "id": 32975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25048:2:51"
            },
            "returnParameters": {
              "id": 32976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25058:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33394,
            "nodeType": "FunctionDefinition",
            "src": "26761:3433:51",
            "nodes": [],
            "body": {
              "id": 33393,
              "nodeType": "Block",
              "src": "26806:3388:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33014,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "26819:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 33393,
                      "src": "26814:14:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33013,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26814:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33016,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 33015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "26831:10:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26814:27:51"
                },
                {
                  "assignments": [
                    33018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33018,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "26854:12:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 33393,
                      "src": "26849:17:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33017,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26849:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33027,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33021,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33008,
                            "src": "26874:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 33020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26869:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33019,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "26869:4:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26869:7:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 33023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26879:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "26869:30:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 33025,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33014,
                      "src": "26902:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26869:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26849:62:51"
                },
                {
                  "assignments": [
                    33029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33029,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "26924:10:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 33393,
                      "src": "26919:15:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33028,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26919:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33033,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 33030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26937:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 33031,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33018,
                      "src": "26960:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26937:35:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26919:53:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33034,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33008,
                        "src": "26983:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26988:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "26983:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33037,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33010,
                        "src": "26993:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 33038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26997:3:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "26993:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "26983:17:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33314,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33008,
                        "src": "29624:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29629:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "29624:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33390,
                      "nodeType": "Block",
                      "src": "29767:420:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33336,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "29782:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33335,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8469,
                                8490,
                                8514,
                                8538
                              ],
                              "referencedDeclaration": 8469,
                              "src": "29777:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29777:11:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33338,
                          "nodeType": "ExpressionStatement",
                          "src": "29777:11:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33339,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "29798:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "29810:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "29798:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33342,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33018,
                                  "src": "29831:12:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "29798:46:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29798:48:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33345,
                          "nodeType": "ExpressionStatement",
                          "src": "29798:48:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33347,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31417,
                                "src": "29861:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33346,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8469,
                                8490,
                                8514,
                                8538
                              ],
                              "referencedDeclaration": 8469,
                              "src": "29856:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29856:9:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33349,
                          "nodeType": "ExpressionStatement",
                          "src": "29856:9:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33350,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "29875:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "29887:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "29875:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33353,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33029,
                                  "src": "29908:10:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "29875:44:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29875:46:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33356,
                          "nodeType": "ExpressionStatement",
                          "src": "29875:46:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33358,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31405,
                                "src": "29941:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 33357,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "29931:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29931:20:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33360,
                          "nodeType": "ExpressionStatement",
                          "src": "29931:20:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33364,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31426,
                                "src": "29979:6:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33365,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31429,
                                "src": "29987:22:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33366,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31432,
                                "src": "30011:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33367,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31435,
                                "src": "30022:17:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 33361,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "29961:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "29973:5:51",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3874,
                              "src": "29961:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 33368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29961:79:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33369,
                          "nodeType": "ExpressionStatement",
                          "src": "29961:79:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33375,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33010,
                                "src": "30080:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33372,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "30058:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "30050:8:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 33370,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "30050:8:51",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30050:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 33374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "30071:8:51",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "30050:29:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 33376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30050:32:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33377,
                          "nodeType": "ExpressionStatement",
                          "src": "30050:32:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                "id": 33381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30108:39:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                },
                                "value": "must be greater than 100 wei to claim"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                }
                              ],
                              "expression": {
                                "id": 33378,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "30092:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "30095:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "30092:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30092:56:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33383,
                          "nodeType": "ExpressionStatement",
                          "src": "30092:56:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 33387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30176:1:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 33384,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "30158:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "30170:5:51",
                              "memberName": "claim",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4418,
                              "src": "30158:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) external"
                              }
                            },
                            "id": 33388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30158:20:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33389,
                          "nodeType": "ExpressionStatement",
                          "src": "30158:20:51"
                        }
                      ]
                    },
                    "id": 33391,
                    "nodeType": "IfStatement",
                    "src": "29621:566:51",
                    "trueBody": {
                      "id": 33334,
                      "nodeType": "Block",
                      "src": "29632:129:51",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29658:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33317,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7771,
                                "src": "29642:2:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$13052",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "29645:12:51",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12538,
                              "src": "29642:15:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29642:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33322,
                          "nodeType": "ExpressionStatement",
                          "src": "29642:37:51"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33324,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "29699:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33323,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8559,
                                8580,
                                8604,
                                8628
                              ],
                              "referencedDeclaration": 8559,
                              "src": "29689:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29689:16:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33326,
                          "nodeType": "ExpressionStatement",
                          "src": "29689:16:51"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33327,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "29715:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "29727:13:51",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3738,
                                "src": "29715:25:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33330,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33008,
                                  "src": "29748:1:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "29715:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29715:37:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33333,
                          "nodeType": "ExpressionStatement",
                          "src": "29715:37:51"
                        }
                      ]
                    }
                  },
                  "id": 33392,
                  "nodeType": "IfStatement",
                  "src": "26980:3207:51",
                  "trueBody": {
                    "id": 33313,
                    "nodeType": "Block",
                    "src": "27001:2614:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33044,
                              "name": "feeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31423,
                              "src": "27032:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "35",
                              "id": 33045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27046:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              }
                            ],
                            "expression": {
                              "id": 33041,
                              "name": "frensManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31351,
                              "src": "27011:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensManager_$1257",
                                "typeString": "contract FrensManager"
                              }
                            },
                            "id": 33043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27024:7:51",
                            "memberName": "setFees",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1121,
                            "src": "27011:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 33046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27011:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33047,
                        "nodeType": "ExpressionStatement",
                        "src": "27011:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33049,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "27063:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33048,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8469,
                              8490,
                              8514,
                              8538
                            ],
                            "referencedDeclaration": 8469,
                            "src": "27058:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27058:11:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33051,
                        "nodeType": "ExpressionStatement",
                        "src": "27058:11:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33052,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "27079:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "27091:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "27079:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33055,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33018,
                                "src": "27112:12:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "27079:46:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27079:48:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33058,
                        "nodeType": "ExpressionStatement",
                        "src": "27079:48:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33060,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31417,
                              "src": "27142:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33059,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8469,
                              8490,
                              8514,
                              8538
                            ],
                            "referencedDeclaration": 8469,
                            "src": "27137:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27137:9:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33062,
                        "nodeType": "ExpressionStatement",
                        "src": "27137:9:51"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33063,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31369,
                                "src": "27156:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4926",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "27168:13:51",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "27156:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33066,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33029,
                                "src": "27189:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "27156:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27156:46:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33069,
                        "nodeType": "ExpressionStatement",
                        "src": "27156:46:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33075,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33010,
                              "src": "27242:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33072,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "27220:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "27212:8:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 33070,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "27212:8:51",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27212:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 33074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27233:8:51",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "27212:29:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27212:32:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33077,
                        "nodeType": "ExpressionStatement",
                        "src": "27212:32:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365207769746864726177207768656e206e6f74207374616b6564",
                              "id": 33081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27270:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              },
                              "value": "use withdraw when not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              }
                            ],
                            "expression": {
                              "id": 33078,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7771,
                              "src": "27254:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13052",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27257:12:51",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12538,
                            "src": "27254:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 33082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27254:47:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33083,
                        "nodeType": "ExpressionStatement",
                        "src": "27254:47:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27329:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33084,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "27311:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27323:5:51",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4418,
                            "src": "27311:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27311:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33089,
                        "nodeType": "ExpressionStatement",
                        "src": "27311:20:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33091,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31405,
                              "src": "27346:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33090,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8469,
                              8490,
                              8514,
                              8538
                            ],
                            "referencedDeclaration": 8469,
                            "src": "27341:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27341:15:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33093,
                        "nodeType": "ExpressionStatement",
                        "src": "27341:15:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33097,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31426,
                              "src": "27384:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33098,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31429,
                              "src": "27392:22:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33099,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31432,
                              "src": "27416:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33100,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31435,
                              "src": "27427:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 33094,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "27366:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27378:5:51",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3874,
                            "src": "27366:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 33101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27366:79:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33102,
                        "nodeType": "ExpressionStatement",
                        "src": "27366:79:51"
                      },
                      {
                        "assignments": [
                          33104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33104,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "27460:11:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27455:16:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33103,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27455:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33111,
                        "initialValue": {
                          "components": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33107,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "27483:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "27475:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33105,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27475:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27475:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "27496:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "27475:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 33110,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "27474:30:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27455:49:51"
                      },
                      {
                        "assignments": [
                          33113
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33113,
                            "mutability": "mutable",
                            "name": "fees",
                            "nameLocation": "27519:4:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27514:9:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33112,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27514:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33119,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33114,
                              "name": "poolBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33104,
                              "src": "27526:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 33115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27540:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "27526:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27544:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "27526:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27514:33:51"
                      },
                      {
                        "assignments": [
                          33121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33121,
                            "mutability": "mutable",
                            "name": "poolBalanceMinusFees",
                            "nameLocation": "27562:20:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27557:25:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33120,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27557:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33125,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33122,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33104,
                            "src": "27585:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33123,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33113,
                            "src": "27599:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27585:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27557:46:51"
                      },
                      {
                        "assignments": [
                          33127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33127,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "27618:12:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27613:17:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33126,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27613:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33133,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33130,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31411,
                                "src": "27641:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "27633:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33128,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "27633:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27633:14:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "27648:7:51",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "27633:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27613:42:51"
                      },
                      {
                        "assignments": [
                          33135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33135,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "27670:10:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27665:15:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33134,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27665:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33141,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33138,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31417,
                                "src": "27691:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "27683:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33136,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "27683:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27683:12:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "27696:7:51",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "27683:20:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27665:38:51"
                      },
                      {
                        "assignments": [
                          33143
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33143,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "27718:10:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27713:15:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33142,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27713:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33149,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33144,
                              "name": "poolBalanceMinusFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33121,
                              "src": "27731:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 33145,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33018,
                              "src": "27754:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "27731:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 33147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27769:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "27731:58:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27713:76:51"
                      },
                      {
                        "assignments": [
                          33151
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33151,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "27804:8:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "27799:13:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33150,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27799:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33155,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33152,
                            "name": "poolBalanceMinusFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33121,
                            "src": "27815:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33153,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33143,
                            "src": "27838:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27815:33:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27799:49:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "666565526563697069656e742e62616c616e6365",
                              "id": 33159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27870:22:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f76582784778f46f3bed3fcb7a150312e048bdb09582c48e016494f237918c49",
                                "typeString": "literal_string \"feeRecipient.balance\""
                              },
                              "value": "feeRecipient.balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33162,
                                    "name": "feeRecipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31423,
                                    "src": "27902:12:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "27894:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33160,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27894:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27894:21:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "27917:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "27894:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f76582784778f46f3bed3fcb7a150312e048bdb09582c48e016494f237918c49",
                                "typeString": "literal_string \"feeRecipient.balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33156,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21116,
                              "src": "27858:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$21116_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27866:3:51",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13760,
                            "src": "27858:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27858:67:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33166,
                        "nodeType": "ExpressionStatement",
                        "src": "27858:67:51"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33167,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33143,
                            "src": "28146:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28160:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "28146:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33174,
                        "nodeType": "IfStatement",
                        "src": "28143:34:51",
                        "trueBody": {
                          "expression": {
                            "id": 33172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33170,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33143,
                              "src": "28163:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28176:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "28163:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33173,
                          "nodeType": "ExpressionStatement",
                          "src": "28163:14:51"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33175,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33151,
                            "src": "28190:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28202:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "28190:13:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33182,
                        "nodeType": "IfStatement",
                        "src": "28187:29:51",
                        "trueBody": {
                          "expression": {
                            "id": 33180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33178,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33151,
                              "src": "28205:8:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28215:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "28205:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33181,
                          "nodeType": "ExpressionStatement",
                          "src": "28205:11:51"
                        }
                      },
                      {
                        "assignments": [
                          33184
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33184,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "28240:20:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "28235:25:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33183,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "28235:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33188,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33185,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33127,
                            "src": "28263:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33186,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33143,
                            "src": "28278:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28263:25:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28235:53:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33190,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33127,
                              "src": "28383:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33193,
                                    "name": "alice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31411,
                                    "src": "28405:5:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28397:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33191,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28397:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28397:14:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "28412:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "28397:22:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "616c69636542616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28421:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_02de6246c7759ee4954d513dce217e7eebe13abc69149dc3ad46356b81057684",
                                "typeString": "literal_string \"aliceBalance pre-claim wrong\""
                              },
                              "value": "aliceBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_02de6246c7759ee4954d513dce217e7eebe13abc69149dc3ad46356b81057684",
                                "typeString": "literal_string \"aliceBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33189,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6493,
                            "src": "28374:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28374:78:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33198,
                        "nodeType": "ExpressionStatement",
                        "src": "28374:78:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33202,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31411,
                              "src": "28471:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33199,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7771,
                              "src": "28462:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13052",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28465:5:51",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12497,
                            "src": "28462:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 33203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28462:15:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33204,
                        "nodeType": "ExpressionStatement",
                        "src": "28462:15:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "7374616b696e6720506f6f6c2062616c616e6365",
                              "id": 33208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28499:22:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6607f890064ef28da9da8fd2c9c0382afac42c27c3a3ad066efbdd719c7e5a79",
                                "typeString": "literal_string \"staking Pool balance\""
                              },
                              "value": "staking Pool balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33211,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "28531:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28523:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33209,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28523:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28523:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "28544:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "28523:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6607f890064ef28da9da8fd2c9c0382afac42c27c3a3ad066efbdd719c7e5a79",
                                "typeString": "literal_string \"staking Pool balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33205,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21116,
                              "src": "28487:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$21116_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28495:3:51",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13760,
                            "src": "28487:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28487:65:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33215,
                        "nodeType": "ExpressionStatement",
                        "src": "28487:65:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28580:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33216,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31369,
                              "src": "28562:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4926",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28574:5:51",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4418,
                            "src": "28562:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28562:20:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33221,
                        "nodeType": "ExpressionStatement",
                        "src": "28562:20:51"
                      },
                      {
                        "expression": {
                          "id": 33228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33222,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33127,
                            "src": "28592:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33225,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31411,
                                  "src": "28615:5:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "28607:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33223,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "28607:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28607:14:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28622:7:51",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "28607:22:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28592:37:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33229,
                        "nodeType": "ExpressionStatement",
                        "src": "28592:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33231,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33127,
                              "src": "28769:12:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33232,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33184,
                              "src": "28783:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28805:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "616c69636542616c616e636520706f73742d636c61696d2077726f6e67",
                              "id": 33234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28808:31:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              },
                              "value": "aliceBalance post-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              }
                            ],
                            "id": 33230,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9481,
                              9517,
                              9567,
                              9603
                            ],
                            "referencedDeclaration": 9517,
                            "src": "28751:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28751:89:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33236,
                        "nodeType": "ExpressionStatement",
                        "src": "28751:89:51"
                      },
                      {
                        "assignments": [
                          33238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33238,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "28862:18:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 33313,
                            "src": "28857:23:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33237,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "28857:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33242,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33239,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33135,
                            "src": "28883:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33240,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33151,
                            "src": "28896:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28883:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28857:47:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33244,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33135,
                              "src": "28954:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33247,
                                    "name": "bob",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31417,
                                    "src": "28974:3:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28966:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33245,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28966:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28966:12:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "28979:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "28966:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "626f6242616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28988:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              },
                              "value": "bobBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33243,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9121,
                              9146,
                              9159,
                              9175,
                              9217,
                              9259,
                              9301,
                              9338,
                              9375,
                              9412,
                              6274,
                              6299,
                              6329,
                              6354,
                              6413,
                              6438,
                              6468,
                              6493,
                              7593,
                              7628
                            ],
                            "referencedDeclaration": 6493,
                            "src": "28945:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28945:72:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33252,
                        "nodeType": "ExpressionStatement",
                        "src": "28945:72:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33256,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31417,
                              "src": "29036:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33253,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7771,
                              "src": "29027:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13052",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "29030:5:51",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12497,
                            "src": "29027:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 33257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29027:13:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33258,
                        "nodeType": "ExpressionStatement",
                        "src": "29027:13:51"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33261,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31369,
                                  "src": "29061:11:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4926",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "29053:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33259,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "29053:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29053:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "29074:7:51",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "29053:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29085:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "29053:35:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 33300,
                          "nodeType": "Block",
                          "src": "29207:297:51",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 33282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29237:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33279,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "29219:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "29231:5:51",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4418,
                                  "src": "29219:17:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29219:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33284,
                              "nodeType": "ExpressionStatement",
                              "src": "29219:20:51"
                            },
                            {
                              "expression": {
                                "id": 33291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 33285,
                                  "name": "bobBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33135,
                                  "src": "29251:10:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33288,
                                        "name": "bob",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31417,
                                        "src": "29272:3:51",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 33287,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "29264:7:51",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33286,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "29264:7:51",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "29264:12:51",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 33290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "29277:7:51",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "29264:20:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "29251:33:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33292,
                              "nodeType": "ExpressionStatement",
                              "src": "29251:33:51"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33294,
                                    "name": "bobBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33135,
                                    "src": "29428:10:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 33295,
                                    "name": "bobBalanceExpected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33238,
                                    "src": "29440:18:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 33296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29460:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "626f6242616c616e636520706f73742d636c61696d2077726f6e67",
                                    "id": 33297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29463:29:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    },
                                    "value": "bobBalance post-claim wrong"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    }
                                  ],
                                  "id": 33293,
                                  "name": "assertApproxEqAbs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9481,
                                    9517,
                                    9567,
                                    9603
                                  ],
                                  "referencedDeclaration": 9517,
                                  "src": "29410:17:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,string memory)"
                                  }
                                },
                                "id": 33298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29410:83:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33299,
                              "nodeType": "ExpressionStatement",
                              "src": "29410:83:51"
                            }
                          ]
                        },
                        "id": 33301,
                        "nodeType": "IfStatement",
                        "src": "29050:454:51",
                        "trueBody": {
                          "id": 33278,
                          "nodeType": "Block",
                          "src": "29090:111:51",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                    "id": 33269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29118:39:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    },
                                    "value": "must be greater than 100 wei to claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 33266,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7771,
                                    "src": "29102:2:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$13052",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 33268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "29105:12:51",
                                  "memberName": "expectRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12538,
                                  "src": "29102:15:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) external"
                                  }
                                },
                                "id": 33270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29102:56:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33271,
                              "nodeType": "ExpressionStatement",
                              "src": "29102:56:51"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 33275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29188:1:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33272,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31369,
                                    "src": "29170:11:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4926",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "29182:5:51",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4418,
                                  "src": "29170:17:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29170:20:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33277,
                              "nodeType": "ExpressionStatement",
                              "src": "29170:20:51"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33303,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33113,
                              "src": "29531:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33306,
                                    "name": "feeRecipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31423,
                                    "src": "29545:12:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "29537:7:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33304,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "29537:7:51",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29537:21:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "29559:7:51",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "29537:29:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29568:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "66656520726563697069656e742062616c616e636520696e636f7272656374",
                              "id": 33310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29571:33:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_395214c4be5535de3e0f29b75fce788733289f427fd8855be09d70ee263532e7",
                                "typeString": "literal_string \"fee recipient balance incorrect\""
                              },
                              "value": "fee recipient balance incorrect"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_395214c4be5535de3e0f29b75fce788733289f427fd8855be09d70ee263532e7",
                                "typeString": "literal_string \"fee recipient balance incorrect\""
                              }
                            ],
                            "id": 33302,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9481,
                              9517,
                              9567,
                              9603
                            ],
                            "referencedDeclaration": 9517,
                            "src": "29513:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29513:92:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33312,
                        "nodeType": "ExpressionStatement",
                        "src": "29513:92:51"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5efae371",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFees",
            "nameLocation": "26770:8:51",
            "parameters": {
              "id": 33011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33008,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "26786:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33394,
                  "src": "26779:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33007,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26779:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33010,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "26796:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33394,
                  "src": "26789:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33009,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26789:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26778:20:51"
            },
            "returnParameters": {
              "id": 33012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26806:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33475,
            "nodeType": "FunctionDefinition",
            "src": "30200:526:51",
            "nodes": [],
            "body": {
              "id": 33474,
              "nodeType": "Block",
              "src": "30227:499:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33398,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31411,
                        "src": "30240:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33397,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8469,
                        8490,
                        8514,
                        8538
                      ],
                      "referencedDeclaration": 8469,
                      "src": "30235:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30235:11:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33400,
                  "nodeType": "ExpressionStatement",
                  "src": "30235:11:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33401,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31369,
                          "src": "30254:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4926",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "30266:13:51",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3738,
                        "src": "30254:25:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332",
                          "id": 33404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30287:8:51",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        }
                      ],
                      "src": "30254:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30254:44:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33407,
                  "nodeType": "ExpressionStatement",
                  "src": "30254:44:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33411,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31405,
                        "src": "30315:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33408,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "30306:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30309:5:51",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12497,
                      "src": "30306:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 33412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30306:19:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33413,
                  "nodeType": "ExpressionStatement",
                  "src": "30306:19:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33417,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "30351:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33418,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31429,
                        "src": "30359:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33419,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31432,
                        "src": "30383:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33420,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31435,
                        "src": "30394:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33414,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "30333:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30345:5:51",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3874,
                      "src": "30333:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30333:79:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33422,
                  "nodeType": "ExpressionStatement",
                  "src": "30333:79:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33428,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "30437:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 33427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "30429:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33426,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "30429:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30429:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33432,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "30452:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$33476",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 33431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "30444:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "30444:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30444:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33423,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "30420:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13052",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30423:5:51",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12509,
                      "src": "30420:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 33434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30420:38:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33435,
                  "nodeType": "ExpressionStatement",
                  "src": "30420:38:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33439,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31426,
                        "src": "30489:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30497:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33436,
                        "name": "frensOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31384,
                        "src": "30466:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensOracle_$1744",
                          "typeString": "contract FrensOracle"
                        }
                      },
                      "id": 33438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30478:10:51",
                      "memberName": "setExiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1743,
                      "src": "30466:22:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool) external"
                      }
                    },
                    "id": 33441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30466:36:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33442,
                  "nodeType": "ExpressionStatement",
                  "src": "30466:36:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33448,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31369,
                            "src": "30550:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$4926",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$4926",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 33447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "30542:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "30542:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30542:20:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33443,
                        "name": "frensOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31384,
                        "src": "30510:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensOracle_$1744",
                          "typeString": "contract FrensOracle"
                        }
                      },
                      "id": 33445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30522:19:51",
                      "memberName": "checkValidatorState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1727,
                      "src": "30510:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) external returns (bool)"
                      }
                    },
                    "id": 33450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30510:53:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33451,
                  "nodeType": "ExpressionStatement",
                  "src": "30510:53:51"
                },
                {
                  "assignments": [
                    33453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33453,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "30585:5:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 33474,
                      "src": "30571:19:51",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 33452,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "30571:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33457,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33454,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31369,
                        "src": "30593:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4926",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30605:8:51",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4722,
                      "src": "30593:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 33456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30593:22:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30571:44:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "657869746564",
                                "id": 33462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30659:8:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a12a7ae4132c3f93fcc4fb46e9e900a1d1105abfd1ce8bcec1c533b1cd0a973c",
                                  "typeString": "literal_string \"exited\""
                                },
                                "value": "exited"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a12a7ae4132c3f93fcc4fb46e9e900a1d1105abfd1ce8bcec1c533b1cd0a973c",
                                  "typeString": "literal_string \"exited\""
                                }
                              ],
                              "expression": {
                                "id": 33460,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "30642:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 33461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "30646:12:51",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "30642:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 33463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30642:26:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 33459,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "30632:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 33464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30632:37:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 33468,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33453,
                                "src": "30698:5:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 33466,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "30681:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 33467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "30685:12:51",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "30681:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 33469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30681:23:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 33465,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "30671:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 33470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30671:34:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6e6f7420657869746564",
                        "id": 33471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30706:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c9d5bc62a5b3ac5fc5b3159df6dc8b50db32c0e245e1c9c901ce20d2ef2cd1",
                          "typeString": "literal_string \"not exited\""
                        },
                        "value": "not exited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c9d5bc62a5b3ac5fc5b3159df6dc8b50db32c0e245e1c9c901ce20d2ef2cd1",
                          "typeString": "literal_string \"not exited\""
                        }
                      ],
                      "id": 33458,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9121,
                        9146,
                        9159,
                        9175,
                        9217,
                        9259,
                        9301,
                        9338,
                        9375,
                        9412,
                        6274,
                        6299,
                        6329,
                        6354,
                        6413,
                        6438,
                        6468,
                        6493,
                        7593,
                        7628
                      ],
                      "referencedDeclaration": 6354,
                      "src": "30623:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 33472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30623:96:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33473,
                  "nodeType": "ExpressionStatement",
                  "src": "30623:96:51"
                }
              ]
            },
            "functionSelector": "456f30ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExit",
            "nameLocation": "30209:8:51",
            "parameters": {
              "id": 33395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30217:2:51"
            },
            "returnParameters": {
              "id": 33396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30227:0:51"
            },
            "scope": 33476,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31341,
              "name": "Test",
              "nameLocations": [
                "986:4:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10933,
              "src": "986:4:51"
            },
            "id": 31342,
            "nodeType": "InheritanceSpecifier",
            "src": "986:4:51"
          }
        ],
        "canonicalName": "StakingPoolTest",
        "contractDependencies": [
          62,
          242,
          1017,
          1257,
          1659,
          1744,
          2318,
          2582,
          2884,
          3514,
          5026
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33476,
          10933,
          8003,
          7740
        ],
        "name": "StakingPoolTest",
        "nameLocation": "967:15:51",
        "scope": 33477,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 51
}