{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryProxy",
      "outputs": [
        {
          "internalType": "contract FactoryProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensClaim",
      "outputs": [
        {
          "internalType": "contract FrensClaim",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensInitialiser",
      "outputs": [
        {
          "internalType": "contract FrensInitialiser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolSetter",
      "outputs": [
        {
          "internalType": "contract FrensPoolSetter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "contract IStakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPoolById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIsApprovedForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintingDirectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSafeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenByIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testexists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "871:10455:56:-:0;;;;;;1594:4:32;871:10455:56;;;;;;;;;2076:42;1494;871:10455;;;;;;;;;1486:51;871:10455;;;1486:51;871:10455;1684:42;871:10455;1684:42;871:10455;;;1684:42;871:10455;1760:42;871:10455;1760:42;871:10455;;;1760:42;871:10455;;1844:25;871:10455;;;1844:25;871:10455;1903:42;871:10455;1903:42;871:10455;;;1903:42;871:10455;1990:42;871:10455;1982:51;871:10455;;;1982:51;871:10455;2068:51;871:10455;;;2068:51;871:10455;;2141:101;871:10455;;:::i;:::-;;;;;;;;-1:-1:-1;;871:10455:56;2141:101;871:10455;;;;;;;;-1:-1:-1;;;871:10455:56;;2279:69;871:10455;;;;;;;:::i;:::-;;;;;;-1:-1:-1;871:10455:56;;2279:69;871:10455;2279:69;871:10455;;;;;;;;2372:197;871:10455;;:::i;:::-;;;;;;-1:-1:-1;871:10455:56;;2603:66;871:10455;;;;;;2372:197;871:10455;2372:197;871:10455;;;;;;;;;;;;;;;;;;;;;;;2372:197;871:10455;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:69;871:10455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:101;871:10455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "871:10455:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1951:82;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1322:32;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1360:28;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1453:84;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;2039:80;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;979:38;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1023:52;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1157:44;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;8843:14;871:10455;;;-1:-1:-1;;;8843:22:56;;;;;871:10455;;-1:-1:-1;;;;;871:10455:56;8843:22;;871:10455;;;;;;;;8843:22;;;;;;;;871:10455;8843:22;;;871:10455;8836:4;;8843:22;:::i;:::-;8874:11;871:10455;8879:5;871:10455;;8874:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;8893:51:56;;;;;871:10455;;;;;;;;;;;;;8893:51;;;871:10455;8893:51;;871:10455;;;;;;;;;;;8893:51;;;;;;;;871:10455;;;8843:14;871:10455;;;8985:3;871:10455;;8952:37;;;;;;871:10455;;;;;;;;;;;;;8952:37;;;;871:10455;8952:37;;871:10455;8952:37;;;;;;;;871:10455;8836:4;9002:13;8836:4;9002:13;:::i;:::-;871:10455;8843:14;871:10455;;;;8985:3;871:10455;;9024:37;;;;;871:10455;;;;;;9024:37;;;;;;;871:10455;9024:37;;871:10455;9024:37;;;;;;;;871:10455;;;;8985:3;871:10455;;;8843:14;871:10455;;;;;;9083:22;;;;;;;;;;;;;9069:37;9083:22;871:10455;9083:22;;;871:10455;9069:37;;;:::i;:::-;871:10455;9083:22;;;;;;;-1:-1:-1;9083:22:56;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;871:10455;;;;;;;;;9024:37;;;;:::i;:::-;;;;8952;;;;:::i;:::-;;;;8893:51;;;;:::i;:::-;;;;8843:22;;;;;;;;;;;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;903:24;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1394:38;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;9797:5;871:10455;-1:-1:-1;;;;;871:10455:56;9792:11;;871:10455;;9792:11;:::i;:::-;871:10455;9811:11;871:10455;;9811:37;;;;;871:10455;;;;;;;;;;;;;9811:37;;;;;;;;;;871:10455;;;9866:14;871:10455;;;9797:5;871:10455;;;;;;;;9866:44;;;871:10455;9866:44;;871:10455;;;;;1671:64:32;9866:44:56;;;;871:10455;9866:44;;;;;;;;;871:10455;9866:44;;;871:10455;;;;;;;;;;;;9934:26;;;;;871:10455;9934:26;;1671:64:32;9934:26:56;;;;;;;9918:43;9934:26;871:10455;9934:26;;;871:10455;9918:43;;:::i;:::-;9974:3;9969:9;871:10455;;;;9969:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;9986:68:56;;;;;;871:10455;;-1:-1:-1;;;9986:68:56;;;871:10455;;;;;9986:68;871:10455;9986:68;;;:::i;:::-;;;;;;;;;;;;;871:10455;;;9866:14;871:10455;;;;9797:5;871:10455;;;;;;10062:47;;;;;;871:10455;;-1:-1:-1;;;10062:47:56;;;-1:-1:-1;;;;;871:10455:56;;;;10062:47;;871:10455;;;;;;;;;;;;1671:64:32;;;871:10455:56;;;10062:47;871:10455;10062:47;;;;;;;;;;871:10455;;10117:11;871:10455;9797:5;871:10455;;10117:11;:::i;:::-;871:10455;9866:14;871:10455;;;9797:5;871:10455;;;;;;10136:47;;;;;871:10455;;10136:47;;;-1:-1:-1;;;;;871:10455:56;;;;10136:47;;871:10455;;;;;;;;;;1671:64:32;;;871:10455:56;-1:-1:-1;;871:10455:56;;;;;;-1:-1:-1;;10136:47:56;;;;;;;;871:10455;;;;;;;;;9866:14;871:10455;;;;10205:26;;;;;;;;871:10455;10205:26;;1671:64:32;10205:26:56;;;;;;;10191:41;10205:26;871:10455;10205:26;;;10191:41;;:::i;:::-;10240:9;871:10455;;;;10240:9;:::i;:::-;10257:69;;;;;871:10455;;;;;;;10257:69;;;;;;;;871:10455;10257:69;;871:10455;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;10257:69;;;;;;;;871:10455;;;9866:14;871:10455;;;;;;;10379:12;871:10455;;10334:63;;;;;871:10455;;10334:63;;;-1:-1:-1;;;;;871:10455:56;;;;10334:63;;871:10455;;;;;;;;;;1671:64:32;;;871:10455:56;-1:-1:-1;;871:10455:56;;;;;;-1:-1:-1;;10334:63:56;;;;;;;;871:10455;;;;10432:17;;;;;;;-1:-1:-1;;;;;10432:17:56;;;;;;;;;;;;871:10455;10432:17;;;;;10457:9;871:10455;;;;10457:9;:::i;:::-;871:10455;;;9866:14;871:10455;;;;;;;10474:62;;;;;;871:10455;;10474:62;;;-1:-1:-1;;;;;871:10455:56;;;;10474:62;;871:10455;;;;;;;;;;;1671:64:32;;;871:10455:56;1671:64:32;-1:-1:-1;;871:10455:56;;;;;;-1:-1:-1;;10474:62:56;;;;;;;;;871:10455;10474:62;;;871:10455;;9866:14;871:10455;;;;;10575:26;;;;;;;871:10455;10575:26;;1671:64:32;10575:26:56;;;;;;;;;871:10455;10575:26;;;;;;:::i;10474:62::-;;;;:::i;:::-;;;;10432:17;1671:64:32;;;871:10455:56;1671:64:32;;871:10455:56;1671:64:32;871:10455:56;;1671:64:32;10334:63:56;;;;:::i;:::-;;;;10257:69;;;;:::i;:::-;;;;10205:26;;;;;;;;;;;;;;;:::i;:::-;;;;;10136:47;;;;:::i;:::-;;;;10062;;;;:::i;:::-;;;;9986:68;;;;:::i;:::-;;;;9934:26;;;;;;;;;;;;;;;:::i;:::-;;;;;9866:44;;;;;;;;;;;;;;;;;:::i;:::-;;;871:10455;;;;;9866:44;;;;;;;;;9811:37;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;7769:5;871:10455;-1:-1:-1;;;;;871:10455:56;7759:16;;871:10455;;7759:16;:::i;:::-;871:10455;7783:10;;7808:7;7812:3;7808:7;;;;871:10455;7801:607;7827:11;871:10455;;;;;7827:37;;;;;871:10455;;;;;;;;;;7827:37;;;;;;;;;;;;7801:607;7898:14;;871:10455;;;;;;;;;;;;;;;7898:29;;;;;871:10455;7898:29;;1671:64:32;7898:29:56;871:10455;;;;7898:29;;;;;;;;;;7992:3;7898:29;7968:13;7898:29;871:10455;7898:29;;;7801:607;871:10455;;;;;7968:13;:::i;:::-;7992:3;:::i;:::-;8005:12;871:10455;;;;;8005:38;;;;;;871:10455;;;;;;8005:38;;;;;;;;;;;;;;;;;;7801:607;871:10455;;;;;;;;8078:29;;;;;;;;871:10455;8078:29;;1671:64:32;8078:29:56;;;;;;;8149:14;8078:29;8174:3;8078:29;871:10455;8078:29;;;7801:607;871:10455;;;8149:14;:::i;8174:3::-;871:10455;;;;;8187:37;;;;;;871:10455;;;;;;;8187:37;;;;;;;;;;;;;;;;;;;;7801:607;871:10455;;;;;;8301:29;;;;;;;871:10455;8301:29;;1671:64:32;8301:29:56;;;;;;;8395:3;8301:29;8371:13;8301:29;;;871:10455;8301:29;;;7801:607;871:10455;;;;8371:13;:::i;8395:3::-;7801:607;;8301:29;;;;;;;-1:-1:-1;8301:29:56;;;;;;:::i;:::-;;;;;;8187:37;;;;:::i;:::-;;;;8078:29;;;;;;;;;;;;;;;:::i;:::-;;;;;8005:38;;;;:::i;:::-;;;;7898:29;;;;;;;;;;;;;;:::i;:::-;;;;7827:37;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;6362:5;871:10455;-1:-1:-1;;;;;871:10455:56;6357:11;;871:10455;;6357:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;6376:31:56;;;;;871:10455;;;;;;;;;;;;;6376:31;;871:10455;;6376:31;;871:10455;;;;;;-1:-1:-1;;;871:10455:56;;;;6376:31;;;;;;;;871:10455;;;6415:14;871:10455;;;6362:5;871:10455;;6415:35;;;;;871:10455;;;;;;;;;;;;;;;6415:35;;871:10455;6415:35;;871:10455;6415:35;;;;;;;;871:10455;6415:35;;;;:::i;6376:31::-;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;1119:32;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;9166:1;9157:10;9182:7;9186:3;9182:7;;;;871:10455;9175:558;9206:5;871:10455;;-1:-1:-1;;;;;871:10455:56;9206:5;9201:11;;871:10455;;9201:11;:::i;:::-;9222;871:10455;;;;;9222:37;;;;;;871:10455;;;;;;;;;;9222:37;;;;;;;;;;;;9175:558;9287:14;;871:10455;;;;;;;;;;;;;;9287:25;;;;;871:10455;9287:25;;1671:64:32;9287:25:56;871:10455;;;;9287:25;;;;;;;;;;9322:24;9287:25;9356:3;9287:25;871:10455;9287:25;;;871:10455;;;9322:24;:::i;9356:3::-;9374;;871:10455;9369:9;871:10455;;;;9369:9;:::i;:::-;871:10455;9388:12;871:10455;;9388:38;;;;;;871:10455;;;;;;9388:38;;;;;;;;;;;;;;;;;;9175:558;871:10455;;;;;;;;9452:25;;;;;;;;871:10455;9452:25;;1671:64:32;9452:25:56;;;;;;;9487:20;9517:3;9452:25;;;871:10455;9452:25;;;9175:558;871:10455;;;;;9487:20;:::i;9517:3::-;871:10455;9530:9;871:10455;;;;9530:9;:::i;:::-;871:10455;;9549:37;;;;;;871:10455;;;;;;;9549:37;;;;;;;;;;;;;;;;;;;;9175:558;871:10455;;;;;;9655:25;;;;;;;871:10455;9655:25;;1671:64:32;9655:25:56;;;;;;;9720:3;9655:25;9690:20;9655:25;871:10455;9655:25;;;871:10455;;;;9690:20;:::i;9720:3::-;9175:558;;9655:25;;;;;;;-1:-1:-1;9655:25:56;;;;;;:::i;:::-;;;;;;9549:37;;;;:::i;:::-;;;;9452:25;;;;;;;;;;;;;;:::i;:::-;;;;9388:38;;;;:::i;:::-;;;;9287:25;;;;;;;;;;;;;;;:::i;9222:37::-;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;10928:5;871:10455;-1:-1:-1;;;;;871:10455:56;10923:11;;871:10455;;10923:11;:::i;:::-;871:10455;10942:11;871:10455;;10942:37;;;;;871:10455;;;;;;;;;;;;;10942:37;;;;;;;;;;871:10455;;;10997:14;871:10455;;;;10928:5;871:10455;;;;;;;;;10997:44;;;871:10455;10997:44;;871:10455;;;;;1671:64:32;10997:44:56;;;;871:10455;10997:44;;;;;;;;;871:10455;10997:44;;;871:10455;;;;;;;;;;;;;;;11065:26;;;871:10455;11065:26;;1671:64:32;11065:26:56;;;;;;;11049:43;11065:26;871:10455;11065:26;;;11049:43;;;:::i;:::-;11100:9;871:10455;11105:3;871:10455;;11100:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;11117:68:56;;;;;871:10455;;;;;;;;11117:68;;;;;;871:10455;11117:68;;;:::i;:::-;;;;;;;;;;;871:10455;;;10997:14;871:10455;;;;10928:5;871:10455;;;;11105:3;871:10455;;11193:43;;;;;;871:10455;;-1:-1:-1;;;11193:43:56;;;-1:-1:-1;;;;;871:10455:56;;;;11193:43;;871:10455;;;;;;;;;;;;1671:64:32;;;871:10455:56;;;;;;;;;;11193:43;;;;;;;;;;871:10455;;11244:11;871:10455;10928:5;871:10455;;11244:11;:::i;:::-;871:10455;10997:14;871:10455;;;10928:5;871:10455;;;11105:3;871:10455;;11263:43;;;;;;871:10455;;11263:43;;;-1:-1:-1;;;;;871:10455:56;;;;11263:43;;871:10455;;;;;;;;;;;;1671:64:32;;;;871:10455:56;-1:-1:-1;;871:10455:56;;;;;;-1:-1:-1;;11263:43:56;;;;;;;;871:10455;11193:43;;;;:::i;:::-;;;;11117:68;;;;:::i;:::-;;;;11065:26;;;;;;;-1:-1:-1;11065:26:56;;;;;;:::i;:::-;;;;;;10997:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;871:10455;;;;;;;;10997:44;;;;;;;10942:37;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;10669:5;871:10455;-1:-1:-1;;;;;871:10455:56;10659:16;;871:10455;;10659:16;:::i;:::-;871:10455;10683:10;10708:7;10712:3;10708:7;;;;871:10455;10701:167;871:10455;10727:11;871:10455;;10727:37;;;;;871:10455;;;;;;;;;;;;;10727:37;;;;;;;;;;10701:167;-1:-1:-1;10784:14:56;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;;;;;;;;;;;;;;10784:32;;871:10455;10784:32;;1671:64:32;10784:32:56;871:10455;10784:32;;;;;;;;;;;871:10455;10784:32;;;10701:167;10837:7;;;;10856:3;10837:7;;;:::i;10856:3::-;10701:167;;10784:32;;;;;;;;;;;;;;;;:::i;:::-;;;871:10455;;;;;;;10837:7;871:10455;10784:32;;;;;;;871:10455;1671:64:32;;;871:10455:56;;;;;;;10727:37;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;1876:69;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1243:31;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1280:36;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;7480:5;871:10455;-1:-1:-1;;;;;871:10455:56;7470:16;;871:10455;;7470:16;:::i;:::-;871:10455;7501:10;7527:7;7531:3;7527:7;;;;871:10455;7520:178;7558:14;871:10455;;;;;;;;;;;;;;7558:24;;;;;871:10455;7558:24;;1671:64:32;7558:24:56;871:10455;;;;7558:24;;;;;;;;;7918:5:35;7558:24:56;871:10455;7558:24;;;7520:178;7918:5:35;;;:::i;:::-;871:10455:56;7593:11;871:10455;;7593:37;;;;;;871:10455;;;;;;;;;;;;;7593:37;;;;;;;;;;;;;;;7520:178;871:10455;;;;;;7651:24;;;;;;;871:10455;7651:24;;1671:64:32;7651:24:56;;;;;;7686:3;7651:24;;;871:10455;7651:24;;;7520:178;7651:24;;;:::i;7686:3::-;7520:178;;7651:24;;;;;;-1:-1:-1;7651:24:56;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;7593:37;;;;:::i;:::-;;;;7558:24;;;;;;;;;;;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;7108:5;871:10455;;-1:-1:-1;;;;;871:10455:56;7098:16;;871:10455;;7098:16;:::i;:::-;871:10455;7122:10;;7147:7;7151:3;7147:7;;;;871:10455;7140:281;871:10455;7166:11;871:10455;;7166:37;;;;;871:10455;;;;;;;;;;;;;7166:37;;;;;;;;;;7140:281;7223:14;;871:10455;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7223:46:56;;-1:-1:-1;;;;;871:10455:56;;;;;7223:46;;871:10455;;;;1671:64:32;;;;7223:46:56;;871:10455;7223:46;;871:10455;;;;;;7223:46;;;;;;;;;;;871:10455;7223:46;;;7140:281;-1:-1:-1;7290:7:56;;;;:::i;:::-;871:10455;;;;;;;;;;;;;;;;;;7331:31;;871:10455;7331:31;;871:10455;7331:31;;;;;;;871:10455;7331:31;;;7140:281;7409:3;5259:6:32;;;;;5255:203;;7140:281:56;7409:3;;;:::i;:::-;7140:281;;5255:203:32;-1:-1:-1;;;;;;;;;;;871:10455:56;;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;5286:41:32;871:10455:56;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;1671:64:32;5346:31;;;;;;;;871:10455:56;;;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;1671:64:32;5396:31;;;;;:::i;:::-;5255:203;;;;7331:31:56;;;;;;;;;;;;;;;;:::i;:::-;;;871:10455;;;;7409:3;871:10455;;7331:31;;;;;;;;7223:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;871:10455;;;;7290:7;871:10455;;;;7223:46;;;;;;;;;871:10455;1671:64:32;;;;871:10455:56;;;;;;;7166:37;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;;;;-1:-1:-1;;;;;;;;;;;871:10455:56;;;;;;;;;-1:-1:-1;;871:10455:56;;;;933:40;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1081:32;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1648:78;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;1732:70;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;6511:5;871:10455;;-1:-1:-1;;;;;871:10455:56;6511:5;6501:16;;871:10455;;6501:16;:::i;:::-;871:10455;6525:10;;6550:7;6554:3;6550:7;;;;871:10455;6543:503;871:10455;6644:11;871:10455;;6644:37;;;;;871:10455;;;;;;;;;;;;;6644:37;;;;;;;;;;6543:503;6703:14;;871:10455;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6703:46:56;;-1:-1:-1;;;;;871:10455:56;;;;;6703:46;;871:10455;;;;1671:64:32;;;;6703:46:56;;871:10455;6703:46;;871:10455;;;;;;6703:46;;;;;;;;871:10455;6703:46;;;6543:503;6770:7;;;;;:::i;:::-;871:10455;;;;;;;;;;;;;;6813:29;;;;;871:10455;6813:29;;1671:64:32;871:10455:56;6813:29;;;;;;;;;;;871:10455;6813:29;;;6543:503;871:10455;;3678:6:32;3674:212;;6543:503:56;871:10455;;;;;6920:3;;871:10455;;;;;6897:30;;;;;;871:10455;;-1:-1:-1;;;6897:30:56;;-1:-1:-1;;;;;871:10455:56;;;;;6897:30;;871:10455;;;;1671:64:32;;;-1:-1:-1;;871:10455:56;;;;;;-1:-1:-1;;6897:30:56;;;;;;;;;;;;;6543:503;871:10455;;;;;;6959:29;;;;;;;871:10455;6959:29;;1671:64:32;6959:29:56;;;;;;;7034:3;6959:29;6998:26;6959:29;;;871:10455;6959:29;;;871:10455;;;;6998:26;:::i;7034:3::-;6543:503;;6959:29;;;;;;;-1:-1:-1;6959:29:56;;;;;;:::i;:::-;;;;;;6897:30;;;;:::i;:::-;;;;3674:212:32;-1:-1:-1;;;;;;;;;;;871:10455:56;;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;3705:44:32;871:10455:56;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;3768:34:32;;;;;;;;871:10455:56;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;3821:34:32;;;;;:::i;:::-;3674:212;;;6813:29:56;;;;;;;;;;;;;;:::i;:::-;;;;6703:46;;;;;;;;;;;;;;;;:::i;:::-;;;871:10455;;;;;6770:7;871:10455;;6703:46;;;;;;;871:10455;1671:64:32;;;;871:10455:56;;;;;;;6644:37;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;1207:30;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;;;2746:18;;;;;;;-1:-1:-1;;;;;2746:18:56;;;;;;;;;;;;871:10455;2746:18;;;;;2731:33;871:10455;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;;2808:30;;;;-1:-1:-1;;;;;2808:30:56;;;;;;;;871:10455;2808:30;;;;;;871:10455;;2808:30;;;871:10455;2808:30;;;;;2793:45;871:10455;;-1:-1:-1;;;;;871:10455:56;;;-1:-1:-1;;;;;;871:10455:56;;;;;;;;2891:50;871:10455;;;;;;;;;;2731:33;871:10455;;;;;2995:34;;;;;;;-1:-1:-1;;;;;2995:34:56;;;;;871:10455;2995:34;;;;;;871:10455;;2995:34;;;871:10455;2995:34;;;;;871:10455;;;;;;;;;2976:53;871:10455;;;2976:53;871:10455;-1:-1:-1;;;;;;;;;;;3108:38:56;;;;871:10455;;-1:-1:-1;;;3108:38:56;;3125:4;871:10455;3108:38;;871:10455;;;;;;;-1:-1:-1;871:10455:56;;;-1:-1:-1;;;;;;;;;;;;3108:38:56;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;-1:-1:-1;;;;;871:10455:56;3154:75;;;;;871:10455;;;;;;;;;;;;;3154:75;;;871:10455;3154:75;;871:10455;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;3154:75;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;-1:-1:-1;;;;;871:10455:56;3237:67;;;;;871:10455;;;;;;;;;;;;;3237:67;;;871:10455;3237:67;;871:10455;;;;;;3237:67;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;3380:18;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;3343:71;;;;;871:10455;;;;;;;;;;;;;;;3343:71;;871:10455;3343:71;;871:10455;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;3343:71;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;3495:7;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;3458:64;;;;;871:10455;;;;;;;;;;;;;;;3458:64;;871:10455;3458:64;;871:10455;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;3458:64;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;3591:10;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;3554:55;;;;;871:10455;;;;;;;;;;;;;;;3554:55;;871:10455;3554:55;;871:10455;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;3554:55;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;3662:32:56;;;;;;;;-1:-1:-1;3662:32:56;;;;;;;;;;871:10455;;3662:32;;;;;;;871:10455;3662:32;;;;;3645:49;871:10455;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;2976:53;871:10455;;;3734:71;;;;;871:10455;;;-1:-1:-1;;;3734:71:56;;-1:-1:-1;;;;;871:10455:56;;;;3734:71;;871:10455;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;;;3734:71;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;3645:49;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;3813:66;;;;;871:10455;;;;;;;;;;;;;;;3813:66;;871:10455;3813:66;;871:10455;;;;;;3813:66;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;3931:36:56;;;;;;;;-1:-1:-1;3931:36:56;;;;;;;;;;871:10455;;3931:36;;;;;;;871:10455;3931:36;;;;;871:10455;;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;2976:53;871:10455;;;4002:79;;;;;871:10455;;;-1:-1:-1;;;4002:79:56;;-1:-1:-1;;;;;871:10455:56;;;;4002:79;;871:10455;;;;;2891:50;871:10455;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;;;4002:79;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;4089:69;;;;;871:10455;;;;;;;;;;;;;;;4089:69;;871:10455;4089:69;;871:10455;;;;;;4089:69;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;4201:28:56;;;;;;;;-1:-1:-1;4201:28:56;;;;;;;;;;871:10455;;4201:28;;;;;;;871:10455;4201:28;;;;;4188:41;871:10455;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;2976:53;871:10455;;;4263:63;;;;;871:10455;;;-1:-1:-1;;;4263:63:56;;-1:-1:-1;;;;;871:10455:56;;;;4263:63;;871:10455;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;;;4263:63;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;4188:41;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;4334:61;;;;;871:10455;;;;;;;;;;;;;;;4334:61;;871:10455;4334:61;;871:10455;;;;;;4334:61;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;4447:33:56;;;;;;;;-1:-1:-1;4447:33:56;;;;;;;;;;871:10455;;4447:33;;;;;;;871:10455;4447:33;;;;;4429:51;871:10455;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;2976:53;871:10455;;;4518:73;;;;;871:10455;;;-1:-1:-1;;;4518:73:56;;-1:-1:-1;;;;;871:10455:56;;;;4518:73;;871:10455;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;;;4518:73;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;4429:51;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;4599:66;;;;;871:10455;;;;;;;;;;;;;;;4599:66;;871:10455;4599:66;;871:10455;;;;;;4599:66;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;4717:33:56;;;;;;;;-1:-1:-1;4717:33:56;;;;;;;;;;871:10455;;4717:33;;;;;;;871:10455;4717:33;;;;;871:10455;;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;2976:53;871:10455;;;4788:73;;;;;871:10455;;;-1:-1:-1;;;4788:73:56;;-1:-1:-1;;;;;871:10455:56;;;;4788:73;;871:10455;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;;;4788:73;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;4869:67;;;;;871:10455;;;;;;;;;;;;;;;4869:67;;871:10455;4869:67;;871:10455;;;;;;4869:67;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;4993:40:56;;;;;;;;-1:-1:-1;4993:40:56;;;;;;;;;;871:10455;;4993:40;;;;;;;871:10455;4993:40;;;;;871:10455;;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;2976:53;871:10455;;;5069:87;;;;;871:10455;;;-1:-1:-1;;;5069:87:56;;-1:-1:-1;;;;;871:10455:56;;;;5069:87;;871:10455;;;;;3380:18;871:10455;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;;;5069:87;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;;5164:74;;;;;871:10455;;;;;;;;;;;;;;;5164:74;;871:10455;5164:74;;871:10455;;;;;;5164:74;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;;;;-1:-1:-1;;;;;871:10455:56;-1:-1:-1;;;;;5275:26:56;;;;;;;;-1:-1:-1;5275:26:56;;;;;;;;;;871:10455;;5275:26;;;;;;;871:10455;5275:26;;;;;5264:37;871:10455;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;2976:53;871:10455;;;;;5332:59;;;;;871:10455;;;;;;;;;;;;;;;5332:59;;871:10455;5332:59;;871:10455;;;;;;5264:37;871:10455;;;;-1:-1:-1;;;871:10455:56;;;;5332:59;;;;;;;;871:10455;-1:-1:-1;2976:53:56;871:10455;5264:37;871:10455;-1:-1:-1;;;;;871:10455:56;;;;;5399:60;;;;;871:10455;;;;;;;;;;;;;;;5399:60;;871:10455;5399:60;;871:10455;;;;;;5399:60;;;;;;;;871:10455;5541:38;-1:-1:-1;;;;;;;;;;;5541:38:56;;;;871:10455;;-1:-1:-1;;;5541:38:56;;3125:4;871:10455;5541:38;;871:10455;;;;;;;-1:-1:-1;871:10455:56;;;-1:-1:-1;;;;;;;;;;;;5541:38:56;;;;;;;;871:10455;-1:-1:-1;2731:33:56;871:10455;-1:-1:-1;;;;;871:10455:56;5587:32;;;;;871:10455;;;;;;;;;;;;;5587:32;;;;;;;;;;871:10455;-1:-1:-1;2891:50:56;871:10455;5709:9;871:10455;;;-1:-1:-1;;;5696:66:56;;;-1:-1:-1;;;;;871:10455:56;;;;5696:66;;871:10455;;;;;;;;;;;;;;;;;;;;;5696:66;;;;;;;871:10455;5696:66;;;871:10455;-1:-1:-1;871:10455:56;;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;2891:50;871:10455;5709:9;871:10455;;;6038:66;;;871:10455;;;6038:66;;871:10455;-1:-1:-1;871:10455:56;;;;;;;;;;;;;;-1:-1:-1;;871:10455:56;6038:66;;;;;;;871:10455;6038:66;;;871:10455;-1:-1:-1;871:10455:56;;;-1:-1:-1;;;;;;871:10455:56;-1:-1:-1;;;;;871:10455:56;;;;;;;;;;;6038:66;;;;871:10455;6038:66;871:10455;6038:66;;;;;;;:::i;:::-;;;;5696;;;;871:10455;5696:66;871:10455;5696:66;;;;;;;:::i;:::-;;;;5587:32;;;;:::i;:::-;;;;5541:38;;;;:::i;:::-;;;;5399:60;;;;:::i;:::-;;;;5332:59;;;;:::i;:::-;;;;5164:74;;;;:::i;:::-;;;;5069:87;;;;:::i;:::-;;;;4869:67;;;;:::i;:::-;;;;4788:73;;;;:::i;:::-;;;;4599:66;;;;:::i;:::-;;;;4518:73;;;;:::i;:::-;;;;4334:61;;;;:::i;:::-;;;;4263:63;;;;:::i;:::-;;;;4089:69;;;;:::i;:::-;;;;4002:79;;;;:::i;:::-;;;;3813:66;;;;:::i;:::-;;;;3734:71;;;;:::i;:::-;;;;3554:55;;;;:::i;:::-;;;;3458:64;;;;:::i;:::-;;;;3343:71;;;;:::i;:::-;;;;3237:67;;;;:::i;:::-;;;;3154:75;;;;:::i;:::-;;;;3108:38;;;;:::i;:::-;;;;871:10455;;;;;;-1:-1:-1;;871:10455:56;;;;8477:5;871:10455;-1:-1:-1;;;;;871:10455:56;8467:16;;871:10455;;8467:16;:::i;:::-;871:10455;8491:10;8516:6;871:10455;8516:6;;;;-1:-1:-1;8612:14:56;871:10455;8477:5;871:10455;8651:3;871:10455;;;-1:-1:-1;;;8612:43:56;;;871:10455;;;-1:-1:-1;;;;;871:10455:56;;;;8612:43;;871:10455;;;;;;;;;;;8612:43;;871:10455;8612:43;;871:10455;;;;;;;;8612:43;;;;;;7918:5:35;8612:43:56;871:10455;8612:43;;;7918:5:35;;;:::i;:::-;871:10455:56;8612:14;871:10455;;;;8651:3;871:10455;;8664:43;;;;;;871:10455;;;;;;;;;;;;;;8664:43;;871:10455;8664:43;;871:10455;;;;;8664:43;;;;;;;8726;8664;;;;;8509:84;-1:-1:-1;8612:14:56;871:10455;8477:5;871:10455;8651:3;871:10455;;;8726:43;;;-1:-1:-1;;;;;871:10455:56;;;;;;8726:43;;871:10455;;;;;;;;;;;;;;;;;;;;;;;;;8726:43;;;;;;;;;;;;871:10455;8726:43;;;;;;:::i;:::-;;;;;;-1:-1:-1;8726:43:56;;;;;;:::i;:::-;;;;;8664;;;;:::i;:::-;;;;8612;;;;;;;;;;;;;;:::i;:::-;;;;8509:84;871:10455;8534:11;871:10455;;8534:37;;;;;;871:10455;;;;;;;;;;;;;8534:37;;;;;;;;;8581:3;8534:37;;;8509:84;8581:3;;:::i;:::-;8509:84;;8534:37;;;;:::i;:::-;;;;1671:64:32;-1:-1:-1;;;;;1671:64:32;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:32;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:32;;;;871:10455:56;;;1671:64:32;;;;-1:-1:-1;;1671:64:32;;;871:10455:56;1671:64:32;:::i;:::-;;;;-1:-1:-1;1671:64:32;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;871:10455:56;;;1671:64:32;;;;;:::o;1819:584::-;1873:7;871:10455:56;;;;;;;;;;;;;;;1896:14:32:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:32;;1980:374;;2367:19;;;:::o;1980:374::-;871:10455:56;;;2196:43:32;;;;871:10455:56;;;-1:-1:-1;;;1671:64:32;;;;2196:43;;;871:10455:56;;-1:-1:-1;2196:43:32;871:10455:56;;1671:64:32;;-1:-1:-1;;;;;1671:64:32;;;;;;;;;871:10455:56;1671:64:32;2086:175;;;1671:64;;;;;;;;;;;;;;;;;;;;2086:175;;1671:64;;;2312:27;1671:64;;;;;;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;1671:64;;2312:27;;;;;;;:::i;:::-;2367:19;:::o;1671:64::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1671:64:32;;;;;;;;871:10455:56;;;;;;;;;;-1:-1:-1;;;;;871:10455:56;;;;;;;:::o;1449:98:35:-;-1:-1:-1;;;;;;;;;;;1495:22:35;;;;;871:10455:56;;-1:-1:-1;;;1495:22:35;;-1:-1:-1;;;;;871:10455:56;;;1495:22:35;;;871:10455:56;;;-1:-1:-1;;;871:10455:56;;;1671:64:32;1495:22:35;;;871:10455:56;;;1495:22:35;;;;;;;;;;1449:98;1527:13;;;;;;871:10455:56;;;;;;;;;;;;;;;1527:13:35;;1495:22;1527:13;;871:10455:56;1527:13:35;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;871:10455:56;;1449:98:35;:::o;871:10455:56:-;;;1527:13:35;871:10455:56;;;;;;;;;1527:13:35;871:10455:56;;;1495:22:35;;;;;;;:::i;:::-;;;;;;871:10455:56;;;;;;;;;;-1:-1:-1;;871:10455:56;;;;;;;:::o;:::-;1671:64:32;;;871:10455:56;;;;;;;;3255:157:32;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;871:10455:56;;;;;;;;;;;;;;;;3345:30:32;;;:::i;:::-;3255:157::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2939:104:32;;2445:359;;2410:424;871:10455:56;;;;2928:1:32;871:10455:56;;;2928:1:32;871:10455:56;2410:424:32:o;2445:359::-;871:10455:56;;2645:67:32;;;;;;871:10455:56;1671:64:32;;;871:10455:56;;;1671:64:32;2705:4;871:10455:56;;;1671:64:32;871:10455:56;2645:67:32;;871:10455:56;1671:64:32;;;;;;-1:-1:-1;;;;;1671:64:32;;;;;;871:10455:56;1671:64:32;2534:196;;;1671:64;;;;;;;;;-1:-1:-1;1671:64:32;;;;;;;;-1:-1:-1;1671:64:32;;2534:196;;1671:64;;;;;;;;;;;;;2534:196;;;;;;;;;:::i;:::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;1671:64;;;;;;;;;;;;;;;;;3615:277;-1:-1:-1;;;;;871:10455:56;;;;;3678:6:32;;;3674:212;;3615:277;;:::o;3674:212::-;871:10455:56;;;;-1:-1:-1;;;;;;;;;;;871:10455:56;;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;3705:44:32;871:10455:56;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;3768:34:32;;;;;;;;871:10455:56;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;;;;;;;;3821:34:32;;;;;:::i;1998:108:35:-;-1:-1:-1;;;;;;;;;;;2049:22:35;;;;;871:10455:56;;-1:-1:-1;;;2049:22:35;;-1:-1:-1;;;;;871:10455:56;;;2049:22:35;;;871:10455:56;;;-1:-1:-1;;;871:10455:56;;;1671:64:32;2049:22:35;;;871:10455:56;;;2049:22:35;;;;;;;;;;1998:108;2081:18;;;;;;871:10455:56;;;;;;;;;;;;;;;2081:18:35;;2049:22;2081:18;;871:10455:56;2081:18:35;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;871:10455:56;;;;;;;;;;;;;;;;-1:-1:-1;;;871:10455:56;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "factoryProxy()": "7509c39b",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensClaim()": "d20c8819",
    "frensInitialiser()": "32551a60",
    "frensMetaHelper()": "bc48e947",
    "frensPoolSetter()": "929230f2",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "proxy()": "ec556889",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testApprove()": "1aeb10a6",
    "testBalanceOf()": "3df77c0e",
    "testGetPoolById()": "87496250",
    "testIsApprovedForAll()": "09d26b6c",
    "testMintingDirectly()": "796a773d",
    "testOwner()": "9e535c69",
    "testOwnerOf()": "71a29bb7",
    "testSafeTransferFrom()": "90ec5d96",
    "testTokenByIndex()": "6a7179c3",
    "testTransferFrom()": "70557298",
    "testexists()": "524ad495",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryProxy\",\"outputs\":[{\"internalType\":\"contract FactoryProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensClaim\",\"outputs\":[{\"internalType\":\"contract FrensClaim\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensInitialiser\",\"outputs\":[{\"internalType\":\"contract FrensInitialiser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolSetter\",\"outputs\":[{\"internalType\":\"contract FrensPoolSetter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract IStakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPoolById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIsApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintingDirectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testexists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/FrensPoolShareTest.t.sol\":\"MiscTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0xd307bdd6d9d946d8170804d0fad3c8d2ea2223bdf3b8b61c484553f380abdd23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0425ed657acd21de9721a07bdf0594651512e2ca7cb1478ec107b747801826\",\"dweb:/ipfs/QmPtUCYWuNSApV96gDbYy5TuNS4eCmeaF2FGMJSDtPBHdq\"]},\"contracts/FrensArt.sol\":{\"keccak256\":\"0x636878870927bda83ec0bda0d9af0d37cb04b549e0e7f7da0bf0b380c2ebbe2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad42de2ceb1f62bb1a7c1d638150c74f3df1ead8b99e7de59f2aedbd4ec10871\",\"dweb:/ipfs/QmNr5B2XyLPx77zoDKjc2cwEwsVrn9LkAptR7rYhCmhpcT\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/FrensClaim.sol\":{\"keccak256\":\"0xc15ef2add85ea537bb711aa918e44b8f0d4fe7621bc90000585f7b6c6151d664\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb49b4e7f86343c555145a20535b3478bf18bcbcf12529995a6e6e37d3972872\",\"dweb:/ipfs/QmPcot1rWbXEDgwVnS5Rw6RTCQFpE9w6Uc9hXZzVxKXLwW\"]},\"contracts/FrensInitialiser.sol\":{\"keccak256\":\"0xafc8ad81ddb16adb4b0e77951d6aa910f1ea0a3b1564d497cbb91d75ebd598cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83564148466aa3f9fe9329057e492eca7990e985667865521d9099592f5cb660\",\"dweb:/ipfs/QmQ6MjuUBMmWAh9QghwHzQujyqQhxr5Njn2ELsgCfbzibM\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0xa63a9ee07096d2ee79200a86ca24792545f80458c0bfbae27e929ce1ec57ce4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f643ef4f2bdda0cb550ac80c0a1e76d69b6db4cea5ee3efce0d08fb27b28a0c8\",\"dweb:/ipfs/QmbBwoNkh8UP6D2XZic6UAVF1kLw6nDCYJeoz9fnCytp6o\"]},\"contracts/FrensPoolSetter.sol\":{\"keccak256\":\"0xa8a4b382d5f4e6216b0e3b6d1d7e3e6c2a00542b693307a0a1d41e6a389831a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57a78313f45f2b98772ce3010ef6e5fde22811b1ea115a88081c1bd202c447c4\",\"dweb:/ipfs/QmaXJ69fSHPfmvqJdZznE9PeuvnmT4dgUTf9j576EMrmoF\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0xe002365d669df3d68e4fdcc60d724f1f83981893fde2ab060ab89ba6681a9e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37283186f26c8a50b7b71020b22403fa3c4e1abfed213a3df6395667b8024e21\",\"dweb:/ipfs/QmPf5Ft5GAxUE3ErYWFfBZ46ZDBvz9ekmCUCP6q8uz9toc\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xdec90efb4fbeb26d4a4a3cbe03182333ead246b9b98de77eca435ae923a93a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d7d25d0d50136befe7a20824070fa1bb51c0bee6e74b24ae3394ef17035aa6f\",\"dweb:/ipfs/QmNxkDDpfsiMb6zmPpMTt78qC1tWGe22GGSa9BNQFz9y2a\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709\",\"dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0xd707f1f5d649fe9cd68e0ced4e98893d7ac67a74e8d77acbbd80c8420cb3e385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d337b7ebe2419af50b6972e9edc6f75d018bdc3c167ebc464284c0761c53d6d0\",\"dweb:/ipfs/QmUE9ABvmqN56LysQYkNfc8JW8ntjmpV9JXNqdwdN1kgaN\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x05483da0f7803599b84c92c7d75f95e7d3d0a0c4affe3ee9dcd53ea962b1a0b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04cf39cbd0151c2d8cc8e6905970b724468ce2be3d227e6556649f268b2b25dd\",\"dweb:/ipfs/QmdSqfabgx89xd3hKi47gkh83pmtAk7ugGG4PvhqWRQBkS\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2d1915d0a27801c2434920d4a0e3e8afad0927dd68fbc65a17c4066da758c495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3092fb85c9156bbabdc4ba3c9793a8c8b4ea2f7b4bae9252941e44df347a412b\",\"dweb:/ipfs/QmdhYxhMfwW5UUsHFp72SSp3BXFcdZzpZvPyt3ziEtuTaK\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84\",\"dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0x9bff27274261e4f47da3f35348818bc59f5abf405feec819dde700ff0baa3407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b412c9358f5e075c6757236018590962a2ea1b6065cb280962886eb19ff8c5\",\"dweb:/ipfs/QmYuKJbuyN3NTtCwAuhHRwvno2wcC339Bs6kkhLo9VYRGw\"]},\"contracts/interfaces/IFrensPoolSetter.sol\":{\"keccak256\":\"0x73095626ac3a83a1ab4f69fef5a410a96e960958dbc458becc5b81e2ef54553b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15b0846facf89fbdd7aaa6bb844290b52144815dce88d933457685424edc091f\",\"dweb:/ipfs/QmS95Pg5FpnDTyMjKFpG7AYgGuYyZhfq3pWM1NGPfkxWHM\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xf73d20143c481e8156498eca5ef9048215c8af0cb4ab2a474bb833ed62db45a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c2c1a717a17c36163c59c5bd98085b3c9664a60b2e2db9a83246ae6df0f73c\",\"dweb:/ipfs/QmbVqLmfaVqGBC6KBHUbfBCKKWSeDHfrjN7rRVnybLTLQ3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009\",\"dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19\",\"dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/ISSVRegistry.sol\":{\"keccak256\":\"0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4\",\"dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3d6e17dab3ea38ff89421d8b543c695eaa749d29bcf6dd02230f2d8af0258707\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce0706e5be0e074c5f87e886214ea1a20d4502e7d592cb9924f282b3b51f965c\",\"dweb:/ipfs/QmP3aKmV8nFU4yARbGsCM4MHS9haq7QzH88EYPmkKjEkpS\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x6199da4e72120032a59e6d7b9b4feeba1662aa63a3ee26a66597b5899e80c1a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47d1070208a3aa1dc8a034e2df736c855c6a434a4500476f41ee8df164d914b\",\"dweb:/ipfs/QmVg6Cb2K7u7eUGUAQ5v1ntjNYqcFmdqbU6BT7iutc7bcd\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2\",\"dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FrensPoolShareTest.t.sol\":{\"keccak256\":\"0x428d0d79ce3d2f2429a68be31251940c1cbe0881ee4e297fa41640cb8be489cb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://55089d3d1f7870982d0abb675d045f2b03a72523044f9a15893eb67d2e2a51e9\",\"dweb:/ipfs/QmXMDj6MrSDeEGWY2morWenpDCa8PLEYDPEVrNWR1x76ri\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x661367673c9dad11fcebbacbef6c5d0ae670307103e624c4ec201c125a22dd1a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://980d227dcdc42abaefd67d0991c59d6c84f1167753e634a27cefe81eaced2f26\",\"dweb:/ipfs/QmS4Guqxc1SnjA9n4ob2f5AMU4EZaBcNDEBEw28Pt4heeb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryProxy",
          "outputs": [
            {
              "internalType": "contract FactoryProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensClaim",
          "outputs": [
            {
              "internalType": "contract FrensClaim",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensInitialiser",
          "outputs": [
            {
              "internalType": "contract FrensInitialiser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolSetter",
          "outputs": [
            {
              "internalType": "contract FrensPoolSetter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxy",
          "outputs": [
            {
              "internalType": "contract IStakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPoolById"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIsApprovedForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintingDirectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwnerOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSafeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenByIndex"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testexists"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/FrensPoolShareTest.t.sol": "MiscTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0xd307bdd6d9d946d8170804d0fad3c8d2ea2223bdf3b8b61c484553f380abdd23",
        "urls": [
          "bzz-raw://5d0425ed657acd21de9721a07bdf0594651512e2ca7cb1478ec107b747801826",
          "dweb:/ipfs/QmPtUCYWuNSApV96gDbYy5TuNS4eCmeaF2FGMJSDtPBHdq"
        ],
        "license": "MIT"
      },
      "contracts/FrensArt.sol": {
        "keccak256": "0x636878870927bda83ec0bda0d9af0d37cb04b549e0e7f7da0bf0b380c2ebbe2d",
        "urls": [
          "bzz-raw://ad42de2ceb1f62bb1a7c1d638150c74f3df1ead8b99e7de59f2aedbd4ec10871",
          "dweb:/ipfs/QmNr5B2XyLPx77zoDKjc2cwEwsVrn9LkAptR7rYhCmhpcT"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/FrensClaim.sol": {
        "keccak256": "0xc15ef2add85ea537bb711aa918e44b8f0d4fe7621bc90000585f7b6c6151d664",
        "urls": [
          "bzz-raw://cb49b4e7f86343c555145a20535b3478bf18bcbcf12529995a6e6e37d3972872",
          "dweb:/ipfs/QmPcot1rWbXEDgwVnS5Rw6RTCQFpE9w6Uc9hXZzVxKXLwW"
        ],
        "license": "MIT"
      },
      "contracts/FrensInitialiser.sol": {
        "keccak256": "0xafc8ad81ddb16adb4b0e77951d6aa910f1ea0a3b1564d497cbb91d75ebd598cc",
        "urls": [
          "bzz-raw://83564148466aa3f9fe9329057e492eca7990e985667865521d9099592f5cb660",
          "dweb:/ipfs/QmQ6MjuUBMmWAh9QghwHzQujyqQhxr5Njn2ELsgCfbzibM"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0xa63a9ee07096d2ee79200a86ca24792545f80458c0bfbae27e929ce1ec57ce4c",
        "urls": [
          "bzz-raw://f643ef4f2bdda0cb550ac80c0a1e76d69b6db4cea5ee3efce0d08fb27b28a0c8",
          "dweb:/ipfs/QmbBwoNkh8UP6D2XZic6UAVF1kLw6nDCYJeoz9fnCytp6o"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolSetter.sol": {
        "keccak256": "0xa8a4b382d5f4e6216b0e3b6d1d7e3e6c2a00542b693307a0a1d41e6a389831a9",
        "urls": [
          "bzz-raw://57a78313f45f2b98772ce3010ef6e5fde22811b1ea115a88081c1bd202c447c4",
          "dweb:/ipfs/QmaXJ69fSHPfmvqJdZznE9PeuvnmT4dgUTf9j576EMrmoF"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0xe002365d669df3d68e4fdcc60d724f1f83981893fde2ab060ab89ba6681a9e80",
        "urls": [
          "bzz-raw://37283186f26c8a50b7b71020b22403fa3c4e1abfed213a3df6395667b8024e21",
          "dweb:/ipfs/QmPf5Ft5GAxUE3ErYWFfBZ46ZDBvz9ekmCUCP6q8uz9toc"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0xdec90efb4fbeb26d4a4a3cbe03182333ead246b9b98de77eca435ae923a93a67",
        "urls": [
          "bzz-raw://7d7d25d0d50136befe7a20824070fa1bb51c0bee6e74b24ae3394ef17035aa6f",
          "dweb:/ipfs/QmNxkDDpfsiMb6zmPpMTt78qC1tWGe22GGSa9BNQFz9y2a"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf",
        "urls": [
          "bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709",
          "dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0xd707f1f5d649fe9cd68e0ced4e98893d7ac67a74e8d77acbbd80c8420cb3e385",
        "urls": [
          "bzz-raw://d337b7ebe2419af50b6972e9edc6f75d018bdc3c167ebc464284c0761c53d6d0",
          "dweb:/ipfs/QmUE9ABvmqN56LysQYkNfc8JW8ntjmpV9JXNqdwdN1kgaN"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x05483da0f7803599b84c92c7d75f95e7d3d0a0c4affe3ee9dcd53ea962b1a0b0",
        "urls": [
          "bzz-raw://04cf39cbd0151c2d8cc8e6905970b724468ce2be3d227e6556649f268b2b25dd",
          "dweb:/ipfs/QmdSqfabgx89xd3hKi47gkh83pmtAk7ugGG4PvhqWRQBkS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2d1915d0a27801c2434920d4a0e3e8afad0927dd68fbc65a17c4066da758c495",
        "urls": [
          "bzz-raw://3092fb85c9156bbabdc4ba3c9793a8c8b4ea2f7b4bae9252941e44df347a412b",
          "dweb:/ipfs/QmdhYxhMfwW5UUsHFp72SSp3BXFcdZzpZvPyt3ziEtuTaK"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1",
        "urls": [
          "bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84",
          "dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0x9bff27274261e4f47da3f35348818bc59f5abf405feec819dde700ff0baa3407",
        "urls": [
          "bzz-raw://96b412c9358f5e075c6757236018590962a2ea1b6065cb280962886eb19ff8c5",
          "dweb:/ipfs/QmYuKJbuyN3NTtCwAuhHRwvno2wcC339Bs6kkhLo9VYRGw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolSetter.sol": {
        "keccak256": "0x73095626ac3a83a1ab4f69fef5a410a96e960958dbc458becc5b81e2ef54553b",
        "urls": [
          "bzz-raw://15b0846facf89fbdd7aaa6bb844290b52144815dce88d933457685424edc091f",
          "dweb:/ipfs/QmS95Pg5FpnDTyMjKFpG7AYgGuYyZhfq3pWM1NGPfkxWHM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xf73d20143c481e8156498eca5ef9048215c8af0cb4ab2a474bb833ed62db45a5",
        "urls": [
          "bzz-raw://12c2c1a717a17c36163c59c5bd98085b3c9664a60b2e2db9a83246ae6df0f73c",
          "dweb:/ipfs/QmbVqLmfaVqGBC6KBHUbfBCKKWSeDHfrjN7rRVnybLTLQ3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c",
        "urls": [
          "bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009",
          "dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c",
        "urls": [
          "bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19",
          "dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISSVRegistry.sol": {
        "keccak256": "0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f",
        "urls": [
          "bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4",
          "dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3d6e17dab3ea38ff89421d8b543c695eaa749d29bcf6dd02230f2d8af0258707",
        "urls": [
          "bzz-raw://ce0706e5be0e074c5f87e886214ea1a20d4502e7d592cb9924f282b3b51f965c",
          "dweb:/ipfs/QmP3aKmV8nFU4yARbGsCM4MHS9haq7QzH88EYPmkKjEkpS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x6199da4e72120032a59e6d7b9b4feeba1662aa63a3ee26a66597b5899e80c1a7",
        "urls": [
          "bzz-raw://d47d1070208a3aa1dc8a034e2df736c855c6a434a4500476f41ee8df164d914b",
          "dweb:/ipfs/QmVg6Cb2K7u7eUGUAQ5v1ntjNYqcFmdqbU6BT7iutc7bcd"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb",
        "urls": [
          "bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2",
          "dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FrensPoolShareTest.t.sol": {
        "keccak256": "0x428d0d79ce3d2f2429a68be31251940c1cbe0881ee4e297fa41640cb8be489cb",
        "urls": [
          "bzz-raw://55089d3d1f7870982d0abb675d045f2b03a72523044f9a15893eb67d2e2a51e9",
          "dweb:/ipfs/QmXMDj6MrSDeEGWY2morWenpDCa8PLEYDPEVrNWR1x76ri"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x661367673c9dad11fcebbacbef6c5d0ae670307103e624c4ec201c125a22dd1a",
        "urls": [
          "bzz-raw://980d227dcdc42abaefd67d0991c59d6c84f1167753e634a27cefe81eaced2f26",
          "dweb:/ipfs/QmS4Guqxc1SnjA9n4ob2f5AMU4EZaBcNDEBEw28Pt4heeb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/FrensPoolShareTest.t.sol",
    "id": 34022,
    "exportedSymbols": {
      "Address": [
        30932
      ],
      "Base64": [
        31308
      ],
      "BoolGetter": [
        39133
      ],
      "Context": [
        30954
      ],
      "DSTest": [
        7726
      ],
      "ERC165": [
        31181
      ],
      "ERC721": [
        30105
      ],
      "ERC721Enumerable": [
        30577
      ],
      "FactoryProxy": [
        62
      ],
      "FrensArt": [
        242
      ],
      "FrensBase": [
        833
      ],
      "FrensClaim": [
        1109
      ],
      "FrensInitialiser": [
        1293
      ],
      "FrensMetaHelper": [
        1935
      ],
      "FrensPoolSetter": [
        2422
      ],
      "FrensPoolShare": [
        2686
      ],
      "FrensPoolShareTokenURI": [
        2988
      ],
      "FrensStorage": [
        3618
      ],
      "IDepositContract": [
        5043
      ],
      "IENS": [
        5180
      ],
      "IERC165": [
        31193
      ],
      "IERC721": [
        30221
      ],
      "IERC721Enumerable": [
        30608
      ],
      "IERC721Metadata": [
        30635
      ],
      "IERC721Receiver": [
        30239
      ],
      "IFrensArt": [
        5190
      ],
      "IFrensClaim": [
        5216
      ],
      "IFrensLogo": [
        5224
      ],
      "IFrensMetaHelper": [
        5267
      ],
      "IFrensPoolSetter": [
        5349
      ],
      "IFrensPoolShare": [
        5393
      ],
      "IFrensPoolShareTokenURI": [
        5403
      ],
      "IFrensStorage": [
        5599
      ],
      "IMaliciousProxyInterface": [
        39108
      ],
      "IPmFont": [
        5607
      ],
      "IReverseResolver": [
        5617
      ],
      "ISSVRegistry": [
        5819
      ],
      "IStakingPool": [
        5919
      ],
      "IStakingPoolFactory": [
        5931
      ],
      "IWaves": [
        5939
      ],
      "MiscTest": [
        34021
      ],
      "NftReceiver": [
        39182
      ],
      "Ownable": [
        29271
      ],
      "Script": [
        7989
      ],
      "StakingPool": [
        4909
      ],
      "StakingPoolFactory": [
        5009
      ],
      "StdStorage": [
        11017
      ],
      "Strings": [
        31157
      ],
      "Test": [
        10919
      ],
      "Vm": [
        13038
      ],
      "console": [
        21102
      ],
      "console2": [
        29166
      ],
      "stdError": [
        10989
      ],
      "stdJson": [
        8349
      ],
      "stdMath": [
        12258
      ],
      "stdStorage": [
        12119
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11288:56",
    "nodes": [
      {
        "id": 32875,
        "nodeType": "PragmaDirective",
        "src": "39:24:56",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 32876,
        "nodeType": "ImportDirective",
        "src": "181:28:56",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 12259,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32877,
        "nodeType": "ImportDirective",
        "src": "229:38:56",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 243,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32878,
        "nodeType": "ImportDirective",
        "src": "268:46:56",
        "nodes": [],
        "absolutePath": "contracts/FrensInitialiser.sol",
        "file": "../../contracts/FrensInitialiser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 1294,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32879,
        "nodeType": "ImportDirective",
        "src": "315:45:56",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 1936,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32880,
        "nodeType": "ImportDirective",
        "src": "361:52:56",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 2989,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32881,
        "nodeType": "ImportDirective",
        "src": "414:42:56",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 3619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32882,
        "nodeType": "ImportDirective",
        "src": "457:42:56",
        "nodes": [],
        "absolutePath": "contracts/FactoryProxy.sol",
        "file": "../../contracts/FactoryProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 63,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32883,
        "nodeType": "ImportDirective",
        "src": "500:41:56",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 4910,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32884,
        "nodeType": "ImportDirective",
        "src": "542:48:56",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 5010,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32885,
        "nodeType": "ImportDirective",
        "src": "591:40:56",
        "nodes": [],
        "absolutePath": "contracts/FrensClaim.sol",
        "file": "../../contracts/FrensClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 1110,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32886,
        "nodeType": "ImportDirective",
        "src": "632:45:56",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolSetter.sol",
        "file": "../../contracts/FrensPoolSetter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 2423,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32887,
        "nodeType": "ImportDirective",
        "src": "678:44:56",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 2687,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32888,
        "nodeType": "ImportDirective",
        "src": "723:60:56",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 5932,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32889,
        "nodeType": "ImportDirective",
        "src": "784:57:56",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 5044,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32890,
        "nodeType": "ImportDirective",
        "src": "842:26:56",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34022,
        "sourceUnit": 39183,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34021,
        "nodeType": "ContractDefinition",
        "src": "871:10455:56",
        "nodes": [
          {
            "id": 32895,
            "nodeType": "VariableDeclaration",
            "src": "903:24:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "919:8:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$242",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 32894,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32893,
                "name": "FrensArt",
                "nameLocations": [
                  "903:8:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 242,
                "src": "903:8:56"
              },
              "referencedDeclaration": 242,
              "src": "903:8:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$242",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32898,
            "nodeType": "VariableDeclaration",
            "src": "933:40:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "32551a60",
            "mutability": "mutable",
            "name": "frensInitialiser",
            "nameLocation": "957:16:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
              "typeString": "contract FrensInitialiser"
            },
            "typeName": {
              "id": 32897,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32896,
                "name": "FrensInitialiser",
                "nameLocations": [
                  "933:16:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1293,
                "src": "933:16:56"
              },
              "referencedDeclaration": 1293,
              "src": "933:16:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                "typeString": "contract FrensInitialiser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32901,
            "nodeType": "VariableDeclaration",
            "src": "979:38:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "1002:15:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 32900,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32899,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "979:15:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1935,
                "src": "979:15:56"
              },
              "referencedDeclaration": 1935,
              "src": "979:15:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32904,
            "nodeType": "VariableDeclaration",
            "src": "1023:52:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "1053:22:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 32903,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32902,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "1023:22:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2988,
                "src": "1023:22:56"
              },
              "referencedDeclaration": 2988,
              "src": "1023:22:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32907,
            "nodeType": "VariableDeclaration",
            "src": "1081:32:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "1101:12:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$3618",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 32906,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32905,
                "name": "FrensStorage",
                "nameLocations": [
                  "1081:12:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3618,
                "src": "1081:12:56"
              },
              "referencedDeclaration": 3618,
              "src": "1081:12:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$3618",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32910,
            "nodeType": "VariableDeclaration",
            "src": "1119:32:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "7509c39b",
            "mutability": "mutable",
            "name": "factoryProxy",
            "nameLocation": "1139:12:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryProxy_$62",
              "typeString": "contract FactoryProxy"
            },
            "typeName": {
              "id": 32909,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32908,
                "name": "FactoryProxy",
                "nameLocations": [
                  "1119:12:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62,
                "src": "1119:12:56"
              },
              "referencedDeclaration": 62,
              "src": "1119:12:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryProxy_$62",
                "typeString": "contract FactoryProxy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32913,
            "nodeType": "VariableDeclaration",
            "src": "1157:44:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1183:18:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 32912,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32911,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1157:18:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5009,
                "src": "1157:18:56"
              },
              "referencedDeclaration": 5009,
              "src": "1157:18:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32916,
            "nodeType": "VariableDeclaration",
            "src": "1207:30:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1226:11:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$4909",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 32915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32914,
                "name": "StakingPool",
                "nameLocations": [
                  "1207:11:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4909,
                "src": "1207:11:56"
              },
              "referencedDeclaration": 4909,
              "src": "1207:11:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$4909",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32919,
            "nodeType": "VariableDeclaration",
            "src": "1243:31:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1262:12:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$4909",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 32918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32917,
                "name": "StakingPool",
                "nameLocations": [
                  "1243:11:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4909,
                "src": "1243:11:56"
              },
              "referencedDeclaration": 4909,
              "src": "1243:11:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$4909",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32922,
            "nodeType": "VariableDeclaration",
            "src": "1280:36:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1302:14:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 32921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32920,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1280:14:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2686,
                "src": "1280:14:56"
              },
              "referencedDeclaration": 2686,
              "src": "1280:14:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32925,
            "nodeType": "VariableDeclaration",
            "src": "1322:32:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec556889",
            "mutability": "mutable",
            "name": "proxy",
            "nameLocation": "1349:5:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
              "typeString": "contract IStakingPoolFactory"
            },
            "typeName": {
              "id": 32924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32923,
                "name": "IStakingPoolFactory",
                "nameLocations": [
                  "1322:19:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5931,
                "src": "1322:19:56"
              },
              "referencedDeclaration": 5931,
              "src": "1322:19:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
                "typeString": "contract IStakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32928,
            "nodeType": "VariableDeclaration",
            "src": "1360:28:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "d20c8819",
            "mutability": "mutable",
            "name": "frensClaim",
            "nameLocation": "1378:10:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensClaim_$1109",
              "typeString": "contract FrensClaim"
            },
            "typeName": {
              "id": 32927,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32926,
                "name": "FrensClaim",
                "nameLocations": [
                  "1360:10:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1109,
                "src": "1360:10:56"
              },
              "referencedDeclaration": 1109,
              "src": "1360:10:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensClaim_$1109",
                "typeString": "contract FrensClaim"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32931,
            "nodeType": "VariableDeclaration",
            "src": "1394:38:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "929230f2",
            "mutability": "mutable",
            "name": "frensPoolSetter",
            "nameLocation": "1417:15:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
              "typeString": "contract FrensPoolSetter"
            },
            "typeName": {
              "id": 32930,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32929,
                "name": "FrensPoolSetter",
                "nameLocations": [
                  "1394:15:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2422,
                "src": "1394:15:56"
              },
              "referencedDeclaration": 2422,
              "src": "1394:15:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                "typeString": "contract FrensPoolSetter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32937,
            "nodeType": "VariableDeclaration",
            "src": "1453:84:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1476:7:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32932,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1453:15:56",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 32935,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1494:42:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32934,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1486:8:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32933,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1486:8:56",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32936,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1486:51:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32940,
            "nodeType": "VariableDeclaration",
            "src": "1648:78:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1663:18:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32938,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1648:7:56",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 32939,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1684:42:56",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 32943,
            "nodeType": "VariableDeclaration",
            "src": "1732:70:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1747:10:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1732:7:56",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 32942,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1760:42:56",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 32949,
            "nodeType": "VariableDeclaration",
            "src": "1809:60:56",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1826:15:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$5043",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 32945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32944,
                "name": "IDepositContract",
                "nameLocations": [
                  "1809:16:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5043,
                "src": "1809:16:56"
              },
              "referencedDeclaration": 5043,
              "src": "1809:16:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$5043",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 32947,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32937,
                  "src": "1861:7:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 32946,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5043,
                "src": "1844:16:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$5043_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 32948,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1844:25:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$5043",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32952,
            "nodeType": "VariableDeclaration",
            "src": "1876:69:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1891:9:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32950,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1876:7:56",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 32951,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1903:42:56",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 32958,
            "nodeType": "VariableDeclaration",
            "src": "1951:82:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1974:5:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32953,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1951:15:56",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 32956,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1990:42:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32955,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1982:8:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32954,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1982:8:56",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1982:51:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32964,
            "nodeType": "VariableDeclaration",
            "src": "2039:80:56",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "2062:3:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32959,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2039:15:56",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 32962,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2076:42:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32961,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2068:8:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32960,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2068:8:56",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32963,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2068:51:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32967,
            "nodeType": "VariableDeclaration",
            "src": "2126:116:56",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "2132:6:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32965,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2126:5:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7",
              "id": 32966,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2141:101:56",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bdfcfb749742c3093aa9581e8ef2ad1af416ff72460d5243d448d690ad5323e3",
                "typeString": "literal_string hex\"b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32970,
            "nodeType": "VariableDeclaration",
            "src": "2248:100:56",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2254:22:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32968,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2248:5:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c",
              "id": 32969,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2279:69:56",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5d67e6bdff9aea033a87277a58dc16c10570179f0e67537385b6a1ef5aafe5d7",
                "typeString": "literal_string hex\"010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32973,
            "nodeType": "VariableDeclaration",
            "src": "2354:215:56",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2360:9:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32971,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2354:5:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3",
              "id": 32972,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2372:197:56",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92410a21b5a1c3f6142a52b50473f8a72585ecd3f6161746c16dd03094aaf9d4",
                "typeString": "literal_string hex\"b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32976,
            "nodeType": "VariableDeclaration",
            "src": "2575:94:56",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2583:17:56",
            "scope": 34021,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32974,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2575:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834333632613038353937613136373037623466396364653838616132653964353164313737373562363734393037323630373263653838393731323864346332",
              "id": 32975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2603:66:56",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30479219748484076069933062356768087265247727824042884735859412202213029237954_by_1",
                "typeString": "int_const 3047...(69 digits omitted)...7954"
              },
              "value": "0x4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c2"
            },
            "visibility": "internal"
          },
          {
            "id": 33314,
            "nodeType": "FunctionDefinition",
            "src": "2676:3629:56",
            "nodes": [],
            "body": {
              "id": 33313,
              "nodeType": "Block",
              "src": "2700:3605:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32979,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32907,
                      "src": "2731:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$3618",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2746:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$3618_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 32981,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32980,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2750:12:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3618,
                            "src": "2750:12:56"
                          },
                          "referencedDeclaration": 3618,
                          "src": "2750:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 32983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2746:18:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$3618",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2731:33:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$3618",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 32985,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:33:56"
                },
                {
                  "expression": {
                    "id": 32992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32986,
                      "name": "factoryProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32910,
                      "src": "2793:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$62",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32990,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "2825:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2808:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FactoryProxy_$62_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FactoryProxy)"
                        },
                        "typeName": {
                          "id": 32988,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32987,
                            "name": "FactoryProxy",
                            "nameLocations": [
                              "2812:12:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 62,
                            "src": "2812:12:56"
                          },
                          "referencedDeclaration": 62,
                          "src": "2812:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FactoryProxy_$62",
                            "typeString": "contract FactoryProxy"
                          }
                        }
                      },
                      "id": 32991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2808:30:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$62",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "src": "2793:45:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryProxy_$62",
                      "typeString": "contract FactoryProxy"
                    }
                  },
                  "id": 32993,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:45:56"
                },
                {
                  "expression": {
                    "id": 33001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32994,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32925,
                      "src": "2891:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32998,
                              "name": "factoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32910,
                              "src": "2927:12:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryProxy_$62",
                                "typeString": "contract FactoryProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryProxy_$62",
                                "typeString": "contract FactoryProxy"
                              }
                            ],
                            "id": 32997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2919:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32996,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2919:7:56",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2919:21:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32995,
                        "name": "IStakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5931,
                        "src": "2899:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakingPoolFactory_$5931_$",
                          "typeString": "type(contract IStakingPoolFactory)"
                        }
                      },
                      "id": 33000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2899:42:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "src": "2891:50:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
                      "typeString": "contract IStakingPoolFactory"
                    }
                  },
                  "id": 33002,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:50:56"
                },
                {
                  "expression": {
                    "id": 33009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33003,
                      "name": "frensInitialiser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32898,
                      "src": "2976:16:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33007,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "3016:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2995:20:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensInitialiser_$1293_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensInitialiser)"
                        },
                        "typeName": {
                          "id": 33005,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33004,
                            "name": "FrensInitialiser",
                            "nameLocations": [
                              "2999:16:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1293,
                            "src": "2999:16:56"
                          },
                          "referencedDeclaration": 1293,
                          "src": "2999:16:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                            "typeString": "contract FrensInitialiser"
                          }
                        }
                      },
                      "id": 33008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2995:34:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "src": "2976:53:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                      "typeString": "contract FrensInitialiser"
                    }
                  },
                  "id": 33010,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:53:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33016,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3125:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 33015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3117:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3117:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3117:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33020,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3140:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 33019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3132:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3132:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3132:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33011,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "3108:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3111:5:56",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12495,
                      "src": "3108:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 33022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3108:38:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33023,
                  "nodeType": "ExpressionStatement",
                  "src": "3108:38:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33029,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32898,
                            "src": "3191:16:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 33028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3183:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3183:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3183:25:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73496e697469616c69736572",
                        "id": 33031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        },
                        "value": "FrensInitialiser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        }
                      ],
                      "expression": {
                        "id": 33024,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3154:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3171:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "3154:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3154:75:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33033,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:75:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33039,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32898,
                            "src": "3280:16:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 33038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3272:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3272:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3272:25:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3299:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33034,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3237:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3254:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "3237:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:67:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33043,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:67:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33047,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32940,
                        "src": "3380:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5353565265676973747279",
                        "id": 33048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        },
                        "value": "SSVRegistry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        }
                      ],
                      "expression": {
                        "id": 33044,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3343:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3360:19:56",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1254,
                      "src": "3343:36:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:71:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33050,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:71:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33054,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32937,
                        "src": "3495:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "4465706f736974436f6e7472616374",
                        "id": 33055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3504:17:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        },
                        "value": "DepositContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        }
                      ],
                      "expression": {
                        "id": 33051,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3458:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3475:19:56",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1254,
                      "src": "3458:36:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3458:64:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33057,
                  "nodeType": "ExpressionStatement",
                  "src": "3458:64:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33061,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32943,
                        "src": "3591:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "454e53",
                        "id": 33062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3603:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        },
                        "value": "ENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        }
                      ],
                      "expression": {
                        "id": 33058,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3554:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3571:19:56",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1254,
                      "src": "3554:36:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3554:55:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33064,
                  "nodeType": "ExpressionStatement",
                  "src": "3554:55:56"
                },
                {
                  "expression": {
                    "id": 33071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33065,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32922,
                      "src": "3645:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33069,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "3681:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3662:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensPoolShare_$2686_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 33067,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33066,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3666:14:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2686,
                            "src": "3666:14:56"
                          },
                          "referencedDeclaration": 2686,
                          "src": "3666:14:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 33070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3662:32:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3645:49:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 33072,
                  "nodeType": "ExpressionStatement",
                  "src": "3645:49:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33078,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "3771:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 33077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3763:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33076,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3763:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3763:23:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265",
                        "id": 33080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3788:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        },
                        "value": "FrensPoolShare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        }
                      ],
                      "expression": {
                        "id": 33073,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3734:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3751:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "3734:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3734:71:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33082,
                  "nodeType": "ExpressionStatement",
                  "src": "3734:71:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33088,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "3856:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 33087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3848:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3848:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3848:23:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3873:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33083,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "3813:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3830:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "3813:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:66:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33092,
                  "nodeType": "ExpressionStatement",
                  "src": "3813:66:56"
                },
                {
                  "expression": {
                    "id": 33099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33093,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32913,
                      "src": "3910:18:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33097,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "3954:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3931:22:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_StakingPoolFactory_$5009_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 33095,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33094,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3935:18:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5009,
                            "src": "3935:18:56"
                          },
                          "referencedDeclaration": 5009,
                          "src": "3935:18:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 33098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3931:36:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3910:57:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 33100,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:57:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33106,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32913,
                            "src": "4039:18:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 33105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4031:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4031:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4031:27:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67506f6f6c466163746f7279",
                        "id": 33108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:20:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        },
                        "value": "StakingPoolFactory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        }
                      ],
                      "expression": {
                        "id": 33101,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4002:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4019:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "4002:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4002:79:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33110,
                  "nodeType": "ExpressionStatement",
                  "src": "4002:79:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33116,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32913,
                            "src": "4132:18:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$5009",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 33115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4124:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4124:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4124:27:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33111,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4089:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4106:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "4089:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4089:69:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33120,
                  "nodeType": "ExpressionStatement",
                  "src": "4089:69:56"
                },
                {
                  "expression": {
                    "id": 33127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33121,
                      "name": "frensClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32928,
                      "src": "4188:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$1109",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33125,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "4216:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4201:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensClaim_$1109_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensClaim)"
                        },
                        "typeName": {
                          "id": 33123,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33122,
                            "name": "FrensClaim",
                            "nameLocations": [
                              "4205:10:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1109,
                            "src": "4205:10:56"
                          },
                          "referencedDeclaration": 1109,
                          "src": "4205:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensClaim_$1109",
                            "typeString": "contract FrensClaim"
                          }
                        }
                      },
                      "id": 33126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4201:28:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$1109",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "src": "4188:41:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensClaim_$1109",
                      "typeString": "contract FrensClaim"
                    }
                  },
                  "id": 33128,
                  "nodeType": "ExpressionStatement",
                  "src": "4188:41:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33134,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32928,
                            "src": "4300:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$1109",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$1109",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 33133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4292:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4292:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4292:19:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73436c61696d",
                        "id": 33136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4313:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        },
                        "value": "FrensClaim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        }
                      ],
                      "expression": {
                        "id": 33129,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4263:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4280:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "4263:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:63:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33138,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:63:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33144,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32928,
                            "src": "4377:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$1109",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$1109",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 33143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4369:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4369:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4369:19:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4390:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33139,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4334:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4351:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "4334:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4334:61:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33148,
                  "nodeType": "ExpressionStatement",
                  "src": "4334:61:56"
                },
                {
                  "expression": {
                    "id": 33155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33149,
                      "name": "frensPoolSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32931,
                      "src": "4429:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                        "typeString": "contract FrensPoolSetter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33153,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "4467:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4447:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensPoolSetter_$2422_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolSetter)"
                        },
                        "typeName": {
                          "id": 33151,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33150,
                            "name": "FrensPoolSetter",
                            "nameLocations": [
                              "4451:15:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2422,
                            "src": "4451:15:56"
                          },
                          "referencedDeclaration": 2422,
                          "src": "4451:15:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                            "typeString": "contract FrensPoolSetter"
                          }
                        }
                      },
                      "id": 33154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4447:33:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                        "typeString": "contract FrensPoolSetter"
                      }
                    },
                    "src": "4429:51:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                      "typeString": "contract FrensPoolSetter"
                    }
                  },
                  "id": 33156,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:51:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33162,
                            "name": "frensPoolSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32931,
                            "src": "4555:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                              "typeString": "contract FrensPoolSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                              "typeString": "contract FrensPoolSetter"
                            }
                          ],
                          "id": 33161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4547:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4547:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4547:24:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c536574746572",
                        "id": 33164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4573:17:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45b002fb55a01b34a6c58e4d710b50ebbce7cf0354e418a1b19e16023b42cc4a",
                          "typeString": "literal_string \"FrensPoolSetter\""
                        },
                        "value": "FrensPoolSetter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45b002fb55a01b34a6c58e4d710b50ebbce7cf0354e418a1b19e16023b42cc4a",
                          "typeString": "literal_string \"FrensPoolSetter\""
                        }
                      ],
                      "expression": {
                        "id": 33157,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4518:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4535:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "4518:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4518:73:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33166,
                  "nodeType": "ExpressionStatement",
                  "src": "4518:73:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33172,
                            "name": "frensPoolSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32931,
                            "src": "4642:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                              "typeString": "contract FrensPoolSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$2422",
                              "typeString": "contract FrensPoolSetter"
                            }
                          ],
                          "id": 33171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4634:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4634:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4634:24:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4660:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33167,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4599:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4616:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "4599:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4599:66:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33176,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:66:56"
                },
                {
                  "expression": {
                    "id": 33183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33177,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32901,
                      "src": "4699:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33181,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "4737:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4717:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensMetaHelper_$1935_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 33179,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33178,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "4721:15:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1935,
                            "src": "4721:15:56"
                          },
                          "referencedDeclaration": 1935,
                          "src": "4721:15:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 33182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4717:33:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "4699:51:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 33184,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:51:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33190,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32901,
                            "src": "4825:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 33189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4817:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4817:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4817:24:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d65746148656c706572",
                        "id": 33192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4843:17:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        },
                        "value": "FrensMetaHelper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        }
                      ],
                      "expression": {
                        "id": 33185,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4788:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4805:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "4788:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:73:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33194,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:73:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33200,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32901,
                            "src": "4912:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1935",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 33199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4904:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33198,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4904:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4904:24:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4930:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33195,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "4869:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4886:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "4869:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4869:67:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33204,
                  "nodeType": "ExpressionStatement",
                  "src": "4869:67:56"
                },
                {
                  "expression": {
                    "id": 33211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33205,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32904,
                      "src": "4968:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33209,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "5020:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4993:26:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensPoolShareTokenURI_$2988_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 33207,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33206,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4997:22:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2988,
                            "src": "4997:22:56"
                          },
                          "referencedDeclaration": 2988,
                          "src": "4997:22:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 33210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4993:40:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "4968:65:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 33212,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:65:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33218,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32904,
                            "src": "5106:22:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 33217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5098:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5098:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5098:31:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                        "id": 33220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5131:24:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        },
                        "value": "FrensPoolShareTokenURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        }
                      ],
                      "expression": {
                        "id": 33213,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "5069:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5086:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "5069:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:87:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33222,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:87:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33228,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32904,
                            "src": "5207:22:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2988",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 33227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5199:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5199:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5199:31:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5232:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33223,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "5164:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5181:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "5164:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5164:74:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33232,
                  "nodeType": "ExpressionStatement",
                  "src": "5164:74:56"
                },
                {
                  "expression": {
                    "id": 33239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33233,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32895,
                      "src": "5264:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$242",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33237,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32907,
                          "src": "5288:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3618",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5275:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5599_$returns$_t_contract$_FrensArt_$242_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 33235,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33234,
                            "name": "FrensArt",
                            "nameLocations": [
                              "5279:8:56"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 242,
                            "src": "5279:8:56"
                          },
                          "referencedDeclaration": 242,
                          "src": "5279:8:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$242",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 33238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5275:26:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$242",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "5264:37:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$242",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 33240,
                  "nodeType": "ExpressionStatement",
                  "src": "5264:37:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33246,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32895,
                            "src": "5369:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 33245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5361:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33244,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5361:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5361:17:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73417274",
                        "id": 33248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5380:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        },
                        "value": "FrensArt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        }
                      ],
                      "expression": {
                        "id": 33241,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "5332:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5349:11:56",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "5332:28:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5332:59:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33250,
                  "nodeType": "ExpressionStatement",
                  "src": "5332:59:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33256,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32895,
                            "src": "5442:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$242",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 33255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5434:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33254,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5434:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5434:17:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5453:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33251,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32898,
                        "src": "5399:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1293",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5416:17:56",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "5399:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5399:60:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33260,
                  "nodeType": "ExpressionStatement",
                  "src": "5399:60:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33266,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5558:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 33265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5550:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5550:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5550:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33270,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5573:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 33269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5565:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5565:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5565:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "5541:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5544:5:56",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12495,
                      "src": "5541:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 33272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5541:38:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33273,
                  "nodeType": "ExpressionStatement",
                  "src": "5541:38:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33274,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32907,
                        "src": "5587:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$3618",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 33276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5600:17:56",
                      "memberName": "setDeployedStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3184,
                      "src": "5587:30:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5587:32:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33278,
                  "nodeType": "ExpressionStatement",
                  "src": "5587:32:56"
                },
                {
                  "assignments": [
                    33280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33280,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5688:4:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33313,
                      "src": "5680:12:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33279,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5680:7:56",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33283,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32952,
                        "src": "5709:9:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5720:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33281,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32925,
                        "src": "5696:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 33282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5702:6:56",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5930,
                      "src": "5696:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 33285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5696:66:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5679:83:56"
                },
                {
                  "expression": {
                    "id": 33294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33287,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32916,
                      "src": "5802:11:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4909",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33291,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33280,
                              "src": "5836:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5828:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 33289,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5828:8:56",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5828:13:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 33288,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "5816:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$4909_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 33293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5816:26:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4909",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "5802:40:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4909",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 33295,
                  "nodeType": "ExpressionStatement",
                  "src": "5802:40:56"
                },
                {
                  "assignments": [
                    33297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33297,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "6029:5:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33313,
                      "src": "6021:13:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33296,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6021:7:56",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33303,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33300,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32952,
                        "src": "6051:9:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6062:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33298,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32925,
                        "src": "6038:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$5931",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 33299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6044:6:56",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5930,
                      "src": "6038:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 33302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6038:66:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6020:84:56"
                },
                {
                  "expression": {
                    "id": 33311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33304,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32919,
                      "src": "6144:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4909",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33308,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33297,
                              "src": "6179:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6171:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 33306,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6171:8:56",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6171:14:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 33305,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "6159:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$4909_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 33310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6159:27:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4909",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6144:42:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4909",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 33312,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:42:56"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2685:5:56",
            "parameters": {
              "id": 32977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2690:2:56"
            },
            "returnParameters": {
              "id": 32978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2700:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33337,
            "nodeType": "FunctionDefinition",
            "src": "6311:146:56",
            "nodes": [],
            "body": {
              "id": 33336,
              "nodeType": "Block",
              "src": "6349:108:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33318,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "6362:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33317,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "6357:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6357:11:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33320,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:11:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c696420506f6f6c",
                        "id": 33324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6392:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37ca368ac1df11530b6ea17ba67c80aaedb32310c29cd8124ebb0d882cd3866a",
                          "typeString": "literal_string \"Invalid Pool\""
                        },
                        "value": "Invalid Pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37ca368ac1df11530b6ea17ba67c80aaedb32310c29cd8124ebb0d882cd3866a",
                          "typeString": "literal_string \"Invalid Pool\""
                        }
                      ],
                      "expression": {
                        "id": 33321,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "6376:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6379:12:56",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12524,
                      "src": "6376:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6376:31:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33326,
                  "nodeType": "ExpressionStatement",
                  "src": "6376:31:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33332,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32958,
                            "src": "6443:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 33331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6435:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33330,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6435:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6435:14:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33327,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "6415:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6430:4:56",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2482,
                      "src": "6415:19:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 33334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6415:35:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33335,
                  "nodeType": "ExpressionStatement",
                  "src": "6415:35:56"
                }
              ]
            },
            "functionSelector": "796a773d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintingDirectly",
            "nameLocation": "6320:19:56",
            "parameters": {
              "id": 33315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:2:56"
            },
            "returnParameters": {
              "id": 33316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6349:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33414,
            "nodeType": "FunctionDefinition",
            "src": "6463:589:56",
            "nodes": [],
            "body": {
              "id": 33413,
              "nodeType": "Block",
              "src": "6493:559:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33341,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "6511:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33340,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8545,
                        8566,
                        8590,
                        8614
                      ],
                      "referencedDeclaration": 8545,
                      "src": "6501:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6501:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33343,
                  "nodeType": "ExpressionStatement",
                  "src": "6501:16:56"
                },
                {
                  "assignments": [
                    33345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33345,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6530:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33413,
                      "src": "6525:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33344,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6525:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33347,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6534:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6525:10:56"
                },
                {
                  "body": {
                    "id": 33411,
                    "nodeType": "Block",
                    "src": "6559:487:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33351,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "6644:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6656:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "6644:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6677:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6644:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6644:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33357,
                        "nodeType": "ExpressionStatement",
                        "src": "6644:37:56"
                      },
                      {
                        "assignments": [
                          33359
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33359,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6698:2:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33411,
                            "src": "6693:7:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33358,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6693:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33367,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33362,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32958,
                              "src": "6738:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33363,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33345,
                                "src": "6745:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 33364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6747:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6745:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33360,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "6703:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6718:19:56",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30317,
                            "src": "6703:34:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6703:46:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6693:56:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33369,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33359,
                                "src": "6770:2:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 33370,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33345,
                                "src": "6776:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6770:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33368,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6209,
                              6230
                            ],
                            "referencedDeclaration": 6209,
                            "src": "6759:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6759:20:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33373,
                        "nodeType": "ExpressionStatement",
                        "src": "6759:20:56"
                      },
                      {
                        "assignments": [
                          33375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33375,
                            "mutability": "mutable",
                            "name": "shouldBeZero",
                            "nameLocation": "6798:12:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33411,
                            "src": "6790:20:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 33374,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6790:7:56",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33380,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33378,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33345,
                              "src": "6840:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33376,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "6813:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6828:11:56",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29555,
                            "src": "6813:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 33379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6813:29:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6790:52:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 33384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6869:1:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 33383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6861:7:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33382,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6861:7:56",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6861:10:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33386,
                              "name": "shouldBeZero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33375,
                              "src": "6873:12:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33381,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "6852:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6852:34:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33388,
                        "nodeType": "ExpressionStatement",
                        "src": "6852:34:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33392,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32964,
                              "src": "6920:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 33393,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33345,
                              "src": "6925:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33389,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "6897:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6912:7:56",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29534,
                            "src": "6897:22:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 33394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6897:30:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33395,
                        "nodeType": "ExpressionStatement",
                        "src": "6897:30:56"
                      },
                      {
                        "assignments": [
                          33397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33397,
                            "mutability": "mutable",
                            "name": "shouldBeBob",
                            "nameLocation": "6945:11:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33411,
                            "src": "6937:19:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 33396,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6937:7:56",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33402,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33400,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33345,
                              "src": "6986:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33398,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "6959:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6974:11:56",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29555,
                            "src": "6959:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 33401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6959:29:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6937:51:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33404,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32964,
                              "src": "7007:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 33405,
                              "name": "shouldBeBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33397,
                              "src": "7012:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33403,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "6998:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6998:26:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33407,
                        "nodeType": "ExpressionStatement",
                        "src": "6998:26:56"
                      },
                      {
                        "expression": {
                          "id": 33409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7034:3:56",
                          "subExpression": {
                            "id": 33408,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33345,
                            "src": "7034:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33410,
                        "nodeType": "ExpressionStatement",
                        "src": "7034:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33348,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33345,
                      "src": "6550:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 33349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6554:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6550:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33412,
                  "nodeType": "WhileStatement",
                  "src": "6543:503:56"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "6472:11:56",
            "parameters": {
              "id": 33338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6483:2:56"
            },
            "returnParameters": {
              "id": 33339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6493:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33469,
            "nodeType": "FunctionDefinition",
            "src": "7058:369:56",
            "nodes": [],
            "body": {
              "id": 33468,
              "nodeType": "Block",
              "src": "7090:337:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33418,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "7108:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33417,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8545,
                        8566,
                        8590,
                        8614
                      ],
                      "referencedDeclaration": 8545,
                      "src": "7098:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7098:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33420,
                  "nodeType": "ExpressionStatement",
                  "src": "7098:16:56"
                },
                {
                  "assignments": [
                    33422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33422,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7127:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33468,
                      "src": "7122:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33421,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7122:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33424,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7131:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7122:10:56"
                },
                {
                  "body": {
                    "id": 33466,
                    "nodeType": "Block",
                    "src": "7156:265:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33428,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "7166:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7178:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "7166:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7199:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7166:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7166:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33434,
                        "nodeType": "ExpressionStatement",
                        "src": "7166:37:56"
                      },
                      {
                        "assignments": [
                          33436
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33436,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "7218:2:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33466,
                            "src": "7213:7:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33435,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7213:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33444,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33439,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32958,
                              "src": "7258:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33440,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33422,
                                "src": "7265:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 33441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7267:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7265:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33437,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "7223:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7238:19:56",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30317,
                            "src": "7223:34:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7223:46:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7213:56:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33446,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33436,
                                "src": "7290:2:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 33447,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33422,
                                "src": "7296:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7290:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33445,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6209,
                              6230
                            ],
                            "referencedDeclaration": 6209,
                            "src": "7279:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7279:20:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33450,
                        "nodeType": "ExpressionStatement",
                        "src": "7279:20:56"
                      },
                      {
                        "assignments": [
                          33452
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33452,
                            "mutability": "mutable",
                            "name": "balanceOfAlice",
                            "nameLocation": "7314:14:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33466,
                            "src": "7309:19:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33451,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7309:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33457,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33455,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32958,
                              "src": "7356:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33453,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "7331:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7346:9:56",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29392,
                            "src": "7331:24:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 33456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7331:31:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7309:53:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33459,
                              "name": "balanceOfAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33452,
                              "src": "7381:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33460,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33422,
                              "src": "7397:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33458,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6454,
                            "src": "7372:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7372:27:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33462,
                        "nodeType": "ExpressionStatement",
                        "src": "7372:27:56"
                      },
                      {
                        "expression": {
                          "id": 33464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7409:3:56",
                          "subExpression": {
                            "id": 33463,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33422,
                            "src": "7409:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33465,
                        "nodeType": "ExpressionStatement",
                        "src": "7409:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33425,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33422,
                      "src": "7147:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 33426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7151:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "7147:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33467,
                  "nodeType": "WhileStatement",
                  "src": "7140:281:56"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "7067:13:56",
            "parameters": {
              "id": 33415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7080:2:56"
            },
            "returnParameters": {
              "id": 33416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7090:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33510,
            "nodeType": "FunctionDefinition",
            "src": "7433:278:56",
            "nodes": [],
            "body": {
              "id": 33509,
              "nodeType": "Block",
              "src": "7462:249:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33473,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "7480:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33472,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8545,
                        8566,
                        8590,
                        8614
                      ],
                      "referencedDeclaration": 8545,
                      "src": "7470:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7470:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33475,
                  "nodeType": "ExpressionStatement",
                  "src": "7470:16:56"
                },
                {
                  "assignments": [
                    33477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33477,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7506:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33509,
                      "src": "7501:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33476,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7501:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33479,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7510:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7501:10:56"
                },
                {
                  "body": {
                    "id": 33507,
                    "nodeType": "Block",
                    "src": "7536:162:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 33486,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33477,
                                  "src": "7580:1:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 33484,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32922,
                                  "src": "7558:14:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 33485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7573:6:56",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2494,
                                "src": "7558:21:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 33487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7558:24:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33483,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9057,
                              9071
                            ],
                            "referencedDeclaration": 9057,
                            "src": "7546:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7546:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33489,
                        "nodeType": "ExpressionStatement",
                        "src": "7546:37:56"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33490,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "7593:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7605:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "7593:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7626:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7593:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7593:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33496,
                        "nodeType": "ExpressionStatement",
                        "src": "7593:37:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 33500,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33477,
                                  "src": "7673:1:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 33498,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32922,
                                  "src": "7651:14:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 33499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7666:6:56",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2494,
                                "src": "7651:21:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 33501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7651:24:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33497,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6209,
                              6230
                            ],
                            "referencedDeclaration": 6209,
                            "src": "7640:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7640:36:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33503,
                        "nodeType": "ExpressionStatement",
                        "src": "7640:36:56"
                      },
                      {
                        "expression": {
                          "id": 33505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7686:3:56",
                          "subExpression": {
                            "id": 33504,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33477,
                            "src": "7686:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33506,
                        "nodeType": "ExpressionStatement",
                        "src": "7686:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33480,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33477,
                      "src": "7527:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 33481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7531:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "7527:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33508,
                  "nodeType": "WhileStatement",
                  "src": "7520:178:56"
                }
              ]
            },
            "functionSelector": "524ad495",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testexists",
            "nameLocation": "7442:10:56",
            "parameters": {
              "id": 33470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7452:2:56"
            },
            "returnParameters": {
              "id": 33471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7462:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33602,
            "nodeType": "FunctionDefinition",
            "src": "7717:697:56",
            "nodes": [],
            "body": {
              "id": 33601,
              "nodeType": "Block",
              "src": "7751:663:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33514,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "7769:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33513,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8545,
                        8566,
                        8590,
                        8614
                      ],
                      "referencedDeclaration": 8545,
                      "src": "7759:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7759:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33516,
                  "nodeType": "ExpressionStatement",
                  "src": "7759:16:56"
                },
                {
                  "assignments": [
                    33518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33518,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7788:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33601,
                      "src": "7783:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33517,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7783:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33520,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7792:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7783:10:56"
                },
                {
                  "body": {
                    "id": 33599,
                    "nodeType": "Block",
                    "src": "7817:591:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33524,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "7827:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7839:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "7827:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7860:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7827:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7827:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33530,
                        "nodeType": "ExpressionStatement",
                        "src": "7827:37:56"
                      },
                      {
                        "assignments": [
                          33532
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33532,
                            "mutability": "mutable",
                            "name": "sbStakingPool",
                            "nameLocation": "7882:13:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33599,
                            "src": "7874:21:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 33531,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7874:7:56",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33537,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33535,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33518,
                              "src": "7925:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33533,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "7898:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7913:11:56",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2512,
                            "src": "7898:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 33536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7898:29:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7874:53:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 33541,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32916,
                                  "src": "7954:11:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4909",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4909",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7946:7:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33539,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7946:7:56",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7946:20:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33543,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33532,
                              "src": "7968:13:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33538,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "7937:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7937:45:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33545,
                        "nodeType": "ExpressionStatement",
                        "src": "7937:45:56"
                      },
                      {
                        "expression": {
                          "id": 33547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7992:3:56",
                          "subExpression": {
                            "id": 33546,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33518,
                            "src": "7992:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33548,
                        "nodeType": "ExpressionStatement",
                        "src": "7992:3:56"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33549,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32919,
                                "src": "8005:12:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8018:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "8005:26:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8039:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8005:36:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8005:38:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33555,
                        "nodeType": "ExpressionStatement",
                        "src": "8005:38:56"
                      },
                      {
                        "assignments": [
                          33557
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33557,
                            "mutability": "mutable",
                            "name": "sbStakingPool2",
                            "nameLocation": "8061:14:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33599,
                            "src": "8053:22:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 33556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8053:7:56",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33562,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33560,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33518,
                              "src": "8105:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33558,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "8078:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8093:11:56",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2512,
                            "src": "8078:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 33561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8078:29:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8053:54:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 33566,
                                  "name": "stakingPool2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32919,
                                  "src": "8134:12:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4909",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4909",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8126:7:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33564,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8126:7:56",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8126:21:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33568,
                              "name": "sbStakingPool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33557,
                              "src": "8149:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33563,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "8117:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8117:47:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33570,
                        "nodeType": "ExpressionStatement",
                        "src": "8117:47:56"
                      },
                      {
                        "expression": {
                          "id": 33572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8174:3:56",
                          "subExpression": {
                            "id": 33571,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33518,
                            "src": "8174:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33573,
                        "nodeType": "ExpressionStatement",
                        "src": "8174:3:56"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33574,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "8187:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8199:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "8187:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8220:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8187:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8187:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33580,
                        "nodeType": "ExpressionStatement",
                        "src": "8187:37:56"
                      },
                      {
                        "expression": {
                          "id": 33586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33581,
                            "name": "sbStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33532,
                            "src": "8285:13:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 33584,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33518,
                                "src": "8328:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 33582,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32922,
                                "src": "8301:14:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 33583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8316:11:56",
                              "memberName": "getPoolById",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2512,
                              "src": "8301:26:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 33585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8301:29:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8285:45:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33587,
                        "nodeType": "ExpressionStatement",
                        "src": "8285:45:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 33591,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32916,
                                  "src": "8357:11:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4909",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4909",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8349:7:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33589,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8349:7:56",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8349:20:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 33593,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33532,
                              "src": "8371:13:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33588,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "8340:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8340:45:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33595,
                        "nodeType": "ExpressionStatement",
                        "src": "8340:45:56"
                      },
                      {
                        "expression": {
                          "id": 33597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8395:3:56",
                          "subExpression": {
                            "id": 33596,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33518,
                            "src": "8395:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33598,
                        "nodeType": "ExpressionStatement",
                        "src": "8395:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33521,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33518,
                      "src": "7808:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 33522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7812:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "7808:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33600,
                  "nodeType": "WhileStatement",
                  "src": "7801:607:56"
                }
              ]
            },
            "functionSelector": "87496250",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPoolById",
            "nameLocation": "7726:15:56",
            "parameters": {
              "id": 33511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7741:2:56"
            },
            "returnParameters": {
              "id": 33512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7751:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33652,
            "nodeType": "FunctionDefinition",
            "src": "8420:357:56",
            "nodes": [],
            "body": {
              "id": 33651,
              "nodeType": "Block",
              "src": "8459:318:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33606,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "8477:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33605,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8545,
                        8566,
                        8590,
                        8614
                      ],
                      "referencedDeclaration": 8545,
                      "src": "8467:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33608,
                  "nodeType": "ExpressionStatement",
                  "src": "8467:16:56"
                },
                {
                  "assignments": [
                    33610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33610,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "8496:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33651,
                      "src": "8491:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33609,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8491:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33612,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8500:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8491:10:56"
                },
                {
                  "body": {
                    "id": 33626,
                    "nodeType": "Block",
                    "src": "8524:69:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33616,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "8534:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8546:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "8534:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8567:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8534:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8534:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33622,
                        "nodeType": "ExpressionStatement",
                        "src": "8534:37:56"
                      },
                      {
                        "expression": {
                          "id": 33624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8581:3:56",
                          "subExpression": {
                            "id": 33623,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33610,
                            "src": "8581:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33625,
                        "nodeType": "ExpressionStatement",
                        "src": "8581:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33613,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33610,
                      "src": "8516:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3634",
                      "id": 33614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8520:2:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "8516:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33627,
                  "nodeType": "WhileStatement",
                  "src": "8509:84:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33631,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32958,
                            "src": "8644:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 33632,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32964,
                            "src": "8651:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 33629,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "8612:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8627:16:56",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29590,
                          "src": "8612:31:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 33633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8612:43:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33628,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9057,
                        9071
                      ],
                      "referencedDeclaration": 9057,
                      "src": "8600:11:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:56:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33635,
                  "nodeType": "ExpressionStatement",
                  "src": "8600:56:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33639,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "8697:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8702:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33636,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "8664:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8679:17:56",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29572,
                      "src": "8664:32:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:43:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33642,
                  "nodeType": "ExpressionStatement",
                  "src": "8664:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33646,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32958,
                            "src": "8758:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 33647,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32964,
                            "src": "8765:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 33644,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "8726:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8741:16:56",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29590,
                          "src": "8726:31:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 33648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8726:43:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33643,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6209,
                        6230
                      ],
                      "referencedDeclaration": 6209,
                      "src": "8715:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8715:55:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33650,
                  "nodeType": "ExpressionStatement",
                  "src": "8715:55:56"
                }
              ]
            },
            "functionSelector": "09d26b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIsApprovedForAll",
            "nameLocation": "8429:20:56",
            "parameters": {
              "id": 33603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8449:2:56"
            },
            "returnParameters": {
              "id": 33604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8459:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33702,
            "nodeType": "FunctionDefinition",
            "src": "8783:330:56",
            "nodes": [],
            "body": {
              "id": 33701,
              "nodeType": "Block",
              "src": "8811:302:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33658,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8836:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 33657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8828:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33656,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8828:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8828:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33660,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "8843:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8858:5:56",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29199,
                          "src": "8843:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 33662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8843:22:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33655,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9107,
                        9132,
                        9145,
                        9161,
                        9203,
                        9245,
                        9287,
                        9324,
                        9361,
                        9398,
                        6260,
                        6285,
                        6315,
                        6340,
                        6399,
                        6424,
                        6454,
                        6479,
                        7579,
                        7614
                      ],
                      "referencedDeclaration": 6260,
                      "src": "8819:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8819:47:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33664,
                  "nodeType": "ExpressionStatement",
                  "src": "8819:47:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33666,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "8879:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33665,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "8874:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8874:11:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33668,
                  "nodeType": "ExpressionStatement",
                  "src": "8874:11:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 33672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8909:34:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 33669,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "8893:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8896:12:56",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12524,
                      "src": "8893:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8893:51:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33674,
                  "nodeType": "ExpressionStatement",
                  "src": "8893:51:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33678,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "8985:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 33675,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "8952:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8967:17:56",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29250,
                      "src": "8952:32:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 33679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8952:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33680,
                  "nodeType": "ExpressionStatement",
                  "src": "8952:37:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33684,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9010:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$34021",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 33683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9002:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33682,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9002:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9002:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33681,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "8997:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8997:19:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33687,
                  "nodeType": "ExpressionStatement",
                  "src": "8997:19:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33691,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "9057:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 33688,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "9024:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9039:17:56",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29250,
                      "src": "9024:32:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 33692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9024:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33693,
                  "nodeType": "ExpressionStatement",
                  "src": "9024:37:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33695,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "9078:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33696,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "9083:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9098:5:56",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29199,
                          "src": "9083:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 33698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9083:22:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33694,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9107,
                        9132,
                        9145,
                        9161,
                        9203,
                        9245,
                        9287,
                        9324,
                        9361,
                        9398,
                        6260,
                        6285,
                        6315,
                        6340,
                        6399,
                        6424,
                        6454,
                        6479,
                        7579,
                        7614
                      ],
                      "referencedDeclaration": 6260,
                      "src": "9069:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9069:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33700,
                  "nodeType": "ExpressionStatement",
                  "src": "9069:37:56"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "8792:9:56",
            "parameters": {
              "id": 33653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8801:2:56"
            },
            "returnParameters": {
              "id": 33654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8811:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33793,
            "nodeType": "FunctionDefinition",
            "src": "9119:620:56",
            "nodes": [],
            "body": {
              "id": 33792,
              "nodeType": "Block",
              "src": "9149:590:56",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33706,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "9162:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33792,
                      "src": "9157:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33705,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9157:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33708,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9166:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9157:10:56"
                },
                {
                  "body": {
                    "id": 33790,
                    "nodeType": "Block",
                    "src": "9191:542:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33713,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32958,
                              "src": "9206:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33712,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8455,
                              8476,
                              8500,
                              8524
                            ],
                            "referencedDeclaration": 8455,
                            "src": "9201:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9201:11:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33715,
                        "nodeType": "ExpressionStatement",
                        "src": "9201:11:56"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33716,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "9222:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9234:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "9222:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9255:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9222:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9222:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33722,
                        "nodeType": "ExpressionStatement",
                        "src": "9222:37:56"
                      },
                      {
                        "assignments": [
                          33724
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33724,
                            "mutability": "mutable",
                            "name": "sbAlice",
                            "nameLocation": "9277:7:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33790,
                            "src": "9269:15:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 33723,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9269:7:56",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33729,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33727,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33706,
                              "src": "9310:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33725,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "9287:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9302:7:56",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29420,
                            "src": "9287:22:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 33728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9287:25:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9269:43:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33731,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32958,
                              "src": "9331:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 33732,
                              "name": "sbAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33724,
                              "src": "9338:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33730,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "9322:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9322:24:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33734,
                        "nodeType": "ExpressionStatement",
                        "src": "9322:24:56"
                      },
                      {
                        "expression": {
                          "id": 33736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9356:3:56",
                          "subExpression": {
                            "id": 33735,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33706,
                            "src": "9356:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33737,
                        "nodeType": "ExpressionStatement",
                        "src": "9356:3:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33739,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32964,
                              "src": "9374:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33738,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8455,
                              8476,
                              8500,
                              8524
                            ],
                            "referencedDeclaration": 8455,
                            "src": "9369:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9369:9:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33741,
                        "nodeType": "ExpressionStatement",
                        "src": "9369:9:56"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33742,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32919,
                                "src": "9388:12:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9401:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "9388:26:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9422:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9388:36:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9388:38:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33748,
                        "nodeType": "ExpressionStatement",
                        "src": "9388:38:56"
                      },
                      {
                        "assignments": [
                          33750
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33750,
                            "mutability": "mutable",
                            "name": "sbBob",
                            "nameLocation": "9444:5:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33790,
                            "src": "9436:13:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 33749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9436:7:56",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33755,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33753,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33706,
                              "src": "9475:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33751,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "9452:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9467:7:56",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29420,
                            "src": "9452:22:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 33754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9452:25:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9436:41:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33757,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32964,
                              "src": "9496:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 33758,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33750,
                              "src": "9501:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33756,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "9487:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9487:20:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33760,
                        "nodeType": "ExpressionStatement",
                        "src": "9487:20:56"
                      },
                      {
                        "expression": {
                          "id": 33762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9517:3:56",
                          "subExpression": {
                            "id": 33761,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33706,
                            "src": "9517:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33763,
                        "nodeType": "ExpressionStatement",
                        "src": "9517:3:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33765,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32964,
                              "src": "9535:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33764,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8455,
                              8476,
                              8500,
                              8524
                            ],
                            "referencedDeclaration": 8455,
                            "src": "9530:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9530:9:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33767,
                        "nodeType": "ExpressionStatement",
                        "src": "9530:9:56"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33768,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "9549:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9561:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "9549:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9582:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9549:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9549:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33774,
                        "nodeType": "ExpressionStatement",
                        "src": "9549:37:56"
                      },
                      {
                        "expression": {
                          "id": 33780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33775,
                            "name": "sbBob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33750,
                            "src": "9647:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 33778,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33706,
                                "src": "9678:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 33776,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32922,
                                "src": "9655:14:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 33777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9670:7:56",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29420,
                              "src": "9655:22:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 33779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9655:25:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9647:33:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33781,
                        "nodeType": "ExpressionStatement",
                        "src": "9647:33:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33783,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32964,
                              "src": "9699:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 33784,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33750,
                              "src": "9704:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33782,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9107,
                              9132,
                              9145,
                              9161,
                              9203,
                              9245,
                              9287,
                              9324,
                              9361,
                              9398,
                              6260,
                              6285,
                              6315,
                              6340,
                              6399,
                              6424,
                              6454,
                              6479,
                              7579,
                              7614
                            ],
                            "referencedDeclaration": 6260,
                            "src": "9690:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 33785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9690:20:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33786,
                        "nodeType": "ExpressionStatement",
                        "src": "9690:20:56"
                      },
                      {
                        "expression": {
                          "id": 33788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9720:3:56",
                          "subExpression": {
                            "id": 33787,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33706,
                            "src": "9720:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33789,
                        "nodeType": "ExpressionStatement",
                        "src": "9720:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33709,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33706,
                      "src": "9182:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 33710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9186:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "9182:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33791,
                  "nodeType": "WhileStatement",
                  "src": "9175:558:56"
                }
              ]
            },
            "functionSelector": "71a29bb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnerOf",
            "nameLocation": "9128:11:56",
            "parameters": {
              "id": 33703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9139:2:56"
            },
            "returnParameters": {
              "id": 33704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9149:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33917,
            "nodeType": "FunctionDefinition",
            "src": "9745:865:56",
            "nodes": [],
            "body": {
              "id": 33916,
              "nodeType": "Block",
              "src": "9784:826:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33797,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "9797:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33796,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "9792:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9792:11:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33799,
                  "nodeType": "ExpressionStatement",
                  "src": "9792:11:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33800,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32916,
                          "src": "9811:11:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4909",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9823:13:56",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3863,
                        "src": "9811:25:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 33803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9844:1:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9811:35:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9811:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33806,
                  "nodeType": "ExpressionStatement",
                  "src": "9811:37:56"
                },
                {
                  "assignments": [
                    33808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33808,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9861:2:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33916,
                      "src": "9856:7:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33807,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9856:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33814,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33811,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "9901:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 33812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9908:1:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 33809,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "9866:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9881:19:56",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30317,
                      "src": "9866:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 33813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9866:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9856:54:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33816,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "9927:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33819,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33808,
                            "src": "9957:2:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33817,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "9934:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9949:7:56",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29420,
                          "src": "9934:22:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 33820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9934:26:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33815,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9107,
                        9132,
                        9145,
                        9161,
                        9203,
                        9245,
                        9287,
                        9324,
                        9361,
                        9398,
                        6260,
                        6285,
                        6315,
                        6340,
                        6399,
                        6424,
                        6454,
                        6479,
                        7579,
                        7614
                      ],
                      "referencedDeclaration": 6260,
                      "src": "9918:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9918:43:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33822,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33824,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "9974:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33823,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "9969:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9969:9:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33826,
                  "nodeType": "ExpressionStatement",
                  "src": "9969:9:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 33830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10002:51:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "expression": {
                        "id": 33827,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "9986:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9989:12:56",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12524,
                      "src": "9986:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9986:68:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33832,
                  "nodeType": "ExpressionStatement",
                  "src": "9986:68:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33836,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "10094:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 33837,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10101:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 33838,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33808,
                        "src": "10106:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33833,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "10062:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10077:16:56",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29636,
                      "src": "10062:31:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 33839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10062:47:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33840,
                  "nodeType": "ExpressionStatement",
                  "src": "10062:47:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33842,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "10122:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33841,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "10117:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10117:11:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33844,
                  "nodeType": "ExpressionStatement",
                  "src": "10117:11:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33848,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "10168:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 33849,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10175:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 33850,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33808,
                        "src": "10180:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33845,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "10136:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10151:16:56",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29636,
                      "src": "10136:31:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 33851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10136:47:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33852,
                  "nodeType": "ExpressionStatement",
                  "src": "10136:47:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33854,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10200:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33857,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33808,
                            "src": "10228:2:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33855,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "10205:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10220:7:56",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29420,
                          "src": "10205:22:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 33858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10205:26:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33853,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9107,
                        9132,
                        9145,
                        9161,
                        9203,
                        9245,
                        9287,
                        9324,
                        9361,
                        9398,
                        6260,
                        6285,
                        6315,
                        6340,
                        6399,
                        6424,
                        6454,
                        6479,
                        7579,
                        7614
                      ],
                      "referencedDeclaration": 6260,
                      "src": "10191:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10191:41:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33860,
                  "nodeType": "ExpressionStatement",
                  "src": "10191:41:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33862,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10245:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33861,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "10240:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10240:9:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33864,
                  "nodeType": "ExpressionStatement",
                  "src": "10240:9:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 33868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10273:52:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 33865,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "10257:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10260:12:56",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12524,
                      "src": "10257:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10257:69:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33870,
                  "nodeType": "ExpressionStatement",
                  "src": "10257:69:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33874,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10366:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33877,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32907,
                            "src": "10379:12:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensStorage_$3618",
                              "typeString": "contract FrensStorage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensStorage_$3618",
                              "typeString": "contract FrensStorage"
                            }
                          ],
                          "id": 33876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10371:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33875,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10371:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10371:21:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33879,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33808,
                        "src": "10394:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33871,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "10334:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10349:16:56",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29636,
                      "src": "10334:31:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 33880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10334:63:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33881,
                  "nodeType": "ExpressionStatement",
                  "src": "10334:63:56"
                },
                {
                  "assignments": [
                    33884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33884,
                      "mutability": "mutable",
                      "name": "nftReceiver",
                      "nameLocation": "10418:11:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33916,
                      "src": "10406:23:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftReceiver_$39182",
                        "typeString": "contract NftReceiver"
                      },
                      "typeName": {
                        "id": 33883,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33882,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "10406:11:56"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39182,
                          "src": "10406:11:56"
                        },
                        "referencedDeclaration": 39182,
                        "src": "10406:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$39182",
                          "typeString": "contract NftReceiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33889,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10432:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NftReceiver_$39182_$",
                        "typeString": "function () returns (contract NftReceiver)"
                      },
                      "typeName": {
                        "id": 33886,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33885,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "10436:11:56"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39182,
                          "src": "10436:11:56"
                        },
                        "referencedDeclaration": 39182,
                        "src": "10436:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$39182",
                          "typeString": "contract NftReceiver"
                        }
                      }
                    },
                    "id": 33888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10432:17:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftReceiver_$39182",
                      "typeString": "contract NftReceiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10406:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33891,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10462:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33890,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "10457:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10457:9:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33893,
                  "nodeType": "ExpressionStatement",
                  "src": "10457:9:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33897,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "10506:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33900,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33884,
                            "src": "10519:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$39182",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$39182",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 33899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10511:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33898,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10511:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10511:20:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33902,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33808,
                        "src": "10533:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33894,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "10474:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10489:16:56",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29636,
                      "src": "10474:31:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 33903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10474:62:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33904,
                  "nodeType": "ExpressionStatement",
                  "src": "10474:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33908,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33884,
                            "src": "10561:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$39182",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$39182",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 33907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10553:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10553:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10553:20:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33912,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33808,
                            "src": "10598:2:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33910,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "10575:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10590:7:56",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29420,
                          "src": "10575:22:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 33913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10575:26:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33905,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9107,
                        9132,
                        9145,
                        9161,
                        9203,
                        9245,
                        9287,
                        9324,
                        9361,
                        9398,
                        6260,
                        6285,
                        6315,
                        6340,
                        6399,
                        6424,
                        6454,
                        6479,
                        7579,
                        7614
                      ],
                      "referencedDeclaration": 6260,
                      "src": "10544:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10544:58:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33915,
                  "nodeType": "ExpressionStatement",
                  "src": "10544:58:56"
                }
              ]
            },
            "functionSelector": "90ec5d96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSafeTransferFrom",
            "nameLocation": "9754:20:56",
            "parameters": {
              "id": 33794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9774:2:56"
            },
            "returnParameters": {
              "id": 33795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9784:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33959,
            "nodeType": "FunctionDefinition",
            "src": "10616:258:56",
            "nodes": [],
            "body": {
              "id": 33958,
              "nodeType": "Block",
              "src": "10651:223:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33921,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "10669:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33920,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8545,
                        8566,
                        8590,
                        8614
                      ],
                      "referencedDeclaration": 8545,
                      "src": "10659:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:16:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33923,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:16:56"
                },
                {
                  "assignments": [
                    33925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33925,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "10688:1:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 33958,
                      "src": "10683:6:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33924,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10683:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33927,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 33926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10692:1:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10683:10:56"
                },
                {
                  "body": {
                    "id": 33956,
                    "nodeType": "Block",
                    "src": "10717:151:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33931,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32916,
                                "src": "10727:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4909",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10739:13:56",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3863,
                              "src": "10727:25:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 33934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10760:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "10727:35:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10727:37:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33937,
                        "nodeType": "ExpressionStatement",
                        "src": "10727:37:56"
                      },
                      {
                        "assignments": [
                          33939
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33939,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "10779:2:56",
                            "nodeType": "VariableDeclaration",
                            "scope": 33956,
                            "src": "10774:7:56",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33938,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10774:4:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33946,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33942,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33925,
                                "src": "10812:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 33943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10814:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "10812:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33940,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32922,
                              "src": "10784:14:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10799:12:56",
                            "memberName": "tokenByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30351,
                            "src": "10784:27:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10784:32:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10774:42:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33948,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33939,
                                "src": "10837:2:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 33949,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33925,
                                "src": "10843:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10837:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33947,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6209,
                              6230
                            ],
                            "referencedDeclaration": 6209,
                            "src": "10826:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10826:20:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33952,
                        "nodeType": "ExpressionStatement",
                        "src": "10826:20:56"
                      },
                      {
                        "expression": {
                          "id": 33954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10856:3:56",
                          "subExpression": {
                            "id": 33953,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33925,
                            "src": "10856:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33955,
                        "nodeType": "ExpressionStatement",
                        "src": "10856:3:56"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33928,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33925,
                      "src": "10708:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 33929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10712:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "10708:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33957,
                  "nodeType": "WhileStatement",
                  "src": "10701:167:56"
                }
              ]
            },
            "functionSelector": "6a7179c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenByIndex",
            "nameLocation": "10625:16:56",
            "parameters": {
              "id": 33918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10641:2:56"
            },
            "returnParameters": {
              "id": 33919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10651:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34020,
            "nodeType": "FunctionDefinition",
            "src": "10880:440:56",
            "nodes": [],
            "body": {
              "id": 34019,
              "nodeType": "Block",
              "src": "10915:405:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33963,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "10928:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33962,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "10923:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10923:11:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33965,
                  "nodeType": "ExpressionStatement",
                  "src": "10923:11:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33966,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32916,
                          "src": "10942:11:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4909",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10954:13:56",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3863,
                        "src": "10942:25:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 33969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10975:1:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10942:35:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10942:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33972,
                  "nodeType": "ExpressionStatement",
                  "src": "10942:37:56"
                },
                {
                  "assignments": [
                    33974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33974,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "10992:2:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 34019,
                      "src": "10987:7:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33973,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10987:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33980,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33977,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "11032:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 33978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11039:1:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 33975,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "10997:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 33976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11012:19:56",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30317,
                      "src": "10997:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 33979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10997:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10987:54:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33982,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "11058:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33985,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33974,
                            "src": "11088:2:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33983,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32922,
                            "src": "11065:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 33984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11080:7:56",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29420,
                          "src": "11065:22:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 33986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11065:26:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33981,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9107,
                        9132,
                        9145,
                        9161,
                        9203,
                        9245,
                        9287,
                        9324,
                        9361,
                        9398,
                        6260,
                        6285,
                        6315,
                        6340,
                        6399,
                        6424,
                        6454,
                        6479,
                        7579,
                        7614
                      ],
                      "referencedDeclaration": 6260,
                      "src": "11049:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11049:43:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33988,
                  "nodeType": "ExpressionStatement",
                  "src": "11049:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33990,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "11105:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33989,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "11100:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11100:9:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33992,
                  "nodeType": "ExpressionStatement",
                  "src": "11100:9:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 33996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11133:51:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "expression": {
                        "id": 33993,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7757,
                        "src": "11117:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13038",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11120:12:56",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12524,
                      "src": "11117:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11117:68:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33998,
                  "nodeType": "ExpressionStatement",
                  "src": "11117:68:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34002,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "11221:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 34003,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "11228:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 34004,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33974,
                        "src": "11233:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33999,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "11193:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 34001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11208:12:56",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29617,
                      "src": "11193:27:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 34005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11193:43:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34006,
                  "nodeType": "ExpressionStatement",
                  "src": "11193:43:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34008,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "11249:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34007,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8455,
                        8476,
                        8500,
                        8524
                      ],
                      "referencedDeclaration": 8455,
                      "src": "11244:4:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11244:11:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34010,
                  "nodeType": "ExpressionStatement",
                  "src": "11244:11:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34014,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32958,
                        "src": "11291:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 34015,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32964,
                        "src": "11298:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 34016,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33974,
                        "src": "11303:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34011,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32922,
                        "src": "11263:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$2686",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 34013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11278:12:56",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29617,
                      "src": "11263:27:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 34017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11263:43:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34018,
                  "nodeType": "ExpressionStatement",
                  "src": "11263:43:56"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "10889:16:56",
            "parameters": {
              "id": 33960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10905:2:56"
            },
            "returnParameters": {
              "id": 33961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10915:0:56"
            },
            "scope": 34021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32891,
              "name": "Test",
              "nameLocations": [
                "892:4:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10919,
              "src": "892:4:56"
            },
            "id": 32892,
            "nodeType": "InheritanceSpecifier",
            "src": "892:4:56"
          }
        ],
        "canonicalName": "MiscTest",
        "contractDependencies": [
          62,
          242,
          1109,
          1293,
          1935,
          2422,
          2686,
          2988,
          3618,
          5009,
          39182
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34021,
          10919,
          7989,
          7726
        ],
        "name": "MiscTest",
        "nameLocation": "880:8:56",
        "scope": 34022,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 56
}