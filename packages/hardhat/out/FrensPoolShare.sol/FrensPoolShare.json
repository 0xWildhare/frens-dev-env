{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "frensStorage_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getPoolById",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolByIds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "renderTokenById",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608034620004045762002b8f90813803601f1991601f91838382011682019460018060401b039183871083881117620003ee57808492604098895283396020938491810103126200040457516001600160a01b0380821692909183900362000404576200006b62000409565b94600b86526a4652454e5320536861726560a81b858701526200008d62000409565b60058152644652454e5360d81b86820152865197838911620003ee576000988954986001998a81811c91168015620003e3575b8a821014620003cf579081868493116200037c575b5089908683116001146200031b578c926200030f575b5050600019600383901b1c191690891b1789555b8151938411620002fb5787548881811c91168015620002f0575b88821014620002dc57908184869594931162000285575b5087928411600114620002245750889262000218575b5050600019600383901b1c191690851b1784555b600b80546001600160a01b03198082163390811790935592167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600c541617600c55828052600a8152838320338452815260ff848420541615620001cb575b835161276590816200042a8239f35b828052600a815283832090338452528282209060ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001bc565b01519050388062000146565b888a52878a20899590939291168a5b898282106200026e575050841162000254575b505050811b0184556200015a565b015160001960f88460031b161c1916905538808062000246565b8385015186558b9790950194938401930162000233565b9091929350888a52878a208480870160051c8201928a8810620002d2575b9187968c92969594930160051c01915b828110620002c357505062000130565b8c81558796508b9101620002b3565b92508192620002a3565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858d95168380528c8420935b8d8282106200036557505084116200034b575b505050811b018955620000ff565b015160001960f88460031b161c191690553880806200033d565b8385015186558f979095019493840193016200032a565b9091508b8052898c208680850160051c8201928c8610620003c5575b918d91869594930160051c01915b828110620003b6575050620000d5565b8e81558594508d9101620003a6565b9250819262000398565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620003ee5760405256fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461028a57806306fdde0314610281578063081812fc14610278578063095ea7b31461026f5780630bc59b381461025d57806318160ddd146102665780631dc82a751461025d57806323b872dd14610254578063248a9ca31461024b5780632f2ff15d146102425780632f745c591461023957806336568abe1461023057806342842e0e1461022757806342966c681461021e5780634f558e79146102155780634f6ccce71461020c5780636352211e146102035780636a627842146101fa57806370a08231146101f1578063715018a6146101e85780638da5cb5b146101df57806391d14854146101d657806395d89b41146101cd578063a217fddf146101c4578063a22cb465146101bb578063a2d6c6da146101b2578063b88d4fde146101a9578063c87b56dd146101a0578063d539139314610197578063d547741f1461018e578063e985e9c5146101855763f2fde38b1461017d57600080fd5b61000e61129b565b5061000e61123e565b5061000e6111f9565b5061000e6111bd565b5061000e6110ad565b5061000e61101b565b5061000e610e60565b5061000e610d6f565b5061000e610d48565b5061000e610c86565b5061000e610c2f565b5061000e610c05565b5061000e610ba3565b5061000e610b73565b5061000e610aab565b5061000e610a8c565b5061000e6109e0565b5061000e6109a4565b5061000e610917565b5061000e6108ee565b5061000e610857565b5061000e61079f565b5061000e6106cf565b5061000e61069f565b5061000e610675565b5061000e6105e5565b5061000e61061a565b5061000e6104f1565b5061000e6104af565b5061000e6103a4565b5061000e6102a5565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e5760206004356102c581610293565b63ffffffff60e01b16637965db0b60e01b81149081156102eb575b506040519015158152f35b63780e9d6360e01b811491508115610305575b50386102e0565b6380ac58cd60e01b811491508115610337575b8115610326575b50386102fe565b6301ffc9a760e01b1490503861031f565b635b5e139f60e01b81149150610318565b60005b83811061035b5750506000910152565b818101518382015260200161034b565b9060209161038481518092818552858086019101610348565b601f01601f1916010190565b9060206103a192818152019061036b565b90565b503461000e576000806003193601126104ac57604051908080549060019180831c928082169283156104a2575b602092838610851461048e57858852602088019490811561046d5750600114610415575b6104118761040581890382610fce565b60405191829182610390565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b83861061045c57505050910190506104058261041138806103f5565b805485870152948201948101610440565b60ff191685525050505090151560051b0190506104058261041138806103f5565b634e487b7160e01b82526022600452602482fd5b93607f16936103d1565b80fd5b503461000e57602036600319011261000e5760206104ce6004356117ac565b6040516001600160a01b039091168152f35b6001600160a01b0381160361000e57565b503461000e57604036600319011261000e5760043561050f816104e0565b60243561051b816116c2565b916001600160a01b0380841690821681146105965761054d9361054891331490811561054f575b5061173a565b6120f4565b005b6001600160a01b0316600090815260056020526040902061059091506105899033905b9060018060a01b0316600052602052604060002090565b5460ff1690565b38610542565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b503461000e57602036600319011261000e57600435600052600d602052602060018060a01b0360406000205416604051908152f35b503461000e57600036600319011261000e576020600854604051908152f35b600052600d602052604060002090565b606090600319011261000e57600435610661816104e0565b9060243561066e816104e0565b9060443590565b503461000e5761054d61068736610649565b9161069a6106958433611945565b61183e565b611f7a565b503461000e57602036600319011261000e57600435600052600a6020526020600160406000200154604051908152f35b503461000e57604036600319011261000e576004356024356106f0816104e0565b600091808352600a60205261070d600160408520015433906113ce565b808352600a602090815260408085206001600160a01b0385166000908152925290205460ff161561073c578280f35b808352600a602090815260408085206001600160a01b038516600090815292529020805460ff1916600117905533916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b503461000e57604036600319011261000e576004356107bd816104e0565b602435906107ca8161164a565b8210156107fe576001600160a01b031660009081526006602090815260408083209383529281529082902054915191825290f35b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461000e57604036600319011261000e57602435610875816104e0565b336001600160a01b038216036108915761054d90600435611523565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461000e5761054d61090036610649565b906040519261090e84610fa5565b600084526118a4565b503461000e57602036600319011261000e576004356000818152600d60205260409020546001600160a01b031633036109535761054d90611e30565b60405162461bcd60e51b815260206004820152602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b503461000e57602036600319011261000e576004356000908152600260209081526040909120546001600160a01b031615156040519015158152f35b503461000e57602036600319011261000e57600435600854811015610a325760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30154604051908152602090f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b503461000e57602036600319011261000e5760206104ce6004356116c2565b503461000e57602036600319011261000e57600435610ac9816104e0565b3360009081527faa1d7351356c4ddc11907b1ee0660f579cfdf507235af2ae01ecd22a4b7ceaae602052604081205490919060ff1615610b2e57600854808352600d6020526040832080546001600160a01b03191633179055610b2b91611a30565b80f35b60405162461bcd60e51b815260206004820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152606490fd5b503461000e57602036600319011261000e576020610b9b600435610b96816104e0565b61164a565b604051908152f35b503461000e576000806003193601126104ac57600b5481906001600160a01b03811690610bd13383146115b6565b6001600160a01b031916600b557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b503461000e57604036600319011261000e57602060ff610c7a602435610c54816104e0565b600435600052600a845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e576000806003193601126104ac576040519080600190815480831c92808216928315610d3e575b602092838610851461048e57858852602088019490811561046d5750600114610ce5576104118761040581890382610fce565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838610610d2d57505050910190506104058261041138806103f5565b805485870152948201948101610d11565b93607f1693610cb2565b503461000e57600036600319011261000e57602060405160008152f35b8015150361000e57565b503461000e57604036600319011261000e57600435610d8d816104e0565b602435610d9981610d65565b6001600160a01b03821691338314610e1b5781610dd8610de99233600052600560205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b503461000e57602036600319011261000e57610411610efb600060043560046020610eb7610eab610eab610e9e86600052600d602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b604051638ae578fd60e01b815292839182905afa908115610f81575b8391610f53575b50604051808095819463516b636d60e11b8352600483019190602083019252565b03916001600160a01b03165afa908115610f46575b600091610f25575b5060405191829182610390565b610f40913d8091833e610f388183610fce565b810190611358565b38610f18565b610f4e61134b565b610f10565b610f74915060203d8111610f7a575b610f6c8183610fce565b810190611336565b38610eda565b503d610f62565b610f8961134b565b610ed3565b50634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610fc157604052565b610fc9610f8e565b604052565b90601f8019910116810190811067ffffffffffffffff821117610fc157604052565b60209067ffffffffffffffff811161100e575b601f01601f19160190565b611016610f8e565b611003565b503461000e57608036600319011261000e57600435611039816104e0565b602435611045816104e0565b6064359167ffffffffffffffff831161000e573660238401121561000e5782600401359161107283610ff0565b926110806040519485610fce565b808452366024828701011161000e57602081600092602461054d98018388013785010152604435916118a4565b503461000e57602036600319011261000e57600c5461041190611157906020906110df906001600160a01b0316610eab565b6040516f636f6e74726163742e6164647265737360801b838201908152754672656e73506f6f6c5368617265546f6b656e55524960501b60108201529061113381602684015b03601f198101835282610fce565b5190209060405180809581946321f8a72160e01b8352600483019190602083019252565b03915afa9081156111b0575b600091611192575b5060405163c87b56dd60e01b81526004803590820152906000908290818060248101610efb565b6111aa915060203d8111610f7a57610f6c8183610fce565b3861116b565b6111b861134b565b611163565b503461000e57600036600319011261000e5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b503461000e57604036600319011261000e5761054d60243560043561121d826104e0565b80600052600a60205261123960016040600020015433906113ce565b611523565b503461000e57604036600319011261000e57602060ff610c7a600435611263816104e0565b60243590611270826104e0565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b503461000e57602036600319011261000e576004356112b9816104e0565b600b546001600160a01b03906112d290821633146115b6565b8116156112e25761054d90611601565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b9081602091031261000e57516103a1816104e0565b506040513d6000823e3d90fd5b60208183031261000e5780519067ffffffffffffffff821161000e570181601f8201121561000e57805161138b81610ff0565b926113996040519485610fce565b8184526020828401011161000e576103a19160208085019101610348565b906113ca60209282815194859201610348565b0190565b9081600052600a60205260ff6113fa8260406000209060018060a01b0316600052602052604060002090565b541615611405575050565b6001600160a01b03169061141761259c565b916030611423846125d7565b53607861142f846125ed565b5360295b600181116114d4576114d061149b6114b88661112561145b886114568915612638565b612683565b611495604051958694611495602087016017907f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081520190565b906113b7565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b60405162461bcd60e51b815291829160048301610390565b0390fd5b9080600f61151192166010811015611516575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a61150784876125fe565b5360041c9161261d565b611433565b61151e6122f6565b6114e7565b600090808252600a60205260ff61154f84604085209060018060a01b0316600052602052604060002090565b541661155a57505050565b808252600a602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4565b156115bd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600b80546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b0316801561166a57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b6000908152600260205260409020546001600160a01b031680156116e35790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b1561174157565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b6000818152600260205260409020546001600160a01b0316156117e4576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561184557565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b916118d093916118cb936118bb6106958433611945565b6118c6838383611f7a565b6122ba565b611925565b565b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561192c57565b60405162461bcd60e51b8152806114d0600482016118d2565b6000828152600260205260409020546001600160a01b0316156119d65761196b826116c2565b6001600160a01b0382811682821681149490919085156119be575b505050821561199457505090565b6001600160a01b0316600090815260056020526040902060ff92506119b99190610572565b541690565b6119cb91929395506117ac565b161491388080611986565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b90604051611a3d81610fa5565b600081526001600160a01b038316918215611b4c576000818152600260205260409020546001600160a01b0316611b075783816118cb94611a81826118d098611c11565b6001600160a01b0383166000908152600360205260409020611aa38154611ba7565b9055611adc83611abd846000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121f9565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b50634e487b7160e01b600052601160045260246000fd5b9060018201809211611bb557565b6118d0611b90565b9081602091031261000e57516103a181610d65565b15611bd957565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90611c3891611c1f8261240d565b816001600160a01b038216611c3b576106399150612486565b50565b610639916123d5565b6001600160a01b0380821680159490939192611c8592908615611d365750611c6b8261240d565b80841680159583918715611d0e5750506106399150612486565b541691159081611d05575b50611c985750565b600460206118d09260405192838092630934355760e11b82525afa908115611cf8575b600091611cca575b5015611bd2565b611ceb915060203d8111611cf1575b611ce38183610fce565b810190611bbd565b38611cc3565b503d611cd9565b611d0061134b565b611cbb565b90501538611c90565b03611d26575b5050600052600d602052604060002090565b611d2f916123d5565b3881611d14565b8482168603611d46575b50611c6b565b611dba611d528261164a565b6000198101908111611e14575b611dab60009386855260076020526040852054838103611dc1575b5084611d90886000526007602052604060002090565b556001600160a01b0316600090815260066020526040902090565b90600052602052604060002090565b5538611d40565b8a8652600660205260408620848752602052611e0d604087205480611dfc84611dab8760018060a01b03166000526006602052604060002090565b556000526007602052604060002090565b5538611d7a565b611e1c611b90565b611d5f565b600019810191908211611bb557565b611e39816116c2565b611e43828261230d565b6000828152600d60205260409020546001600160a01b03918216911681151580611f1a575b611ee4575b50611e77826120a0565b6000908082526003602052604082208054906000198201918211611ed7575b5582825260026020526040822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b611edf611b90565b611e96565b60046020611f149260405192838092630934355760e11b82525afa908115611cf857600091611cca575015611bd2565b38611e6d565b506000611e68565b15611f2957565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90611f84836116c2565b6001600160a01b03838116929091821683900361204957611fde61202292821694611fb0861515611f22565b611fbb878483611c44565b611fc4876120a0565b6001600160a01b0316600090815260036020526040902090565b611fe88154611e21565b90556001600160a01b038116600090815260036020526040902061200c8154611ba7565b9055611abd856000526002602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b036120cd836116c2565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4565b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b038061212d846116c2565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b9081602091031261000e57516103a181610293565b6103a1939260809260018060a01b03168252600060208301526040820152816060820152019061036b565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526103a19291019061036b565b3d156121f4573d906121da82610ff0565b916121e86040519384610fce565b82523d6000602084013e565b606090565b909190803b156122b25761222b602091600093604051948580948193630a85bd0160e11b998a8452336004850161216d565b03926001600160a01b03165af160009181612282575b506122745761224e6121c9565b8051908161226f5760405162461bcd60e51b8152806114d0600482016118d2565b602001fd5b6001600160e01b0319161490565b6122a491925060203d81116122ab575b61229c8183610fce565b810190612158565b9038612241565b503d612292565b505050600190565b92909190823b156122ed5761222b926020926000604051809681958294630a85bd0160e11b9a8b85523360048601612198565b50505050600190565b50634e487b7160e01b600052603260045260246000fd5b6118d091906001600160a01b038116908161233257505061232d8161240d565b612486565b80611dab6123426123809361164a565b6000198101929083116123c8575b6000948686526007602052604086205490848203612386575b505084611d90876000526007602052604060002090565b55612486565b86526006602052604086208487526020526123c0604087205480611dfc84611dab8760018060a01b03166000526006602052604060002090565b553880612369565b6123d0611b90565b612350565b6040906123e18161164a565b9260009160018060a01b0316825260066020528282208483526020528083832055815260076020522055565b6008548160005260096020528060406000205568010000000000000000811015612479575b600181018060085581101561246c575b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6124746122f6565b612442565b612481610f8e565b612432565b60088054600019929083810181811161258f575b61253660009384928184526009602052846040852054911015612582575b8684526125257ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee2958681015490831015612575575b88865280837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301556000526009602052604060002090565b556000526009602052604060002090565b5582549384156125615784019380851015612554575b838352015555565b61255c6122f6565b61254c565b634e487b7160e01b83526031600452602483fd5b61257d6122f6565b6124ed565b61258a6122f6565b6124b8565b612597611b90565b61249a565b604051906060820182811067ffffffffffffffff8211176125ca575b604052602a8252604082602036910137565b6125d2610f8e565b6125b8565b6020908051156125e5570190565b6113ca6122f6565b6021908051600110156125e5570190565b90602091805182101561261057010190565b6126186122f6565b010190565b801561262b575b6000190190565b612633611b90565b612624565b1561263f57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906080820182811067ffffffffffffffff821117612722575b60405260428252606036602084013760306126b9836125d7565b5360786126c5836125ed565b536041905b600182116126dd576103a1915015612638565b80600f61270f92166010811015612715575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a61150784866125fe565b906126ca565b61271d6122f6565b6126ef565b61272a610f8e565b61269f56fea26469706673582212209f211b564111164b7b042da118936c9b0ff0047813d4d35ca240cac593956dd464736f6c63430008110033",
    "sourceMap": "577:2372:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;577:2372:3;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;577:2372:3;;;;;;:::i;:::-;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;-1:-1:-1;;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;577:2372:3;;;719:10:40;577:2372:3;;;;;;;;2410:40:31;;;;920:28:3;577:2372;;;920:28;577:2372;;;;2995:6:29;577:2372:3;;;;;719:10:40;577:2372:3;;;;;;;;;;6904:23:29;6900:149;;577:2372:3;;;;;;;;;;6900:149:29;577:2372:3;;;2995:6:29;577:2372:3;;;;;719:10:40;;577:2372:3;;;;;;;;;;;;;;;719:10:40;;;6998:40:29;;;;;6900:149;;;;;577:2372:3;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;-1:-1:-1;577:2372:3;;-1:-1:-1;577:2372:3;;;;;;;;;;-1:-1:-1;;;;;577:2372:3;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461028a57806306fdde0314610281578063081812fc14610278578063095ea7b31461026f5780630bc59b381461025d57806318160ddd146102665780631dc82a751461025d57806323b872dd14610254578063248a9ca31461024b5780632f2ff15d146102425780632f745c591461023957806336568abe1461023057806342842e0e1461022757806342966c681461021e5780634f558e79146102155780634f6ccce71461020c5780636352211e146102035780636a627842146101fa57806370a08231146101f1578063715018a6146101e85780638da5cb5b146101df57806391d14854146101d657806395d89b41146101cd578063a217fddf146101c4578063a22cb465146101bb578063a2d6c6da146101b2578063b88d4fde146101a9578063c87b56dd146101a0578063d539139314610197578063d547741f1461018e578063e985e9c5146101855763f2fde38b1461017d57600080fd5b61000e61129b565b5061000e61123e565b5061000e6111f9565b5061000e6111bd565b5061000e6110ad565b5061000e61101b565b5061000e610e60565b5061000e610d6f565b5061000e610d48565b5061000e610c86565b5061000e610c2f565b5061000e610c05565b5061000e610ba3565b5061000e610b73565b5061000e610aab565b5061000e610a8c565b5061000e6109e0565b5061000e6109a4565b5061000e610917565b5061000e6108ee565b5061000e610857565b5061000e61079f565b5061000e6106cf565b5061000e61069f565b5061000e610675565b5061000e6105e5565b5061000e61061a565b5061000e6104f1565b5061000e6104af565b5061000e6103a4565b5061000e6102a5565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e5760206004356102c581610293565b63ffffffff60e01b16637965db0b60e01b81149081156102eb575b506040519015158152f35b63780e9d6360e01b811491508115610305575b50386102e0565b6380ac58cd60e01b811491508115610337575b8115610326575b50386102fe565b6301ffc9a760e01b1490503861031f565b635b5e139f60e01b81149150610318565b60005b83811061035b5750506000910152565b818101518382015260200161034b565b9060209161038481518092818552858086019101610348565b601f01601f1916010190565b9060206103a192818152019061036b565b90565b503461000e576000806003193601126104ac57604051908080549060019180831c928082169283156104a2575b602092838610851461048e57858852602088019490811561046d5750600114610415575b6104118761040581890382610fce565b60405191829182610390565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b83861061045c57505050910190506104058261041138806103f5565b805485870152948201948101610440565b60ff191685525050505090151560051b0190506104058261041138806103f5565b634e487b7160e01b82526022600452602482fd5b93607f16936103d1565b80fd5b503461000e57602036600319011261000e5760206104ce6004356117ac565b6040516001600160a01b039091168152f35b6001600160a01b0381160361000e57565b503461000e57604036600319011261000e5760043561050f816104e0565b60243561051b816116c2565b916001600160a01b0380841690821681146105965761054d9361054891331490811561054f575b5061173a565b6120f4565b005b6001600160a01b0316600090815260056020526040902061059091506105899033905b9060018060a01b0316600052602052604060002090565b5460ff1690565b38610542565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b503461000e57602036600319011261000e57600435600052600d602052602060018060a01b0360406000205416604051908152f35b503461000e57600036600319011261000e576020600854604051908152f35b600052600d602052604060002090565b606090600319011261000e57600435610661816104e0565b9060243561066e816104e0565b9060443590565b503461000e5761054d61068736610649565b9161069a6106958433611945565b61183e565b611f7a565b503461000e57602036600319011261000e57600435600052600a6020526020600160406000200154604051908152f35b503461000e57604036600319011261000e576004356024356106f0816104e0565b600091808352600a60205261070d600160408520015433906113ce565b808352600a602090815260408085206001600160a01b0385166000908152925290205460ff161561073c578280f35b808352600a602090815260408085206001600160a01b038516600090815292529020805460ff1916600117905533916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b503461000e57604036600319011261000e576004356107bd816104e0565b602435906107ca8161164a565b8210156107fe576001600160a01b031660009081526006602090815260408083209383529281529082902054915191825290f35b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461000e57604036600319011261000e57602435610875816104e0565b336001600160a01b038216036108915761054d90600435611523565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461000e5761054d61090036610649565b906040519261090e84610fa5565b600084526118a4565b503461000e57602036600319011261000e576004356000818152600d60205260409020546001600160a01b031633036109535761054d90611e30565b60405162461bcd60e51b815260206004820152602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b503461000e57602036600319011261000e576004356000908152600260209081526040909120546001600160a01b031615156040519015158152f35b503461000e57602036600319011261000e57600435600854811015610a325760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30154604051908152602090f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b503461000e57602036600319011261000e5760206104ce6004356116c2565b503461000e57602036600319011261000e57600435610ac9816104e0565b3360009081527faa1d7351356c4ddc11907b1ee0660f579cfdf507235af2ae01ecd22a4b7ceaae602052604081205490919060ff1615610b2e57600854808352600d6020526040832080546001600160a01b03191633179055610b2b91611a30565b80f35b60405162461bcd60e51b815260206004820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152606490fd5b503461000e57602036600319011261000e576020610b9b600435610b96816104e0565b61164a565b604051908152f35b503461000e576000806003193601126104ac57600b5481906001600160a01b03811690610bd13383146115b6565b6001600160a01b031916600b557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b503461000e57604036600319011261000e57602060ff610c7a602435610c54816104e0565b600435600052600a845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e576000806003193601126104ac576040519080600190815480831c92808216928315610d3e575b602092838610851461048e57858852602088019490811561046d5750600114610ce5576104118761040581890382610fce565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838610610d2d57505050910190506104058261041138806103f5565b805485870152948201948101610d11565b93607f1693610cb2565b503461000e57600036600319011261000e57602060405160008152f35b8015150361000e57565b503461000e57604036600319011261000e57600435610d8d816104e0565b602435610d9981610d65565b6001600160a01b03821691338314610e1b5781610dd8610de99233600052600560205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b503461000e57602036600319011261000e57610411610efb600060043560046020610eb7610eab610eab610e9e86600052600d602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b604051638ae578fd60e01b815292839182905afa908115610f81575b8391610f53575b50604051808095819463516b636d60e11b8352600483019190602083019252565b03916001600160a01b03165afa908115610f46575b600091610f25575b5060405191829182610390565b610f40913d8091833e610f388183610fce565b810190611358565b38610f18565b610f4e61134b565b610f10565b610f74915060203d8111610f7a575b610f6c8183610fce565b810190611336565b38610eda565b503d610f62565b610f8961134b565b610ed3565b50634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610fc157604052565b610fc9610f8e565b604052565b90601f8019910116810190811067ffffffffffffffff821117610fc157604052565b60209067ffffffffffffffff811161100e575b601f01601f19160190565b611016610f8e565b611003565b503461000e57608036600319011261000e57600435611039816104e0565b602435611045816104e0565b6064359167ffffffffffffffff831161000e573660238401121561000e5782600401359161107283610ff0565b926110806040519485610fce565b808452366024828701011161000e57602081600092602461054d98018388013785010152604435916118a4565b503461000e57602036600319011261000e57600c5461041190611157906020906110df906001600160a01b0316610eab565b6040516f636f6e74726163742e6164647265737360801b838201908152754672656e73506f6f6c5368617265546f6b656e55524960501b60108201529061113381602684015b03601f198101835282610fce565b5190209060405180809581946321f8a72160e01b8352600483019190602083019252565b03915afa9081156111b0575b600091611192575b5060405163c87b56dd60e01b81526004803590820152906000908290818060248101610efb565b6111aa915060203d8111610f7a57610f6c8183610fce565b3861116b565b6111b861134b565b611163565b503461000e57600036600319011261000e5760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b503461000e57604036600319011261000e5761054d60243560043561121d826104e0565b80600052600a60205261123960016040600020015433906113ce565b611523565b503461000e57604036600319011261000e57602060ff610c7a600435611263816104e0565b60243590611270826104e0565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b503461000e57602036600319011261000e576004356112b9816104e0565b600b546001600160a01b03906112d290821633146115b6565b8116156112e25761054d90611601565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b9081602091031261000e57516103a1816104e0565b506040513d6000823e3d90fd5b60208183031261000e5780519067ffffffffffffffff821161000e570181601f8201121561000e57805161138b81610ff0565b926113996040519485610fce565b8184526020828401011161000e576103a19160208085019101610348565b906113ca60209282815194859201610348565b0190565b9081600052600a60205260ff6113fa8260406000209060018060a01b0316600052602052604060002090565b541615611405575050565b6001600160a01b03169061141761259c565b916030611423846125d7565b53607861142f846125ed565b5360295b600181116114d4576114d061149b6114b88661112561145b886114568915612638565b612683565b611495604051958694611495602087016017907f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081520190565b906113b7565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b60405162461bcd60e51b815291829160048301610390565b0390fd5b9080600f61151192166010811015611516575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a61150784876125fe565b5360041c9161261d565b611433565b61151e6122f6565b6114e7565b600090808252600a60205260ff61154f84604085209060018060a01b0316600052602052604060002090565b541661155a57505050565b808252600a602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4565b156115bd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600b80546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b0316801561166a57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b6000908152600260205260409020546001600160a01b031680156116e35790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b1561174157565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b6000818152600260205260409020546001600160a01b0316156117e4576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561184557565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b916118d093916118cb936118bb6106958433611945565b6118c6838383611f7a565b6122ba565b611925565b565b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561192c57565b60405162461bcd60e51b8152806114d0600482016118d2565b6000828152600260205260409020546001600160a01b0316156119d65761196b826116c2565b6001600160a01b0382811682821681149490919085156119be575b505050821561199457505090565b6001600160a01b0316600090815260056020526040902060ff92506119b99190610572565b541690565b6119cb91929395506117ac565b161491388080611986565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b90604051611a3d81610fa5565b600081526001600160a01b038316918215611b4c576000818152600260205260409020546001600160a01b0316611b075783816118cb94611a81826118d098611c11565b6001600160a01b0383166000908152600360205260409020611aa38154611ba7565b9055611adc83611abd846000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121f9565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b50634e487b7160e01b600052601160045260246000fd5b9060018201809211611bb557565b6118d0611b90565b9081602091031261000e57516103a181610d65565b15611bd957565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90611c3891611c1f8261240d565b816001600160a01b038216611c3b576106399150612486565b50565b610639916123d5565b6001600160a01b0380821680159490939192611c8592908615611d365750611c6b8261240d565b80841680159583918715611d0e5750506106399150612486565b541691159081611d05575b50611c985750565b600460206118d09260405192838092630934355760e11b82525afa908115611cf8575b600091611cca575b5015611bd2565b611ceb915060203d8111611cf1575b611ce38183610fce565b810190611bbd565b38611cc3565b503d611cd9565b611d0061134b565b611cbb565b90501538611c90565b03611d26575b5050600052600d602052604060002090565b611d2f916123d5565b3881611d14565b8482168603611d46575b50611c6b565b611dba611d528261164a565b6000198101908111611e14575b611dab60009386855260076020526040852054838103611dc1575b5084611d90886000526007602052604060002090565b556001600160a01b0316600090815260066020526040902090565b90600052602052604060002090565b5538611d40565b8a8652600660205260408620848752602052611e0d604087205480611dfc84611dab8760018060a01b03166000526006602052604060002090565b556000526007602052604060002090565b5538611d7a565b611e1c611b90565b611d5f565b600019810191908211611bb557565b611e39816116c2565b611e43828261230d565b6000828152600d60205260409020546001600160a01b03918216911681151580611f1a575b611ee4575b50611e77826120a0565b6000908082526003602052604082208054906000198201918211611ed7575b5582825260026020526040822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b611edf611b90565b611e96565b60046020611f149260405192838092630934355760e11b82525afa908115611cf857600091611cca575015611bd2565b38611e6d565b506000611e68565b15611f2957565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90611f84836116c2565b6001600160a01b03838116929091821683900361204957611fde61202292821694611fb0861515611f22565b611fbb878483611c44565b611fc4876120a0565b6001600160a01b0316600090815260036020526040902090565b611fe88154611e21565b90556001600160a01b038116600090815260036020526040902061200c8154611ba7565b9055611abd856000526002602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b036120cd836116c2565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4565b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b038061212d846116c2565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b9081602091031261000e57516103a181610293565b6103a1939260809260018060a01b03168252600060208301526040820152816060820152019061036b565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526103a19291019061036b565b3d156121f4573d906121da82610ff0565b916121e86040519384610fce565b82523d6000602084013e565b606090565b909190803b156122b25761222b602091600093604051948580948193630a85bd0160e11b998a8452336004850161216d565b03926001600160a01b03165af160009181612282575b506122745761224e6121c9565b8051908161226f5760405162461bcd60e51b8152806114d0600482016118d2565b602001fd5b6001600160e01b0319161490565b6122a491925060203d81116122ab575b61229c8183610fce565b810190612158565b9038612241565b503d612292565b505050600190565b92909190823b156122ed5761222b926020926000604051809681958294630a85bd0160e11b9a8b85523360048601612198565b50505050600190565b50634e487b7160e01b600052603260045260246000fd5b6118d091906001600160a01b038116908161233257505061232d8161240d565b612486565b80611dab6123426123809361164a565b6000198101929083116123c8575b6000948686526007602052604086205490848203612386575b505084611d90876000526007602052604060002090565b55612486565b86526006602052604086208487526020526123c0604087205480611dfc84611dab8760018060a01b03166000526006602052604060002090565b553880612369565b6123d0611b90565b612350565b6040906123e18161164a565b9260009160018060a01b0316825260066020528282208483526020528083832055815260076020522055565b6008548160005260096020528060406000205568010000000000000000811015612479575b600181018060085581101561246c575b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6124746122f6565b612442565b612481610f8e565b612432565b60088054600019929083810181811161258f575b61253660009384928184526009602052846040852054911015612582575b8684526125257ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee2958681015490831015612575575b88865280837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301556000526009602052604060002090565b556000526009602052604060002090565b5582549384156125615784019380851015612554575b838352015555565b61255c6122f6565b61254c565b634e487b7160e01b83526031600452602483fd5b61257d6122f6565b6124ed565b61258a6122f6565b6124b8565b612597611b90565b61249a565b604051906060820182811067ffffffffffffffff8211176125ca575b604052602a8252604082602036910137565b6125d2610f8e565b6125b8565b6020908051156125e5570190565b6113ca6122f6565b6021908051600110156125e5570190565b90602091805182101561261057010190565b6126186122f6565b010190565b801561262b575b6000190190565b612633611b90565b612624565b1561263f57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906080820182811067ffffffffffffffff821117612722575b60405260428252606036602084013760306126b9836125d7565b5360786126c5836125ed565b536041905b600182116126dd576103a1915015612638565b80600f61270f92166010811015612715575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a61150784866125fe565b906126ca565b61271d6122f6565b6126ef565b61272a610f8e565b61269f56fea26469706673582212209f211b564111164b7b042da118936c9b0ff0047813d4d35ca240cac593956dd464736f6c63430008110033",
    "sourceMap": "577:2372:3:-:0;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;577:2372:3;;;;;:::o;:::-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;;:::i;:::-;;;;;2728:32:29;;;2713:47;;:87;;;;;577:2372:3;;;;;;;;;;2713:87:29;-1:-1:-1;;;1115:50:36;;;-1:-1:-1;1115:90:36;;;;2713:87:29;;;;;1115:90:36;-1:-1:-1;;;1692:40:33;;;-1:-1:-1;1692:104:33;;;;1115:90:36;1692:156:33;;;;1115:90:36;;;;;1692:156:33;-1:-1:-1;;;937:40:42;;-1:-1:-1;1692:156:33;;;:104;-1:-1:-1;;;1748:48:33;;;-1:-1:-1;1692:104:33;;577:2372:3;;;;;;;;-1:-1:-1;;577:2372:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;577:2372:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;-1:-1:-1;;;;577:2372:3;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;577:2372:3;;;;;;;-1:-1:-1;;;;;577:2372:3;;;;;:::o;:::-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;;;3618:23:33;;;:::i;:::-;577:2372:3;-1:-1:-1;;;;;577:2372:3;;;;;;3659:11:33;;577:2372:3;;3908:7:33;719:10:40;3719:165:33;719:10:40;;3740:21:33;:62;;;;;577:2372:3;3719:165:33;;:::i;:::-;3908:7;:::i;:::-;577:2372:3;3740:62:33;-1:-1:-1;;;;;577:2372:3;;;;;4607:18:33;577:2372:3;;;;;4607:35:33;;-1:-1:-1;4607:35:33;;719:10:40;;4607:25:33;577:2372:3;;;;;;;;;;;;;;;;4607:35:33;577:2372:3;;;;;4607:35:33;3740:62;;;577:2372:3;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;-1:-1:-1;577:2372:3;1479:9;577:2372;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;1702:10:36;577:2372:3;;;;;;;;;;1479:9;577:2372;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;5026:7:33;577:2372:3;;;:::i;:::-;719:10:40;4892:103:33;4900:41;719:10:40;;4900:41:33;:::i;:::-;4892:103;:::i;:::-;5026:7;:::i;577:2372:3:-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;-1:-1:-1;577:2372:3;4069:6:29;577:2372:3;;;4069:22:29;577:2372:3;-1:-1:-1;577:2372:3;4069:22:29;577:2372:3;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;;;:::i;:::-;-1:-1:-1;577:2372:3;;;;4069:6:29;577:2372:3;;2507:12:29;4069:22;577:2372:3;;;4069:22:29;577:2372:3;719:10:40;2507:12:29;;:::i;:::-;577:2372:3;;;4069:6:29;577:2372:3;;;;;;;;-1:-1:-1;;;;;577:2372:3;;-1:-1:-1;577:2372:3;;;;;;;;;;6904:23:29;6900:149;;577:2372:3;;;6900:149:29;577:2372:3;;;4069:6:29;577:2372:3;;;;;;;;-1:-1:-1;;;;;577:2372:3;;-1:-1:-1;577:2372:3;;;;;;;;;-1:-1:-1;;577:2372:3;4069:22:29;577:2372:3;;;719:10:40;;-1:-1:-1;;;;;577:2372:3;;6998:40:29;;;;6900:149;;577:2372:3;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;;;1423:23:36;;;;:::i;:::-;1415:31;;577:2372:3;;;-1:-1:-1;;;;;577:2372:3;-1:-1:-1;577:2372:3;;;1511:12:36;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;719:10:40;-1:-1:-1;;;;;577:2372:3;;5460:23:29;577:2372:3;;5564:7:29;577:2372:3;;;5564:7:29;:::i;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;5240:39:33;577:2372:3;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5240:39:33;:::i;577:2372:3:-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;-1:-1:-1;577:2372:3;;;2579:9;577:2372;;;;;;-1:-1:-1;;;;;577:2372:3;2557:10;:41;577:2372;;2675:7;;;:::i;577:2372::-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;-1:-1:-1;577:2372:3;;;7232:7:33;577:2372:3;;;;;;;;;-1:-1:-1;;;;;577:2372:3;7232:30:33;;577:2372:3;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;1702:10:36;577:2372:3;1900:38:36;;577:2372:3;;;1702:10:36;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;1108:10;-1:-1:-1;577:2372:3;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;1702:10:36;577:2372:3;;;;1219:9;577:2372;;;;;;;-1:-1:-1;;;;;;577:2372:3;1108:10;577:2372;;;1288:3;;;:::i;:::-;577:2372;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1108:6:31;577:2372:3;;;-1:-1:-1;;;;;577:2372:3;;;1240:68:31;719:10:40;1248:23:31;;1240:68;:::i;:::-;-1:-1:-1;;;;;;577:2372:3;1108:6:31;577:2372:3;2410:40:31;;;;577:2372:3;;;;;;;;;-1:-1:-1;;577:2372:3;;;;1108:6:31;577:2372:3;;;-1:-1:-1;;;;;577:2372:3;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;2995:29:29;577:2372:3;;;;;:::i;:::-;;;-1:-1:-1;577:2372:3;2995:6:29;577:2372:3;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;2995:29:29;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2723:7:33;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2723:7:33;577:2372:3;;;-1:-1:-1;577:2372:3;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;577:2372:3;;;719:10:40;11442:17:33;;577:2372:3;;719:10:40;11499:35:33;:46;719:10:40;;-1:-1:-1;577:2372:3;11499:18:33;577:2372:3;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;11499:35:33;577:2372:3;;;;;;;;;;;;;;;11499:46:33;577:2372:3;;;;;;;719:10:40;;11560:41:33;;577:2372:3;;11560:41:33;577:2372:3;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;2065:28;-1:-1:-1;577:2372:3;;;;2031:15;1971:29;1479:14;;;577:2372;;1479:9;577:2372;;;;;;;1479:14;577:2372;-1:-1:-1;;;;;577:2372:3;;;1479:14;-1:-1:-1;;;;;577:2372:3;;;2031:15;577:2372;;-1:-1:-1;;;2031:17:3;;577:2372;;;;;2031:17;;;;;;;577:2372;2031:17;;;;577:2372;;;;;;;;;;;;2065:28;;577:2372;2065:28;;577:2372;;;;;;;;2065:28;;;-1:-1:-1;;;;;577:2372:3;2065:28;;;;;;;577:2372;-1:-1:-1;2065:28:3;;;577:2372;;;;;;;;;:::i;2065:28::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;2031:17;;;;577:2372;2031:17;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;577:2372;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;577:2372:3;;;;1704:12;577:2372;;;1704:98;;577:2372;;1704:23;;-1:-1:-1;;;;;577:2372:3;;;1704:23;577:2372;;-1:-1:-1;;;1738:62:3;;;577:2372;;;-1:-1:-1;;;577:2372:3;;;;1738:62;;577:2372;;;;;1738:62;577:2372;;1738:62;;;;;;:::i;:::-;577:2372;1728:73;;577:2372;;;;;;;;;;;1704:98;;577:2372;1704:98;;577:2372;;;;;;;;1704:98;;;;;;;;;;577:2372;-1:-1:-1;1704:98:3;;;577:2372;-1:-1:-1;577:2372:3;;-1:-1:-1;;;1820:35:3;;577:2372;;;1820:35;;;577:2372;;-1:-1:-1;;577:2372:3;;;;;;;1820:35;577:2372;1704:98;;;;577:2372;1704:98;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;577:2372;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;722:24;577:2372;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;4859:7:29;577:2372:3;;;;;;;:::i;:::-;;-1:-1:-1;577:2372:3;4069:6:29;577:2372:3;;2507:12:29;4069:22;577:2372:3;-1:-1:-1;577:2372:3;4069:22:29;577:2372:3;719:10:40;2507:12:29;;:::i;:::-;4859:7;:::i;577:2372:3:-;;;;;;;-1:-1:-1;;577:2372:3;;;;;;4607:35:33;577:2372:3;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;577:2372:3;4607:18:33;577:2372:3;;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:2372:3;;;;;;;;;:::i;:::-;1108:6:31;577:2372:3;-1:-1:-1;;;;;577:2372:3;1240:68:31;;577:2372:3;;719:10:40;1248:23:31;1240:68;:::i;:::-;577:2372:3;;2006:22:31;577:2372:3;;2100:8:31;;;:::i;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;3312:484:29:-;;577:2372:3;-1:-1:-1;577:2372:3;2995:6:29;577:2372:3;;;2995:29:29;577:2372:3;;-1:-1:-1;577:2372:3;;;;;;;;;;;;;;;;;2995:29:29;577:2372:3;;3391:23:29;3387:403;;3312:484;;:::o;3387:403::-;-1:-1:-1;;;;;577:2372:3;;1710:25:41;;:::i;:::-;1745:15;;;;;:::i;:::-;;1770;;;;:::i;:::-;;577:2372:3;1828:5:41;577:2372:3;1828:5:41;;;;3430:349:29;577:2372:3;3482:265:29;1944:10:41;577:2372:3;3687:38:29;1944:10:41;1936:55;1944:10;;1936:55;:::i;:::-;3687:38:29;:::i;:::-;577:2372:3;;;3482:265:29;;;577:2372:3;;3482:265:29;;577:2372:3;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;577:2372:3;;;;;;3482:265:29;577:2372:3;;-1:-1:-1;;;3430:349:29;;577:2372:3;;;;3430:349:29;;;:::i;:::-;;;;1835:3:41;1879:11;;1887:3;1835;1879:11;;1866:25;;;;;;1835:3;-1:-1:-1;;;1866:25:41;;1854:37;;;;:::i;:::-;;577:2372:3;;1835:3:41;;:::i;:::-;1800:26;;1866:25;;;:::i;:::-;;;7180:234:29;-1:-1:-1;577:2372:3;;;;2995:6:29;577:2372:3;;;2995:29:29;577:2372:3;;;;;;;;;;;;;;;;;;;;2995:29:29;577:2372:3;;7259:149:29;;7180:234;;;:::o;7259:149::-;577:2372:3;;;2995:6:29;577:2372:3;;;;;;;;-1:-1:-1;;;;;577:2372:3;;-1:-1:-1;577:2372:3;;;;;;;;;-1:-1:-1;;577:2372:3;;;719:10:40;;-1:-1:-1;;;;;577:2372:3;;7357:40:29;;;;7180:234::o;577:2372:3:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2270:187:31;2362:6;577:2372:3;;-1:-1:-1;;;;;577:2372:3;;;-1:-1:-1;;;;;;577:2372:3;;;;;;;;;;2410:40:31;-1:-1:-1;;2410:40:31;2270:187::o;1914:205:33:-;-1:-1:-1;;;;;577:2372:3;2013:19:33;;577:2372:3;;2030:1:33;577:2372:3;2096:9:33;577:2372:3;;;2030:1:33;577:2372:3;;1914:205:33;:::o;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;2176:235:33;-1:-1:-1;577:2372:3;;;2283:7:33;577:2372:3;;;;;;-1:-1:-1;;;;;577:2372:3;2317:19:33;;577:2372:3;;2176:235:33;:::o;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;3984:217:33;-1:-1:-1;577:2372:3;;;7232:7:33;577:2372:3;;;;;;-1:-1:-1;;;;;577:2372:3;7232:30:33;577:2372:3;;-1:-1:-1;577:2372:3;;;4170:15:33;577:2372:3;;;;;;-1:-1:-1;;;;;577:2372:3;;3984:217:33:o;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;5352:320:33;;6723:111;5352:320;;6731:48;5352:320;5513:103;5521:41;719:10:40;;5521:41:33;:::i;5513:103::-;6705:7;;;;;:::i;:::-;6731:48;:::i;:::-;6723:111;:::i;:::-;5352:320::o;577:2372:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;577:2372:3;;;;;;;;:::i;7427:344:33:-;-1:-1:-1;577:2372:3;;;7232:7:33;577:2372:3;;;;;;-1:-1:-1;;;;;577:2372:3;7232:30:33;577:2372:3;;7635:23:33;;;:::i;:::-;-1:-1:-1;;;;;577:2372:3;;;;;;7676:16:33;;;577:2372:3;;;7676:51:33;;;;7427:344;7676:87;;;;;;;7668:96;;7427:344;:::o;7676:87::-;-1:-1:-1;;;;;577:2372:3;;;;;4607:18:33;577:2372:3;;;;;;;-1:-1:-1;4607:35:33;;:25;;577:2372:3;4607:35:33;577:2372:3;;7427:344:33;:::o;7676:51::-;7696:20;;;;;;;:::i;:::-;577:2372:3;7696:31:33;7676:51;;;;;;577:2372:3;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;8101:108:33;;577:2372:3;;;;;:::i;:::-;;;;-1:-1:-1;;;;;577:2372:3;;;9142:16:33;;577:2372:3;;-1:-1:-1;577:2372:3;;;7232:7:33;577:2372:3;;;;;;-1:-1:-1;;;;;577:2372:3;;;9311:7:33;;8604:54;9311:7;;;8583:151;9311:7;;:::i;:::-;-1:-1:-1;;;;;577:2372:3;;;;;;9330:9:33;577:2372:3;;;;;9330:18:33;577:2372:3;;9330:18:33;:::i;:::-;577:2372:3;;9358:21:33;:16;;;577:2372:3;;9358:7:33;577:2372:3;;;;;;;9358:16:33;577:2372:3;;-1:-1:-1;;;;;;577:2372:3;-1:-1:-1;;;;;577:2372:3;;;;;;;;;;9358:21:33;577:2372:3;9395:33:33;;;;8604:54;:::i;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9347:1:33;577:2372:3;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;2106:379;;2322:18;2106:379;2889:7:36;;;:::i;:::-;577:2372:3;-1:-1:-1;;;;;577:2372:3;;;;3084:7:36;;;;:::i;2322:18:3:-;;2106:379::o;3011:179:36:-;3171:7;;;:::i;2106:379:3:-;-1:-1:-1;;;;;577:2372:3;;;2823:18:36;;;577:2372:3;;;;2322:18;;2823::36;;;;;2889:7;;;;:::i;:::-;577:2372:3;;;3015:16:36;;;577:2372:3;;3015:16:36;;;;3084:7;;;;;;:::i;2322:18:3:-;577:2372;;2355:18;;:38;;;;3011:179:36;2351:128:3;;;2106:379;:::o;2351:128::-;2417:21;;2409:59;577:2372;;;;;;;;;;2417:21;;;;;;;;;2351:128;-1:-1:-1;2417:21:3;;;2351:128;577:2372;;2409:59;:::i;2417:21::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;2355:38;2377:16;;;2355:38;;;3011:179:36;3113:10;3109:81;;3011:179;;;577:2372:3;;1479:9;577:2372;;;;;;;3109:81:36;3171:7;;;:::i;:::-;3109:81;;;;2819:183;577:2372:3;;;2918:10:36;;2914:88;;2819:183;;;;2914:88;5609:34;4967:22;;;:::i;:::-;-1:-1:-1;;577:2372:3;;;;;;;2914:88:36;5609:18;577:2372:3;;;;;5024:17:36;577:2372:3;;;;;;5154:28:36;;;5150:323;;2914:88;5566:26;;;;577:2372:3;;5024:17:36;577:2372:3;;;;;;;5566:26:36;577:2372:3;-1:-1:-1;;;;;577:2372:3;;;;;5220:12:36;577:2372:3;;;;;;;5609:18:36;577:2372:3;;;;;;;;;;5609:34:36;577:2372:3;2914:88:36;;;5150:323;577:2372:3;;;5220:12:36;577:2372:3;;;;;;;;;;5385:30:36;577:2372:3;;;;5269:18:36;:30;:18;;;577:2372:3;;;;;;;;5220:12:36;577:2372:3;;;;;;;5269:30:36;577:2372:3;;;5024:17:36;577:2372:3;;;;;;;5385:30:36;577:2372:3;5150:323:36;;;577:2372:3;;;:::i;:::-;;;;-1:-1:-1;;577:2372:3;;;;;;;;:::o;9652:348:33:-;9727:23;;;:::i;:::-;2271:7:3;;;;:::i;:::-;577:2372;;;;1479:9;577:2372;;;;;;-1:-1:-1;;;;;577:2372:3;;;;;2355:18;;;;:38;;9652:348:33;2351:128:3;;9652:348:33;9868:7;;;;:::i;:::-;577:2372:3;;;;;9887:9:33;577:2372:3;;;;;;;;;;;;;;;;;9652:348:33;577:2372:3;;;;9925:7:33;577:2372:3;;;;;;;-1:-1:-1;;;;;;577:2372:3;;;9957:36:33;577:2372:3;;9957:36:33;9652:348::o;577:2372:3:-;;;:::i;:::-;;;2351:128;2417:21;;2409:59;577:2372;;;;;;;;;;2417:21;;;;;;;;;577:2372;2417:21;;;577:2372;;2409:59;:::i;:::-;2351:128;;;2355:38;;577:2372;2355:38;;577:2372;;;;:::o;:::-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;10324:560:33;;10451:23;;;:::i;:::-;-1:-1:-1;;;;;577:2372:3;;;;;;;;10451:31:33;;;577:2372:3;;10755:15:33;10813:21;577:2372:3;;;10546:16:33;10538:65;10546:16;;;10538:65;:::i;:::-;10645:7;;;;;:::i;:::-;10736;;;:::i;:::-;-1:-1:-1;;;;;577:2372:3;;;;;9330:9:33;577:2372:3;;;;;;;10755:15:33;:20;577:2372:3;;10755:20:33;:::i;:::-;577:2372:3;;-1:-1:-1;;;;;577:2372:3;;;;;;9330:9:33;577:2372:3;;;;;10785:18:33;577:2372:3;;10785:18:33;:::i;:::-;577:2372:3;;10813:16:33;;577:2372:3;;9358:7:33;577:2372:3;;;;;;;10813:21:33;10850:27;10560:1;10850:27;;10324:560::o;577:2372:3:-;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:2372:3;;;;;;;10995:171:33;577:2372:3;;;;11069:15:33;577:2372:3;;;;;;;-1:-1:-1;;;;;;577:2372:3;;;-1:-1:-1;;;;;11122:23:33;577:2372:3;11122:23:33;:::i;:::-;577:2372:3;11113:46:33;;;;10995:171::o;:::-;-1:-1:-1;577:2372:3;;;11069:15:33;577:2372:3;;;;;;;-1:-1:-1;;;;;;577:2372:3;-1:-1:-1;;;;;577:2372:3;;;;;-1:-1:-1;;;;;577:2372:3;11122:23:33;;;:::i;:::-;577:2372:3;;;11113:46:33;;-1:-1:-1;11113:46:33;;10995:171::o;577:2372:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;577:2372:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;577:2372:3;;;;:::o;:::-;;;:::o;12161:778:33:-;;;;1056:61:39;;1133:8;12331:15:33;;12366:72;;577:2372:3;;;;;;;;;;;;;;12366:72:33;;;;719:10:40;12366:72:33;;;;:::i;:::-;;;-1:-1:-1;;;;;577:2372:3;12366:72:33;;577:2372:3;;12366:72:33;;;12327:606;-1:-1:-1;12362:519:33;;12555:326;;:::i;:::-;577:2372:3;;;12605:18:33;;;577:2372:3;;-1:-1:-1;;;12647:60:33;;577:2372:3;12647:60:33;12366:72;12647:60;;;:::i;12601:266::-;12366:72;12754:95;;12362:519;-1:-1:-1;;;;;;577:2372:3;12488:51:33;;12481:58::o;12366:72::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;12327:606;12911:11;;;12918:4;12911:11;:::o;12161:778::-;;;;;1056:61:39;;1133:8;12331:15:33;;12366:72;577:2372:3;12366:72:33;577:2372:3;;;;;;;;;;;;;12366:72:33;;;;719:10:40;12366:72:33;;;;:::i;12327:606::-;12911:11;;;;12918:4;12911:11;:::o;577:2372:3:-;;;;;;;;;;;;;2624:572:36;3084:7;;2624:572;-1:-1:-1;;;;;577:2372:3;;;2823:18:36;;;2889:7;;;;;:::i;:::-;3084;:::i;2819:183::-;4967:22;5609:18;4967:22;5609:34;4967:22;;:::i;:::-;-1:-1:-1;;577:2372:3;;;;;;;;2819:183:36;577:2372:3;;;;;5024:17:36;577:2372:3;;;;;;5154:28:36;;;;5150:323;;2819:183;5566:26;;;;;577:2372:3;;5024:17:36;577:2372:3;;;;;;;5609:34:36;577:2372:3;3084:7:36;:::i;5150:323::-;577:2372:3;;5220:12:36;577:2372:3;;;;;;;;;;5385:30:36;577:2372:3;;;;5269:18:36;:30;:18;;;577:2372:3;;;;;;;;5220:12:36;577:2372:3;;;;;;;5385:30:36;577:2372:3;5150:323:36;;;;577:2372:3;;;:::i;:::-;;;3490:217:36;577:2372:3;3490:217:36;3591:20;;;:::i;:::-;-1:-1:-1;;577:2372:3;;;;;;;;;3621:12:36;577:2372:3;;;;;;;;;;;;;;;;;3665:17:36;577:2372:3;;;;3490:217:36:o;3902:161::-;4005:10;577:2372:3;;-1:-1:-1;577:2372:3;3978:15:36;577:2372:3;;;;-1:-1:-1;577:2372:3;;;;;;;;3902:161:36;577:2372:3;;;;4005:10:36;577:2372:3;;;;;;3902:161:36;4005:10;-1:-1:-1;577:2372:3;;;;3902:161:36:o;577:2372:3:-;;;:::i;:::-;;;;;;:::i;:::-;;;5938:1061:36;6212:10;577:2372:3;;-1:-1:-1;;577:2372:3;;;;;;;;;;5938:1061:36;6942:24;577:2372:3;;;;;;;6264:15:36;577:2372:3;;;;;;;;;;;;5938:1061:36;577:2372:3;;;6773:28:36;577:2372:3;;;;;;;;;;;;5938:1061:36;577:2372:3;;;;;;;;;;6264:15:36;577:2372:3;;;;;;;6773:28:36;577:2372:3;;;6264:15:36;577:2372:3;;;;;;;6942:24:36;577:2372:3;;;;;;;;;;;;;;;;;5938:1061:36;577:2372:3;;;;;;5938:1061:36:o;577:2372:3:-;;;:::i;:::-;;;;-1:-1:-1;;;577:2372:3;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;1777:1:41;577:2372:3;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;;-1:-1:-1;;577:2372:3;;:::o;:::-;;;:::i;:::-;;;208:18:41;;;;:::o;:::-;;577:2372:3;;;;;208:18:41;;;;;;;;;;;577:2372:3;208:18:41;577:2372:3;;;208:18:41;;1588:441;577:2372:3;;;;;;;;;;;;;;;1588:441:41;577:2372:3;;;;;;;;;;;1745:15:41;;;;:::i;:::-;;1770;;;;:::i;:::-;;577:2372:3;1795:132:41;1828:5;9347:1:33;1828:5:41;;;;1936:55;1944:10;;;1936:55;:::i;1835:3::-;1879:11;1887:3;1835;1879:11;;1866:25;;;;;;1835:3;-1:-1:-1;;;1866:25:41;;1854:37;;;;:::i;1835:3::-;1800:26;;;1866:25;;;:::i;:::-;;;577:2372:3;;;:::i;:::-;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "exists(uint256)": "4f558e79",
    "getApproved(uint256)": "081812fc",
    "getPoolById(uint256)": "0bc59b38",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "poolByIds(uint256)": "1dc82a75",
    "renderTokenById(uint256)": "a2d6c6da",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"frensStorage_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getPoolById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolByIds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"renderTokenById\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrensPoolShare.sol\":\"FrensPoolShare\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0xd9cf40079e536a33b1075c17437611940814deea6d5ba4e29e3cd2bd569c3e7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf7a61ede2dbdf410561907336f30b1051f4335da5fa52bf138c70aafb0d67d\",\"dweb:/ipfs/QmXKzSXr4MppdAXzhLS3CCKnT8jcEH4Qbq9g3TxLez7ZZv\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x39505e8b566da73b07b6f11e72e17e8fe4f195b371bc38e8d6aa7c83044a6456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ce8f156ca2b9fef1b683581dd8f7d6ae1e54ad05613c0dbeedd56c2008f67b6\",\"dweb:/ipfs/QmeC2HKSJAGKCP1Uoir3ykuMFeSVQQLDfxQ9N87LBNNLrg\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x5be82a202873c792bcf47db774c09eac8b231d7039fa05cfe66d7bc308608eb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e998b95a27a694fa84c46aac7b5a00ddddf9801f709b9e4507216d80fa8eca\",\"dweb:/ipfs/QmTdpt18NmPuFuUTqt1Ddpejhd4brRQ1MJT9WLwCB5kjTN\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x99fcb22e7c7a93607fc2802dc74e2d96b6f1aa251918bb27211ad33b61bb5a5c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://970a9a34229ba42eadf60cd7a40b1f46fa54d30642ffa5938230312386f66fae\",\"dweb:/ipfs/QmaKjqpMmGr11cc3rEebVH6cJ6GtfBiXnrhDY4WeNPjHrU\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x9c1fde0bb6fec8f684ee091ee181807fb74a28945e70c06761b504f79b5371a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4450e2936d49c9fe321994e4684ddfb5a684b5c530a21f7d9afba9f1ba95bf5d\",\"dweb:/ipfs/QmXgAedVuHVhjr7X3Utpi6DojqZH4oj5RR1Z4aZ98c6twc\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "frensStorage_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolById",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolByIds",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "renderTokenById",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenByIndex(uint256)": {
            "details": "See {IERC721Enumerable-tokenByIndex}."
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
          },
          "totalSupply()": {
            "details": "See {IERC721Enumerable-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/FrensPoolShare.sol": "FrensPoolShare"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0xd9cf40079e536a33b1075c17437611940814deea6d5ba4e29e3cd2bd569c3e7e",
        "urls": [
          "bzz-raw://cdf7a61ede2dbdf410561907336f30b1051f4335da5fa52bf138c70aafb0d67d",
          "dweb:/ipfs/QmXKzSXr4MppdAXzhLS3CCKnT8jcEH4Qbq9g3TxLez7ZZv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x39505e8b566da73b07b6f11e72e17e8fe4f195b371bc38e8d6aa7c83044a6456",
        "urls": [
          "bzz-raw://5ce8f156ca2b9fef1b683581dd8f7d6ae1e54ad05613c0dbeedd56c2008f67b6",
          "dweb:/ipfs/QmeC2HKSJAGKCP1Uoir3ykuMFeSVQQLDfxQ9N87LBNNLrg"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x5be82a202873c792bcf47db774c09eac8b231d7039fa05cfe66d7bc308608eb4",
        "urls": [
          "bzz-raw://b4e998b95a27a694fa84c46aac7b5a00ddddf9801f709b9e4507216d80fa8eca",
          "dweb:/ipfs/QmTdpt18NmPuFuUTqt1Ddpejhd4brRQ1MJT9WLwCB5kjTN"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x99fcb22e7c7a93607fc2802dc74e2d96b6f1aa251918bb27211ad33b61bb5a5c",
        "urls": [
          "bzz-raw://970a9a34229ba42eadf60cd7a40b1f46fa54d30642ffa5938230312386f66fae",
          "dweb:/ipfs/QmaKjqpMmGr11cc3rEebVH6cJ6GtfBiXnrhDY4WeNPjHrU"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x9c1fde0bb6fec8f684ee091ee181807fb74a28945e70c06761b504f79b5371a6",
        "urls": [
          "bzz-raw://4450e2936d49c9fe321994e4684ddfb5a684b5c530a21f7d9afba9f1ba95bf5d",
          "dweb:/ipfs/QmXgAedVuHVhjr7X3Utpi6DojqZH4oj5RR1Z4aZ98c6twc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849",
        "urls": [
          "bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663",
          "dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/FrensPoolShare.sol",
    "id": 867,
    "exportedSymbols": {
      "AccessControl": [
        26569
      ],
      "Address": [
        28408
      ],
      "Context": [
        28430
      ],
      "ERC165": [
        28657
      ],
      "ERC721": [
        27581
      ],
      "ERC721Enumerable": [
        28053
      ],
      "FrensPoolShare": [
        866
      ],
      "IAccessControl": [
        26642
      ],
      "IERC165": [
        28669
      ],
      "IERC721": [
        27697
      ],
      "IERC721Enumerable": [
        28084
      ],
      "IERC721Metadata": [
        28111
      ],
      "IERC721Receiver": [
        27715
      ],
      "IFrensArt": [
        2684
      ],
      "IFrensPoolShare": [
        2793
      ],
      "IFrensPoolShareTokenURI": [
        2803
      ],
      "IFrensStorage": [
        2890
      ],
      "IStakingPool": [
        3012
      ],
      "Ownable": [
        26747
      ],
      "Strings": [
        28633
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2918:3",
    "nodes": [
      {
        "id": 603,
        "nodeType": "PragmaDirective",
        "src": "32:31:3",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 604,
        "nodeType": "ImportDirective",
        "src": "65:50:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensPoolShareTokenURI.sol",
        "file": "./interfaces/IFrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 2804,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 605,
        "nodeType": "ImportDirective",
        "src": "116:36:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensArt.sol",
        "file": "./interfaces/IFrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 2685,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 606,
        "nodeType": "ImportDirective",
        "src": "153:42:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensPoolShare.sol",
        "file": "./interfaces/IFrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 2794,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 607,
        "nodeType": "ImportDirective",
        "src": "196:39:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPool.sol",
        "file": "./interfaces/IStakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 3013,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 608,
        "nodeType": "ImportDirective",
        "src": "236:40:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensStorage.sol",
        "file": "./interfaces/IFrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 2891,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 609,
        "nodeType": "ImportDirective",
        "src": "277:78:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 28054,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 610,
        "nodeType": "ImportDirective",
        "src": "356:58:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 26570,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 611,
        "nodeType": "ImportDirective",
        "src": "415:52:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 867,
        "sourceUnit": 26748,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 866,
        "nodeType": "ContractDefinition",
        "src": "577:2372:3",
        "nodes": [
          {
            "id": 624,
            "nodeType": "VariableDeclaration",
            "src": "684:62:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5391393",
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "708:11:3",
            "scope": 866,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 620,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "684:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 622,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "732:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 621,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "722:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 623,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "722:24:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 627,
            "nodeType": "VariableDeclaration",
            "src": "757:26:3",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "771:12:3",
            "scope": 866,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFrensStorage_$2890",
              "typeString": "contract IFrensStorage"
            },
            "typeName": {
              "id": 626,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 625,
                "name": "IFrensStorage",
                "nameLocations": [
                  "757:13:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2890,
                "src": "757:13:3"
              },
              "referencedDeclaration": 2890,
              "src": "757:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                "typeString": "contract IFrensStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 631,
            "nodeType": "VariableDeclaration",
            "src": "790:41:3",
            "nodes": [],
            "baseFunctions": [
              2754
            ],
            "constant": false,
            "functionSelector": "1dc82a75",
            "mutability": "mutable",
            "name": "poolByIds",
            "nameLocation": "822:9:3",
            "scope": 866,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 630,
              "keyType": {
                "id": 628,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "798:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "790:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 629,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "806:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 652,
            "nodeType": "FunctionDefinition",
            "src": "838:170:3",
            "nodes": [],
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "910:98:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 641,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "920:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 642,
                      "name": "frensStorage_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "935:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "src": "920:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "920:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 646,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26288,
                        "src": "969:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 647,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "989:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "993:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "989:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 645,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26477,
                      "src": "958:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "958:42:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4652454e53205368617265",
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "886:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ecbecac469104f4d50b6cdee80edb575321dc69156ea71f439031a32c50b4b3c",
                      "typeString": "literal_string \"FRENS Share\""
                    },
                    "value": "FRENS Share"
                  },
                  {
                    "hexValue": "4652454e53",
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "901:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8bd933cac16115dfc04a1aff836f3905cc5e73305ea8e74c23868f6c7eabf6aa",
                      "typeString": "literal_string \"FRENS\""
                    },
                    "value": "FRENS"
                  }
                ],
                "id": 639,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 636,
                  "name": "ERC721",
                  "nameLocations": [
                    "879:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27581,
                  "src": "879:6:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "879:30:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "frensStorage_",
                  "nameLocation": "864:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "850:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 633,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 632,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "850:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2890,
                      "src": "850:13:3"
                    },
                    "referencedDeclaration": 2890,
                    "src": "850:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "849:29:3"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:0:3"
            },
            "scope": 866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 687,
            "nodeType": "FunctionDefinition",
            "src": "1014:285:3",
            "nodes": [],
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "1056:243:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 659,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "1095:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 660,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1108:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1112:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1108:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 658,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26342,
                          "src": "1087:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1087:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1133:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "id": 657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1066:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:106:3"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "1190:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 686,
                      "src": "1182:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1182:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 668,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27804,
                      "src": "1196:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1182:27:3"
                },
                {
                  "expression": {
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 671,
                        "name": "poolByIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "1219:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 673,
                      "indexExpression": {
                        "id": 672,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "1229:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1219:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 676,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1244:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1248:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1244:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1236:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1236:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1236:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1219:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:36:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 682,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "1275:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 683,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "1288:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 681,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27245,
                        27274
                      ],
                      "referencedDeclaration": 27245,
                      "src": "1265:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:27:3"
                }
              ]
            },
            "baseFunctions": [
              2759
            ],
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1023:4:3",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "1036:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "1028:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:21:3"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:3"
            },
            "scope": 866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 699,
            "nodeType": "FunctionDefinition",
            "src": "1305:89:3",
            "nodes": [],
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "1358:36:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 695,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "1383:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 694,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27189,
                      "src": "1375:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 693,
                  "id": 697,
                  "nodeType": "Return",
                  "src": "1368:19:3"
                }
              ]
            },
            "baseFunctions": [
              2771
            ],
            "functionSelector": "4f558e79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nameLocation": "1314:6:3",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1326:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "1321:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:10:3"
            },
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "1352:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1351:6:3"
            },
            "scope": 866,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 712,
            "nodeType": "FunctionDefinition",
            "src": "1400:101:3",
            "nodes": [],
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "1461:40:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 706,
                          "name": "poolByIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "1479:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 708,
                        "indexExpression": {
                          "id": 707,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "1489:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1479:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 709,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1478:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 705,
                  "id": 710,
                  "nodeType": "Return",
                  "src": "1471:23:3"
                }
              ]
            },
            "baseFunctions": [
              2778
            ],
            "functionSelector": "0bc59b38",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolById",
            "nameLocation": "1409:11:3",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1426:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "1421:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1420:10:3"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "1452:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1451:9:3"
            },
            "scope": 866,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 744,
            "nodeType": "FunctionDefinition",
            "src": "1507:355:3",
            "nodes": [],
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "1621:241:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "frensPoolShareTokenURI",
                      "nameLocation": "1655:22:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "1631:46:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2803",
                        "typeString": "contract IFrensPoolShareTokenURI"
                      },
                      "typeName": {
                        "id": 723,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 722,
                          "name": "IFrensPoolShareTokenURI",
                          "nameLocations": [
                            "1631:23:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2803,
                          "src": "1631:23:3"
                        },
                        "referencedDeclaration": 2803,
                        "src": "1631:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2803",
                          "typeString": "contract IFrensPoolShareTokenURI"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "636f6e74726163742e61646472657373",
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1755:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                      "typeString": "literal_string \"contract.address\""
                                    },
                                    "value": "contract.address"
                                  },
                                  {
                                    "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                    "id": 732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1775:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                      "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                    },
                                    "value": "FrensPoolShareTokenURI"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                      "typeString": "literal_string \"contract.address\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                      "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 729,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1738:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1742:12:3",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1738:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1738:62:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 728,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1728:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1728:73:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 726,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "1704:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFrensStorage_$2890",
                              "typeString": "contract IFrensStorage"
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1717:10:3",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2825,
                          "src": "1704:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1704:98:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 725,
                      "name": "IFrensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2803,
                      "src": "1680:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFrensPoolShareTokenURI_$2803_$",
                        "typeString": "type(contract IFrensPoolShareTokenURI)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2803",
                      "typeString": "contract IFrensPoolShareTokenURI"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1631:172:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 740,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "1852:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 738,
                        "name": "frensPoolShareTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "1820:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2803",
                          "typeString": "contract IFrensPoolShareTokenURI"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1843:8:3",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2802,
                      "src": "1820:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 721,
                  "id": 742,
                  "nodeType": "Return",
                  "src": "1813:42:3"
                }
              ]
            },
            "baseFunctions": [
              2785,
              26958
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1516:8:3",
            "overrides": {
              "id": 718,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 716,
                  "name": "ERC721",
                  "nameLocations": [
                    "1572:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27581,
                  "src": "1572:6:3"
                },
                {
                  "id": 717,
                  "name": "IFrensPoolShare",
                  "nameLocations": [
                    "1580:15:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2793,
                  "src": "1580:15:3"
                }
              ],
              "src": "1563:33:3"
            },
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1542:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1534:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:26:3"
            },
            "returnParameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1606:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:15:3"
            },
            "scope": 866,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 773,
            "nodeType": "FunctionDefinition",
            "src": "1868:232:3",
            "nodes": [],
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "1941:159:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1964:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "1951:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3012",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 752,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 751,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "1951:12:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3012,
                          "src": "1951:12:3"
                        },
                        "referencedDeclaration": 3012,
                        "src": "1951:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3012",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 756,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "1996:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 755,
                          "name": "getPoolById",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "1984:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1984:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 754,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3012,
                      "src": "1971:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3012_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3012",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1951:49:3"
                },
                {
                  "assignments": [
                    762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 762,
                      "mutability": "mutable",
                      "name": "frensArt",
                      "nameLocation": "2020:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "2010:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensArt_$2684",
                        "typeString": "contract IFrensArt"
                      },
                      "typeName": {
                        "id": 761,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 760,
                          "name": "IFrensArt",
                          "nameLocations": [
                            "2010:9:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2684,
                          "src": "2010:9:3"
                        },
                        "referencedDeclaration": 2684,
                        "src": "2010:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$2684",
                          "typeString": "contract IFrensArt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 766,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 763,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "2031:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3012",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2036:10:3",
                      "memberName": "artForPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2939,
                      "src": "2031:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IFrensArt_$2684_$",
                        "typeString": "function () view external returns (contract IFrensArt)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensArt_$2684",
                      "typeString": "contract IFrensArt"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2010:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "2090:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 767,
                        "name": "frensArt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "2065:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$2684",
                          "typeString": "contract IFrensArt"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2074:15:3",
                      "memberName": "renderTokenById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2683,
                      "src": "2065:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 750,
                  "id": 771,
                  "nodeType": "Return",
                  "src": "2058:35:3"
                }
              ]
            },
            "baseFunctions": [
              2792
            ],
            "functionSelector": "a2d6c6da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renderTokenById",
            "nameLocation": "1877:15:3",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1901:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "1893:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:12:3"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "1926:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1925:15:3"
            },
            "scope": 866,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 825,
            "nodeType": "FunctionDefinition",
            "src": "2106:379:3",
            "nodes": [],
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "2224:261:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 786,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2261:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 787,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "2267:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 788,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "2271:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 783,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2234:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_FrensPoolShare_$866_$",
                          "typeString": "type(contract super FrensPoolShare)"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2240:20:3",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27891,
                      "src": "2234:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2234:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "2234:45:3"
                },
                {
                  "assignments": [
                    793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2302:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 824,
                      "src": "2289:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3012",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 792,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 791,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "2289:12:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3012,
                          "src": "2289:12:3"
                        },
                        "referencedDeclaration": 3012,
                        "src": "2289:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3012",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 799,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 795,
                          "name": "poolByIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "2322:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 797,
                        "indexExpression": {
                          "id": 796,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "2332:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2322:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 794,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3012,
                      "src": "2309:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3012_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3012",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2289:52:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 800,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2355:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2371:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2363:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2363:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2363:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2355:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 806,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "2377:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2391:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2383:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2383:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2383:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2377:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2355:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 823,
                  "nodeType": "IfStatement",
                  "src": "2351:128:3",
                  "trueBody": {
                    "id": 822,
                    "nodeType": "Block",
                    "src": "2395:84:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 814,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 793,
                                    "src": "2417:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakingPool_$3012",
                                      "typeString": "contract IStakingPool"
                                    }
                                  },
                                  "id": 815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2422:14:3",
                                  "memberName": "transferLocked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2933,
                                  "src": "2417:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                    "typeString": "function () view external returns (bool)"
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2417:21:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2442:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "2417:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f74207472616e7366657261626c65",
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2449:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc5adcc6364a36f166c628224ef3f0e42e4865e6c0f9c19b8035158c5353f4f0",
                                "typeString": "literal_string \"not transferable\""
                              },
                              "value": "not transferable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc5adcc6364a36f166c628224ef3f0e42e4865e6c0f9c19b8035158c5353f4f0",
                                "typeString": "literal_string \"not transferable\""
                              }
                            ],
                            "id": 813,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2409:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2409:59:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "2409:59:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              27891
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2115:20:3",
            "overrides": {
              "id": 781,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2215:8:3"
            },
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2153:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "2145:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2175:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "2167:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2192:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "2187:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:70:3"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2224:0:3"
            },
            "scope": 866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 848,
            "nodeType": "FunctionDefinition",
            "src": "2491:199:3",
            "nodes": [],
            "body": {
              "id": 847,
              "nodeType": "Block",
              "src": "2526:164:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 831,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2557:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2561:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2557:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 835,
                                "name": "poolByIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "2579:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 837,
                              "indexExpression": {
                                "id": 836,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 827,
                                "src": "2589:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2579:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2571:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2571:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2571:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2557:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6f6c73",
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2612:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3feaaf2056280d91c2d646c181396d9292c35880029cebf37f8765fc0aacf7a2",
                          "typeString": "literal_string \"cannot burn shares from other pools\""
                        },
                        "value": "cannot burn shares from other pools"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3feaaf2056280d91c2d646c181396d9292c35880029cebf37f8765fc0aacf7a2",
                          "typeString": "literal_string \"cannot burn shares from other pools\""
                        }
                      ],
                      "id": 830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2536:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2536:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "2536:123:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 844,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "2675:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 843,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27382,
                      "src": "2669:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:14:3"
                }
              ]
            },
            "baseFunctions": [
              2764
            ],
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2500:4:3",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2510:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "2505:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:14:3"
            },
            "returnParameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2526:0:3"
            },
            "scope": 866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 865,
            "nodeType": "FunctionDefinition",
            "src": "2696:251:3",
            "nodes": [],
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "2887:60:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 861,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "2928:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 859,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2904:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_FrensPoolShare_$866_$",
                          "typeString": "type(contract super FrensPoolShare)"
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2910:17:3",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26323,
                      "src": "2904:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2904:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 858,
                  "id": 863,
                  "nodeType": "Return",
                  "src": "2897:43:3"
                }
              ]
            },
            "baseFunctions": [
              26323,
              27765,
              28668
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2705:17:3",
            "overrides": {
              "id": 855,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 852,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "2818:16:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28053,
                  "src": "2818:16:3"
                },
                {
                  "id": 853,
                  "name": "AccessControl",
                  "nameLocations": [
                    "2836:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26569,
                  "src": "2836:13:3"
                },
                {
                  "id": 854,
                  "name": "IERC165",
                  "nameLocations": [
                    "2851:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28669,
                  "src": "2851:7:3"
                }
              ],
              "src": "2809:50:3"
            },
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2739:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "2732:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2722:34:3"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "2877:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2876:6:3"
            },
            "scope": 866,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 612,
              "name": "IFrensPoolShare",
              "nameLocations": [
                "608:15:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2793,
              "src": "608:15:3"
            },
            "id": 613,
            "nodeType": "InheritanceSpecifier",
            "src": "608:15:3"
          },
          {
            "baseName": {
              "id": 614,
              "name": "ERC721Enumerable",
              "nameLocations": [
                "629:16:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28053,
              "src": "629:16:3"
            },
            "id": 615,
            "nodeType": "InheritanceSpecifier",
            "src": "629:16:3"
          },
          {
            "baseName": {
              "id": 616,
              "name": "AccessControl",
              "nameLocations": [
                "651:13:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26569,
              "src": "651:13:3"
            },
            "id": 617,
            "nodeType": "InheritanceSpecifier",
            "src": "651:13:3"
          },
          {
            "baseName": {
              "id": 618,
              "name": "Ownable",
              "nameLocations": [
                "670:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26747,
              "src": "670:7:3"
            },
            "id": 619,
            "nodeType": "InheritanceSpecifier",
            "src": "670:7:3"
          }
        ],
        "canonicalName": "FrensPoolShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          866,
          26747,
          26569,
          28053,
          2793,
          28084,
          27581,
          28111,
          27697,
          28657,
          28669,
          26642,
          28430
        ],
        "name": "FrensPoolShare",
        "nameLocation": "586:14:3",
        "scope": 867,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 3
}